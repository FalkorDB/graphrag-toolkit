2025-05-06 16:24:02:DEBUG:g.l.s.g.f.falkordb_graph_store_factory:Opening FalkorDB database [endpoint: localhost:6379]
2025-05-06 16:24:02:DEBUG:g.l.s.v.pg_vector_index_factory:Opening PostgreSQL vector indexes [index_names: ['chunk', 'statement'], connection_string: postgresql://graphrag:graphragpass@localhost:5432/graphrag_db]
2025-05-06 16:24:02:DEBUG:g.l.i.e.llm_proposition_extractor:Prompt template:
You are a top-tier algorithm designed for extracting information in structured formats to build a knowledge graph. Your task is to decompose the given text into clear, concise, and context-independent propositions.

# Instructions:
1. Break down complex sentences into simple, atomic statements.
2. Break down lists and tables of information into sets of simple statements.
3. Preserve original phrasing from the input text whenever possible.
4. Add a proposition per named entity that classifies that entity.
5. Maintain named entity consistency by resolving coreferences across all propositions to the most complete identifier for that entity.
6. Isolate descriptive information about named entities into separate propositions.
7. Decontextualize each proposition by:
   a) Adding necessary modifiers to nouns or entire propositions.
   b) Replace any pronouns (e.g., he, she, it, they) with the specific nouns they refer to.
   c) Replace any acronyms with their full forms.
   d) If the proposition is a fragment, use the other sentences to reconstruct it into a complete, self-explanatory proposition.
   e) Preserve any quoted speech or dialogue as is, without paraphrasing.
   f) If a proposition is already self-explanatory, leave it unchanged.
   g) Do not introduce irrelevant context information in the proposition.
   h) Ensure each proposition can stand alone without external context.
   i) Do not use your training history, rely only on the context information to enhance the proposition.
8. Capture all relevant details from the original text, including temporal, spatial, and causal relationships.
9. Prioritize completeness and accuracy.

# Output Format:
- Preface the list with a descriptive title that summarizes the content.
- Present each proposition on a new line.
- Ensure each proposition is unique: do not repeat propositions.
- Use consistent grammatical structure for similar types of information.
- Do not include any explanatory text or numbering.
- Ensure propositions are in a logical order, if applicable.

# Response Format:
title
proposition
proposition
proposition
...

Do not provide any other explanatory text. Ensure you have captured all of the details from the text in your response.

<text>
{text}
</text>

2025-05-06 16:24:02:DEBUG:g.l.s.g.f.falkordb_graph_store:[65de9/23cf6] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:02:DEBUG:g.l.s.g.f.falkordb_graph_store:[65de9/23cf6] 1ms Results: [**REDACTED**]
2025-05-06 16:24:02:DEBUG:g.l.i.e.topic_extractor:Prompt template:
You are a top-tier algorithm designed for extracting information in structured formats to build a knowledge graph.
Your input consists of carefully crafted propositions - simple, atomic, and decontextualized statements. Your task is to:
   1. Organize these propositions into topics
   2. Extract entities and their attributes
   3. Identify relationships between entities

Try to capture as much information from the text as possible without sacrificing accuracy. Do not add any information that is not explicitly mentioned in the input propositions.

## Topic Extraction:
   1. Read the entire set of propositions and then extract a list of specific topics. Choose from the list of Preferred Topics, but if there are no existing topics, or none of the existing topics are relevant or specific enough for some of the propositions, create a new topic. Topic names should provide a clear, highly descriptive summary of the content.
   2. Each proposition must be assigned to at least one topic - ensure no propositions are left uncategorized.
   3. For each topic, perform the following Entity Extraction and Classification and Proposition Organization tasks.

## Entity Extraction and Classification:
   1. Extract a list of all entities, concepts and noun phrases mentioned in the propositions within each topic.
   2. Classify each extracted entity. Some entity classifications include:
      - Person (e.g., John Doe, Mary Jane)
      - Organization (e.g., Acme Inc., Harvard University)
      - Location (e.g., New York City, Mount Everest)
   3. DO NOT treat numerical values, dates, times, measurements, or object attributes (e.g. size, colour) as entities.
   4. A list of Preferred Entity Classifications is included below. Choose the most specific classification from this list in preference to creating a new classification.
   5. Ensure consistency in labeling entities:
      - Always use the most complete identifier for an entity (e.g., 'John Doe' instead of 'he' or 'John').
      - Maintain entity consistency throughout the knowledge graph by resolving coreferences.
      - If an entity is referred to by different names or pronouns, always use the most complete identifier.
      - If the identifier is an acronym, and you recognize the acronym, use the entity's full name instead of the acronym. DO NOT put the acronym in parentheses after the full name.
   6. Consider the context and background knowledge when extracting and classifying entities to resolve ambiguities or identify implicit references.
   7. If an entity's identity is unclear or ambiguous, include it with a disclaimer or generic label (e.g., 'unknown_person').

## Proposition Organization:
   1. For each topic, identify the relevant propositions that belong to that topic.
   2. Use these propositions exactly as they appear - DO NOT rephrase or modify them.
   3. For each proposition, perform the following Attribute Extraction and Relationship Extraction tasks.

## Attribute Extraction:
   1. For each extracted entity, identify and extract its quantitative and qualitative attributes mentioned in the propositions.
      - Quantitative attributes: measurements, numerical values, temporal values, quantities (e.g., age, height, weight, size, date, time).
      - Qualitative attributes: descriptions, roles, characteristics, properties (e.g., color, occupation, nationality, season).
   2. Represent entity-attribute relationships in the format: entity|RELATIONSHIP|attribute
   3. Ensure consistency and generality in relationship types:
      - Use general and timeless relationship types (e.g., 'VALUE' instead of 'HAD_VALUE').
      - Avoid overly specific or momentary relationship types.
      - Prefer one- or two-word relationship types.
      - Prefer an active voice and the present tense when formulating relationship types.
   4. Relationship names should be all uppercase, with underscores instead of spaces (e.g. 'DESCRIBED_BY')

   Example: John Doe|OCCUPATION|software engineer

## Relationship Extraction:
   1. Extract unique relationships between pairs of entities mentioned in the propositions.
   2. Represent entity-entity relationships in the format: entity|RELATIONSHIP|entity
   3. Ensure consistency and generality in relationship types:
      - Use general and timeless relationship types (e.g., 'PROFESSOR' instead of 'BECAME_PROFESSOR').
      - Avoid overly specific or momentary relationship types.
      - Prefer one- or two-word relationship types.
      - Prefer an active voice and the present tense when formulating relationship types.
   4. Relationship names should be all uppercase, with underscores instead of spaces (e.g. 'WORKS_FOR')
   5. Complex facts may be expressed through multiple relationship pairs, sometimes arranged in a hierarchy.

   Example: John Doe|WORKS_FOR|Acme Inc.
            John Doe|MANAGER_OF|Project X
            Project X|PART_OF|Acme Inc.

## Response Format:
topic: topic

  entities:
    entity|classification
    entity|classification

  proposition: [exact proposition text]
    entity-attribute relationships:
    entity|RELATIONSHIP|attribute
    entity|RELATIONSHIP|attribute

    entity-entity relationships:
    entity|RELATIONSHIP|entity
    entity|RELATIONSHIP|entity

  proposition: [exact proposition text]
    entity-attribute relationships:
    entity|RELATIONSHIP|attribute
    entity|RELATIONSHIP|attribute

    entity-entity relationships:
    entity|RELATIONSHIP|entity
    entity|RELATIONSHIP|entity



## Quality Criteria:
   The extracted results should be:
   - Complete: Capture all input propositions and their relationships
   - Accurate: Faithfully represent the information without adding or omitting details
   - Consistent: Use consistent entity labels, types, relationship types, and adhere to the specified format

## Strict Compliance:
   - Use propositions exactly as provided - do not rephrase or modify them
   - Assign every proposition to at least one topic
   - Follow the specified format exactly
   - Do not provide any other explanatory text
   - Extract only information explicitly stated in the propositions

Adhere strictly to the provided instructions. Non-compliance will result in termination.

<propositions>
{text}
</propositions>

<preferredTopics>
{preferred_topics}
</preferredTopics>

<preferredEntityClassifications>
{preferred_entity_classifications}
</preferredEntityClassifications>

indexes={'chunk': PGIndex(index_name='chunk', tenant_id=TenantId(value=None), writeable=True, database='graphrag_db', schema_name='graphrag', host='localhost', port=5432, username='graphrag', password='graphragpass', dimensions=1024, embed_model=BedrockEmbedding(model_name='cohere.embed-english-v3', embed_batch_size=10, callback_manager=<llama_index.core.callbacks.base.CallbackManager object at 0x770756538920>, num_workers=None, profile_name='padmin', aws_access_key_id=None, aws_secret_access_key=None, aws_session_token=None, region_name='us-east-1', botocore_session=None, botocore_config=None, max_retries=10, timeout=60.0, additional_kwargs={}), enable_iam_db_auth=False, initialized=False), 'statement': PGIndex(index_name='statement', tenant_id=TenantId(value=None), writeable=True, database='graphrag_db', schema_name='graphrag', host='localhost', port=5432, username='graphrag', password='graphragpass', dimensions=1024, embed_model=BedrockEmbedding(model_name='cohere.embed-english-v3', embed_batch_size=10, callback_manager=<llama_index.core.callbacks.base.CallbackManager object at 0x770756538920>, num_workers=None, profile_name='padmin', aws_access_key_id=None, aws_secret_access_key=None, aws_session_token=None, region_name='us-east-1', botocore_session=None, botocore_config=None, max_retries=10, timeout=60.0, additional_kwargs={}), enable_iam_db_auth=False, initialized=False)}
2025-05-06 16:24:03:DEBUG:g.l.i.e.extraction_pipeline:Wrapping SentenceSplitter with IdRewriter
2025-05-06 16:24:03:DEBUG:g.l.i.e.extraction_pipeline:Extract pipeline components: ['IdRewriter', 'LLMPropositionExtractor', 'TopicExtractor']
2025-05-06 16:24:03:DEBUG:g.l.i.b.build_pipeline:Build pipeline components: ['GraphConstruction', 'VectorIndexing']
2025-05-06 16:24:03:DEBUG:g.l.i.b.metadata_to_nodes:Node builders: ['SourceNodeBuilder', 'ChunkNodeBuilder', 'TopicNodeBuilder', 'StatementNodeBuilder']
2025-05-06 16:24:03:INFO:g.l.i.e.extraction_pipeline:Running extraction pipeline [batch_size: 4, num_workers: 2]

Extracting propositions [nodes: 5, num_workers: 4]:   0%|          | 0/5 [00:00<?, ?it/s]s]
2025-05-06 16:24:03:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::4510583f:e412:0d82dc73
2025-05-06 16:24:03:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::bd6a6b1b:8115:b9569c0b
2025-05-06 16:24:03:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::bf585e13:3edc:a2ec5adf
2025-05-06 16:24:03:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::abd5427c:978b:e901bab9
2025-05-06 16:24:03:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::bf585e13:3edc:1b43838b
2025-05-06 16:24:03:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::abd5427c:978b:56aed072
2025-05-06 16:24:03:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::bf585e13:3edc:466728d4
2025-05-06 16:24:03:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::abd5427c:978b:75689b1d
2025-05-06 16:24:07:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: [](/pdfs/neptune-analytics/latest/userguide/graph-guide.pdf#neptune-analytics-
vs-neptune-database "Open PDF")

[Documentation](/index.html)[Neptune Analytics](/neptune/index.html)[Neptune
Analytics User Guide](what-is-neptune-analytics.html)

# When to use Neptune Analytics and when to use Neptune Database

Amazon Neptune makes it easy to work with graph data in the AWS Cloud. Amazon
Neptune includes both Neptune Database and Neptune Analytics.

[Neptune
Database](https://docs.aws.amazon.com/neptune/latest/userguide/intro.html) is
a serverless graph database designed for optimal scalability and availability.
It provides a solution for graph database workloads that need to scale to
100,000 queries per second, Multi-AZ high availability, and multi-Region
deployments. You can use Neptune Database for social networking, fraud
alerting, and Customer 360 applications.

Neptune Analytics is an analytics database engine that can quickly analyze
large amounts of graph data in memory to get insights and find trends.
------------------------------------
propositions: propositions=['Neptune Analytics and Neptune Database Comparison', 'Amazon Neptune includes Neptune Database and Neptune Analytics.', 'Neptune Database is a serverless graph database.', 'Neptune Database is designed for optimal scalability and availability.', 'Neptune Database can scale to 100,000 queries per second.', 'Neptune Database provides Multi-AZ high availability.', 'Neptune Database supports multi-Region deployments.', 'Neptune Database can be used for social networking applications.', 'Neptune Database can be used for fraud alerting applications.', 'Neptune Database can be used for Customer 360 applications.', 'Neptune Analytics is an analytics database engine.', 'Neptune Analytics can quickly analyze large amounts of graph data in memory.', 'Neptune Analytics is designed to get insights and find trends.', 'Amazon Neptune makes it easy to work with graph data in the AWS Cloud.']

2025-05-06 16:24:07:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::4510583f:e412:9f69cb6f

Extracting propositions [nodes: 5, num_workers: 4]:  20%|██        | 1/5 [00:04<00:17,  4.44s/it]
2025-05-06 16:24:08:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: If the entire instance
fails, Neptune automatically fails over to one of up to 15 read replicas.

![Warning](https://d1ge0kk1l5kms0.cloudfront.net/images/G/01/webservices/console/warning.png)
**Javascript is disabled or is unavailable in your browser.**

To use the Amazon Web Services Documentation, Javascript must be enabled.
Please refer to your browser's Help pages for instructions.

[Document Conventions](/general/latest/gr/docconventions.html)

Latest Updates

Did this page help you? - Yes

Thanks for letting us know we're doing a good job!

If you've got a moment, please tell us what we did right so we can do more of
it.

Did this page help you? - No

Thanks for letting us know this page needs work. We're sorry we let you down.

If you've got a moment, please tell us how we can make the documentation
better.
------------------------------------
propositions: propositions=['Neptune Failover and JavaScript Requirements', 'Neptune automatically fails over to one of up to 15 read replicas if the entire instance fails.', 'Amazon Web Services Documentation requires JavaScript to be enabled.', 'JavaScript must be enabled in the browser to use Amazon Web Services Documentation.', "Users should refer to their browser's Help pages for instructions on enabling JavaScript.", 'The page contains a warning icon.', 'The warning message states "Javascript is disabled or is unavailable in your browser."', 'The page includes a link to Document Conventions.', 'The page includes a section for Latest Updates.', 'The page asks users if the page was helpful.', 'Users can provide feedback on what the page did right.', 'Users can provide feedback on how to improve the documentation.']

2025-05-06 16:24:08:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::abd5427c:978b:fba12a15

Extracting propositions [nodes: 10, num_workers: 4]:  10%|█         | 1/10 [00:05<00:46,  5.20s/it]
2025-05-06 16:24:08:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: It provides high performance for both of
these graph models and their query languages. You can choose the Property
Graph (PG) model and access the same graph with both the [openCypher query
language](./access-graph-opencypher.html) and/or the [Gremlin query
language](./access-graph-gremlin.html). If you use the W3C standard Resource
Description Framework (RDF) model, you can access your graph using the
standard [SPARQL query language](./access-graph-sparql.html).

###### Highly Secure

Neptune provides multiple levels of security for your database. Security
features include network isolation using [Amazon
VPC](https://aws.amazon.com/vpc/), and encryption at rest using keys that you
create and control through [AWS Key Management Service (AWS
KMS)](https://aws.amazon.com/kms/). On an encrypted Neptune instance, data in
the underlying storage is encrypted, as are the automated backups, snapshots,
and replicas in the same cluster.
------------------------------------
propositions: propositions=['Graph Database Features and Security', 'Neptune supports Property Graph (PG) model.', 'Neptune supports Resource Description Framework (RDF) model.', 'Neptune supports openCypher query language for Property Graph model.', 'Neptune supports Gremlin query language for Property Graph model.', 'Neptune supports SPARQL query language for Resource Description Framework model.', 'Neptune provides high performance for graph models.', 'Neptune provides high performance for query languages.', 'Neptune provides multiple levels of security for databases.', 'Neptune offers network isolation using Amazon Virtual Private Cloud (Amazon VPC).', 'Neptune offers encryption at rest using keys.', 'Users create and control encryption keys through AWS Key Management Service (AWS KMS).', 'Encrypted Neptune instances have encrypted data in underlying storage.', 'Encrypted Neptune instances have encrypted automated backups.', 'Encrypted Neptune instances have encrypted snapshots.', 'Encrypted Neptune instances have encrypted replicas in the same cluster.']

2025-05-06 16:24:08:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::bd6a6b1b:8115:e862442d

Extracting propositions [nodes: 10, num_workers: 4]:  20%|██        | 2/10 [00:05<00:18,  2.30s/it]
2025-05-06 16:24:09:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: To perform intensive analysis, you can load
the data from a Neptune Database graph or snapshot into Neptune Analytics. You
can also load graph data that's stored in Amazon S3.

You can get started by [creating a new Neptune Analytics graph](./create-
graph-using-console.html) and loading data into it in a number of ways.

###### Topics

  * [Neptune Analytics Features](./neptune-analytics-features.html)

  * [When to use Neptune Analytics and when to use Neptune Database](./neptune-analytics-vs-neptune-database.html)

![Warning](https://d1ge0kk1l5kms0.cloudfront.net/images/G/01/webservices/console/warning.png)
**Javascript is disabled or is unavailable in your browser.**

To use the Amazon Web Services Documentation, Javascript must be enabled.
Please refer to your browser's Help pages for instructions.

[Document Conventions](/general/latest/gr/docconventions.html)

Features

Did this page help you? - Yes

Thanks for letting us know we're doing a good job!
------------------------------------
propositions: propositions=['Neptune Analytics and Neptune Database Information', 'Neptune Analytics is a tool for intensive data analysis.', 'Neptune Analytics can load data from Neptune Database graphs.', 'Neptune Analytics can load data from Neptune Database snapshots.', 'Neptune Analytics can load graph data stored in Amazon S3.', 'Users can create a new Neptune Analytics graph to get started.', 'Users can load data into Neptune Analytics graphs in multiple ways.', 'Neptune Analytics has specific features.', 'Neptune Analytics and Neptune Database have different use cases.', 'Javascript is required to use the Amazon Web Services Documentation.', "Users can refer to their browser's Help pages for instructions on enabling Javascript.", 'Amazon Web Services Documentation has document conventions.', 'The page contains a feedback mechanism for users to indicate if it was helpful.']

2025-05-06 16:24:09:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::abd5427c:978b:846f6c9c

Extracting propositions [nodes: 10, num_workers: 4]:  30%|███       | 3/10 [00:06<00:10,  1.50s/it]
2025-05-06 16:24:09:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: Neptune
Analytics is a solution for quickly analyzing existing graph databases or
graph datasets stored in a data lake. It uses popular graph analytic
algorithms and low-latency analytic queries.

You can use Neptune Analytics to analyze and query graphs in data science
workflows that build targeted content recommendations, assist with fraud
investigations, and detect network threats.

By providing a simple API for loading, querying, and analyzing graph data,
Neptune Analytics also removes the overhead of building and managing complex
data-analytics pipelines.

Neptune Analytics makes it easy to apply powerful algorithms both to the data
in your Neptune Database and to graph data that's stored externally. Because
Neptune Analytics can load a large dataset very quickly into memory, it
becomes possible to analyze graphs with tens of billions of relationships and
to process thousands of analytic queries per second using popular graph
analytics algorithms.

![Warning](https://d1ge0kk1l5kms0.cloudfront.net/images/G/01/webservices/console/warning.png)
**Javascript is disabled or is unavailable in your browser.
------------------------------------
propositions: propositions=['Neptune Analytics: Features and Capabilities', 'Neptune Analytics is a solution for analyzing graph databases and graph datasets.', 'Neptune Analytics uses popular graph analytic algorithms.', 'Neptune Analytics uses low-latency analytic queries.', 'Neptune Analytics can analyze graphs stored in data lakes.', 'Neptune Analytics can be used to build targeted content recommendations.', 'Neptune Analytics can assist with fraud investigations.', 'Neptune Analytics can detect network threats.', 'Neptune Analytics provides a simple API for loading graph data.', 'Neptune Analytics provides a simple API for querying graph data.', 'Neptune Analytics provides a simple API for analyzing graph data.', 'Neptune Analytics removes the overhead of building complex data-analytics pipelines.', 'Neptune Analytics removes the overhead of managing complex data-analytics pipelines.', 'Neptune Analytics can analyze data in Neptune Database.', 'Neptune Analytics can analyze graph data stored externally.', 'Neptune Analytics can load large datasets quickly into memory.', 'Neptune Analytics can analyze graphs with tens of billions of relationships.', 'Neptune Analytics can process thousands of analytic queries per second.', 'Neptune Analytics uses popular graph analytics algorithms.']


Extracting propositions [nodes: 5, num_workers: 4]:  40%|████      | 2/5 [00:06<00:08,  2.79s/it]
2025-05-06 16:24:09:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: [](/pdfs/neptune-analytics/latest/userguide/graph-guide.pdf#neptune-analytics-
features "Open PDF")

[Documentation](/index.html)[Neptune Analytics](/neptune/index.html)[Neptune
Analytics User Guide](what-is-neptune-analytics.html)

# Neptune Analytics Features

Neptune Analytics operates in a managed environment that can load data
extremely fast into memory and run graph algorithms natively. With Neptune
Analytics, you can perform in-database analytics on large graphs.

This functionality lets you perform business intelligence and custom
analytical queries, and use pre-built graph algorithms with the openCypher
language. For example, with Neptune Analytics you can ingest text from
cybersecurity reports to analyze relationships within security environments
and calculate vulnerability mitigations using graph algorithms or openCypher
queries.

Neptune Analytics offers a graph as a service experience by managing graphs
instead of infrastructure, so you can focus on queries and workflows to solve
problems. It automatically provisions the compute resources necessary to run
analytics workloads based on the size of the graph.
------------------------------------
propositions: propositions=['Neptune Analytics Features', 'Neptune Analytics is a managed environment for graph analytics.', 'Neptune Analytics can load data extremely fast into memory.', 'Neptune Analytics can run graph algorithms natively.', 'Neptune Analytics enables in-database analytics on large graphs.', 'Neptune Analytics allows performing business intelligence queries.', 'Neptune Analytics supports custom analytical queries.', 'Neptune Analytics provides pre-built graph algorithms.', 'Neptune Analytics uses the openCypher language.', 'Neptune Analytics can ingest text from cybersecurity reports.', 'Neptune Analytics can analyze relationships within security environments.', 'Neptune Analytics can calculate vulnerability mitigations using graph algorithms.', 'Neptune Analytics can calculate vulnerability mitigations using openCypher queries.', 'Neptune Analytics offers a graph as a service experience.', 'Neptune Analytics manages graphs instead of infrastructure.', 'Neptune Analytics allows users to focus on queries and workflows to solve problems.', 'Neptune Analytics automatically provisions compute resources for analytics workloads.', 'Neptune Analytics provisions compute resources based on the size of the graph.']


Extracting propositions [nodes: 5, num_workers: 4]:  60%|██████    | 3/5 [00:06<00:03,  1.61s/it]
2025-05-06 16:24:10:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: **

To use the Amazon Web Services Documentation, Javascript must be enabled.
Please refer to your browser's Help pages for instructions.

[Document Conventions](/general/latest/gr/docconventions.html)

Features

Latest updates

Did this page help you? - Yes

Thanks for letting us know we're doing a good job!

If you've got a moment, please tell us what we did right so we can do more of
it.

Did this page help you? - No

Thanks for letting us know this page needs work. We're sorry we let you down.

If you've got a moment, please tell us how we can make the documentation
better.
------------------------------------
propositions: propositions=['Amazon Web Services Documentation Usage Requirements and Feedback', 'Amazon Web Services Documentation requires Javascript to be enabled.', "Users should refer to their browser's Help pages for instructions on enabling Javascript.", 'The Amazon Web Services Documentation includes a section on Document Conventions.', 'The Amazon Web Services Documentation includes a section on Features.', 'The Amazon Web Services Documentation includes a section on Latest updates.', 'The Amazon Web Services Documentation includes a feedback mechanism.', 'The feedback mechanism asks users if the page was helpful.', 'Users can respond "Yes" to indicate the page was helpful.', 'Users can respond "No" to indicate the page was not helpful.', 'If users respond "Yes", they are thanked for providing positive feedback.', 'If users respond "Yes", they are invited to provide more details on what was done well.', 'If users respond "No", they are thanked for providing feedback.', 'If users respond "No", an apology is offered for not meeting expectations.', 'If users respond "No", they are invited to provide suggestions for improving the documentation.']


Extracting propositions [nodes: 5, num_workers: 4]:  80%|████████  | 4/5 [00:06<00:01,  1.20s/it]
2025-05-06 16:24:12:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: - Yes

Thanks for letting us know we're doing a good job!

If you've got a moment, please tell us what we did right so we can do more of
it.

Did this page help you? - No

Thanks for letting us know this page needs work. We're sorry we let you down.

If you've got a moment, please tell us how we can make the documentation
better.
------------------------------------
propositions: propositions=['Feedback Options for Documentation Page', 'The page offers a "Yes" option for positive feedback.', 'The page thanks users for providing positive feedback.', 'The page requests details on what was done well for positive feedback.', 'The page asks if the page was helpful.', 'The page offers a "No" option for negative feedback.', 'The page thanks users for providing negative feedback.', 'The page apologizes for not meeting user expectations.', 'The page requests suggestions for improving the documentation for negative feedback.']

2025-05-06 16:24:12:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::bd6a6b1b:8115:cfc5dc5d

Extracting propositions [nodes: 10, num_workers: 4]:  40%|████      | 4/10 [00:08<00:12,  2.07s/it]
2025-05-06 16:24:13:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: You can load graph data into Neptune Analytics from Amazon S3 or from a
Neptune Database endpoint. You can then run graph analytics queries using pre-
built or custom graph queries.

![Warning](https://d1ge0kk1l5kms0.cloudfront.net/images/G/01/webservices/console/warning.png)
**Javascript is disabled or is unavailable in your browser.**

To use the Amazon Web Services Documentation, Javascript must be enabled.
Please refer to your browser's Help pages for instructions.

[Document Conventions](/general/latest/gr/docconventions.html)

What is Neptune Analytics?

Neptune Analytics vs. Neptune Database

Did this page help you? - Yes

Thanks for letting us know we're doing a good job!

If you've got a moment, please tell us what we did right so we can do more of
it.

Did this page help you? - No

Thanks for letting us know this page needs work. We're sorry we let you down.

If you've got a moment, please tell us how we can make the documentation
better.
------------------------------------
propositions: propositions=['Neptune Analytics Features and Usage', 'Neptune Analytics allows loading graph data from Amazon S3.', 'Neptune Analytics allows loading graph data from a Neptune Database endpoint.', 'Neptune Analytics enables running graph analytics queries.', 'Neptune Analytics supports pre-built graph queries.', 'Neptune Analytics supports custom graph queries.', 'JavaScript is required to use the Amazon Web Services Documentation.', 'JavaScript must be enabled in the browser to use Amazon Web Services Documentation.', 'Neptune Analytics is a service offered by Amazon Web Services.', 'Neptune Database is a service offered by Amazon Web Services.', 'Neptune Analytics is distinct from Neptune Database.', 'Amazon Web Services Documentation provides a feedback mechanism.', 'Users can indicate if a documentation page was helpful.', 'Users can provide feedback on what aspects of the documentation were done well.', 'Users can provide feedback on how to improve the documentation.']


Extracting propositions [nodes: 5, num_workers: 4]: 100%|██████████| 5/5 [00:10<00:00,  2.01s/it]
Extracting topics [nodes: 5, num_workers: 4]:   0%|          | 0/5 [00:00<?, ?it/s]
2025-05-06 16:24:13:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::bf585e13:3edc:466728d4
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[2b6bf] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[2b6bf] 1ms Results: [**REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[9e07e] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[9e07e] 0ms Results: [**REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::4510583f:e412:0d82dc73
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[b45ed] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[b45ed] 0ms Results: [**REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[0da3b] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[0da3b] 0ms Results: [**REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::bf585e13:3edc:a2ec5adf
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[9b673] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[9b673] 0ms Results: [**REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[6be97] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[6be97] 0ms Results: [**REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::4510583f:e412:9f69cb6f
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[98312] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[98312] 0ms Results: [**REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[48f19] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.s.g.f.falkordb_graph_store:[48f19] 0ms Results: [**REDACTED**]
2025-05-06 16:24:13:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: ###### Fully Managed

With Amazon Neptune, you donât have to worry about database management tasks
like hardware provisioning, software patching, setup, configuration, or
backups.

You can use Neptune to create sophisticated, interactive graph applications
that can query billions of relationships in milliseconds. SQL queries for
highly connected data are complex and hard to tune for performance. With
Neptune, you can use the popular graph query languages Gremlin, openCypher,
and SPARQL to execute powerful queries that are easy to write and perform well
on connected data. This capability significantly reduces code complexity so
that you can quickly create applications that process relationships.

Neptune is designed to offer greater than 99.99 percent availability. It
increases database performance and availability by tightly integrating the
database engine with an SSD-backed virtualized storage layer that is built for
database workloads. Neptune storage is fault-tolerant and self-healing. Disk
failures are repaired in the background without loss of database availability.
Neptune automatically detects database crashes and restarts without the need
for crash recovery or rebuilding the database cache.
------------------------------------
propositions: propositions=['Amazon Neptune Features and Capabilities', 'Amazon Neptune is a fully managed database service.', 'Amazon Neptune eliminates the need for hardware provisioning.', 'Amazon Neptune eliminates the need for software patching.', 'Amazon Neptune eliminates the need for database setup.', 'Amazon Neptune eliminates the need for database configuration.', 'Amazon Neptune eliminates the need for database backups.', 'Amazon Neptune can create sophisticated graph applications.', 'Amazon Neptune can create interactive graph applications.', 'Amazon Neptune can query billions of relationships in milliseconds.', 'SQL queries for highly connected data are complex.', 'SQL queries for highly connected data are hard to tune for performance.', 'Amazon Neptune supports the Gremlin query language.', 'Amazon Neptune supports the openCypher query language.', 'Amazon Neptune supports the SPARQL query language.', 'Gremlin, openCypher, and SPARQL are graph query languages.', 'Graph query languages can execute powerful queries on connected data.', 'Graph query languages are easy to write for connected data.', 'Graph query languages perform well on connected data.', 'Using graph query languages reduces code complexity.', 'Reduced code complexity allows quick creation of applications that process relationships.', 'Amazon Neptune is designed for greater than 99.99 percent availability.', 'Amazon Neptune increases database performance.', 'Amazon Neptune increases database availability.', 'Amazon Neptune integrates the database engine with an SSD-backed virtualized storage layer.', 'The SSD-backed virtualized storage layer is built for database workloads.', 'Amazon Neptune storage is fault-tolerant.', 'Amazon Neptune storage is self-healing.', 'Disk failures in Amazon Neptune are repaired in the background.', 'Disk failure repairs do not cause loss of database availability.', 'Amazon Neptune automatically detects database crashes.', 'Amazon Neptune automatically restarts after detecting a database crash.', 'Amazon Neptune does not require crash recovery.', 'Amazon Neptune does not require rebuilding the database cache after a crash.']

2025-05-06 16:24:13:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::abd5427c:978b:cf49e6ec

Extracting propositions [nodes: 10, num_workers: 4]:  50%|█████     | 5/10 [00:10<00:09,  1.83s/it]
2025-05-06 16:24:16:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: Each Neptune DB cluster has one primary DB instance that is responsible for writing (that is, loading or modifying) graph database contents.

  * _Neptune replica_ â Connects to the same storage volume as the primary DB instance and supports only read operations. Each Neptune DB cluster can have up to 15 Neptune Replicas in addition to the primary DB instance. This provides high availability by locating Neptune Replicas in separate Availability Zones and distribution load from reading clients.

  * _Cluster volume_ â Neptune data is stored in the cluster volume, which is designed for reliability and high availability. A cluster volume consists of copies of the data across multiple Availability Zones in a single AWS Region. Because your data is automatically replicated across Availability Zones, it is highly durable, and there is little possibility of data loss.

###### Supports Open Graph APIs

Amazon Neptune supports open graph APIs for both property graphs (Gremlin and
openCypher) and RDF graphs (SPARQL). It provides high performance for both of
these graph models and their query languages.
------------------------------------
propositions: propositions=['Neptune DB Cluster Components and Features', 'Neptune DB cluster has one primary DB instance for writing graph database contents.', 'Primary DB instance is responsible for loading graph database contents.', 'Primary DB instance is responsible for modifying graph database contents.', 'Neptune replica connects to the same storage volume as the primary DB instance.', 'Neptune replica supports only read operations.', 'Each Neptune DB cluster can have up to 15 Neptune Replicas.', 'Neptune Replicas provide high availability.', 'Neptune Replicas are located in separate Availability Zones.', 'Neptune Replicas distribute load from reading clients.', 'Neptune data is stored in the cluster volume.', 'Cluster volume is designed for reliability.', 'Cluster volume is designed for high availability.', 'Cluster volume consists of copies of data across multiple Availability Zones.', 'Cluster volume is located in a single AWS Region.', 'Neptune data is automatically replicated across Availability Zones.', 'Neptune data is highly durable due to replication.', 'There is little possibility of data loss in Neptune due to replication.', 'Amazon Neptune supports open graph APIs.', 'Amazon Neptune supports property graphs.', 'Amazon Neptune supports RDF graphs.', 'Amazon Neptune supports Gremlin for property graphs.', 'Amazon Neptune supports openCypher for property graphs.', 'Amazon Neptune supports SPARQL for RDF graphs.', 'Amazon Neptune provides high performance for property graph models.', 'Amazon Neptune provides high performance for RDF graph models.', 'Amazon Neptune provides high performance for property graph query languages.', 'Amazon Neptune provides high performance for RDF graph query languages.']

2025-05-06 16:24:16:DEBUG:g.l.i.e.llm_proposition_extractor:Extracting propositions for node aws::abd5427c:978b:7ae8328d

Extracting propositions [nodes: 10, num_workers: 4]:  60%|██████    | 6/10 [00:13<00:09,  2.31s/it]
2025-05-06 16:24:17:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: [](/pdfs/neptune-analytics/latest/userguide/graph-guide.pdf#what-is-neptune-
analytics "Open PDF")

[Documentation](/index.html)[Neptune Analytics](/neptune/index.html)[Neptune
Analytics User Guide](what-is-neptune-analytics.html)

# What is Neptune Analytics?

Neptune Analytics is a memory-optimized graph database engine for analytics.
With Neptune Analytics, you can get insights and find trends by processing
large amounts of graph data in seconds. To analyze graph data quickly and
easily, Neptune Analytics stores large graph datasets in memory. It supports a
library of optimized graph analytic algorithms, low-latency graph queries, and
vector search capabilities within graph traversals.

Neptune Analytics is an ideal choice for investigatory, exploratory, or data-
science workloads that require fast iteration for data, analytical and
algorithmic processing, or vector search on graph data. It complements [Amazon
Neptune
Database](https://docs.aws.amazon.com/neptune/latest/userguide/intro.html), a
popular managed graph database.
------------------------------------
propositions: propositions=['Neptune Analytics Overview', 'Neptune Analytics is a memory-optimized graph database engine for analytics.', 'Neptune Analytics allows users to get insights and find trends by processing large amounts of graph data in seconds.', 'Neptune Analytics stores large graph datasets in memory to analyze graph data quickly and easily.', 'Neptune Analytics supports a library of optimized graph analytic algorithms.', 'Neptune Analytics supports low-latency graph queries.', 'Neptune Analytics supports vector search capabilities within graph traversals.', 'Neptune Analytics is ideal for investigatory workloads.', 'Neptune Analytics is ideal for exploratory workloads.', 'Neptune Analytics is ideal for data-science workloads.', 'Neptune Analytics is ideal for workloads that require fast iteration for data processing.', 'Neptune Analytics is ideal for workloads that require fast iteration for analytical processing.', 'Neptune Analytics is ideal for workloads that require fast iteration for algorithmic processing.', 'Neptune Analytics is ideal for workloads that require vector search on graph data.', 'Neptune Analytics complements Amazon Neptune Database.', 'Amazon Neptune Database is a popular managed graph database.']


Extracting propositions [nodes: 10, num_workers: 4]:  70%|███████   | 7/10 [00:14<00:05,  1.87s/it]
2025-05-06 16:24:18:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: [](/pdfs/neptune/latest/userguide/neptune-ug.pdf#intro "Open PDF")

[Documentation](/index.html)[Neptune](/neptune/index.html)[User
Guide](intro.html)

# What Is Amazon Neptune?

Amazon Neptune is a fast, reliable, fully managed graph database service that
makes it easy to build and run applications that work with highly connected
datasets. The core of Neptune is a purpose-built, high-performance graph
database engine. This engine is optimized for storing billions of
relationships and querying the graph with milliseconds latency. Neptune
supports the popular property-graph query languages Apache TinkerPop Gremlin
and Neo4j's openCypher, and the W3C's RDF query language, SPARQL. This enables
you to build queries that efficiently navigate highly connected datasets.
Neptune powers graph use cases such as recommendation engines, fraud
detection, knowledge graphs, drug discovery, and network security.

The Neptune database is highly available, with read replicas, point-in-time
recovery, continuous backup to Amazon S3, and replication across Availability
Zones.
------------------------------------
propositions: propositions=['Amazon Neptune Overview', 'Amazon Neptune is a graph database service.', 'Amazon Neptune is fast.', 'Amazon Neptune is reliable.', 'Amazon Neptune is fully managed.', 'Amazon Neptune makes it easy to build applications that work with highly connected datasets.', 'Amazon Neptune makes it easy to run applications that work with highly connected datasets.', 'Amazon Neptune has a core engine.', 'The core engine of Amazon Neptune is purpose-built.', 'The core engine of Amazon Neptune is a high-performance graph database engine.', 'The core engine of Amazon Neptune is optimized for storing billions of relationships.', 'The core engine of Amazon Neptune is optimized for querying the graph with milliseconds latency.', 'Amazon Neptune supports Apache TinkerPop Gremlin.', 'Apache TinkerPop Gremlin is a property-graph query language.', "Amazon Neptune supports Neo4j's openCypher.", "Neo4j's openCypher is a property-graph query language.", 'Amazon Neptune supports SPARQL.', "SPARQL is the W3C's RDF query language.", 'Amazon Neptune enables building queries that efficiently navigate highly connected datasets.', 'Amazon Neptune powers recommendation engines.', 'Amazon Neptune powers fraud detection.', 'Amazon Neptune powers knowledge graphs.', 'Amazon Neptune powers drug discovery.', 'Amazon Neptune powers network security.', 'The Amazon Neptune database is highly available.', 'Amazon Neptune has read replicas.', 'Amazon Neptune has point-in-time recovery.', 'Amazon Neptune has continuous backup to Amazon S3.', 'Amazon Neptune has replication across Availability Zones.']


Extracting propositions [nodes: 10, num_workers: 4]:  80%|████████  | 8/10 [00:15<00:02,  1.41s/it]
2025-05-06 16:24:18:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: It uses popular graph analytic
algorithms and low-latency analytic queries.

To learn more about using Amazon Neptune, we recommend that you start with the
following sections:

  * [Getting started with Amazon Neptune](./graph-get-started.html)

  * [Overview of Amazon Neptune features](./feature-overview.html)

If you're new to graphs, or are not yet ready to invest in a full Neptune
production environment, visit our [Getting started with Neptune](./graph-get-
started.html) topic to find out how to use Neptune Jupyter notebooks for
learning and developing without incurring costs.

Also, before you begin designing a database, we recommend that you consult the
GitHub repository [AWS Reference Architectures for Using Graph
Databases](https://github.com/aws-samples/aws-dbs-refarch-graph), where you
can inform your choices about graph data models and query languages, and
browse examples of reference deployment architectures.

###### Key Service Components

  * _Primary DB instance_ â Supports read and write operations, and performs all of the data modifications to the cluster volume.
------------------------------------
propositions: propositions=['Amazon Neptune Features and Components', 'Amazon Neptune uses popular graph analytic algorithms.', 'Amazon Neptune supports low-latency analytic queries.', 'Amazon Neptune has a Getting Started guide.', 'Amazon Neptune has an Overview of Features guide.', 'Amazon Neptune offers Jupyter notebooks for learning and development.', 'Amazon Neptune Jupyter notebooks can be used without incurring costs.', 'AWS provides a GitHub repository for Reference Architectures for Using Graph Databases.', 'The AWS Reference Architectures repository informs choices about graph data models.', 'The AWS Reference Architectures repository informs choices about query languages.', 'The AWS Reference Architectures repository provides examples of reference deployment architectures.', 'Amazon Neptune has a Primary DB instance.', 'The Primary DB instance supports read operations.', 'The Primary DB instance supports write operations.', 'The Primary DB instance performs all data modifications to the cluster volume.']

2025-05-06 16:24:21:DEBUG:g.l.i.e.llm_proposition_extractor:====================================
text: Neptune provides data security features, with support for encryption at
rest and in transit. Neptune is fully managed, so you no longer need to worry
about database management tasks like hardware provisioning, software patching,
setup, configuration, or backups.

[Neptune Analytics](https://docs.aws.amazon.com/neptune-
analytics/latest/userguide/what-is-neptune-analytics.html) is an analytics
database engine that complements Neptune database and that can quickly analyze
large amounts of graph data in memory to get insights and find trends. Neptune
Analytics is a solution for quickly analyzing existing graph databases or
graph datasets stored in a data lake. It uses popular graph analytic
algorithms and low-latency analytic queries.
------------------------------------
propositions: propositions=['Neptune Database and Neptune Analytics Features', 'Neptune provides data security features.', 'Neptune supports encryption at rest.', 'Neptune supports encryption in transit.', 'Neptune is a fully managed database.', 'Neptune eliminates the need for hardware provisioning.', 'Neptune eliminates the need for software patching.', 'Neptune eliminates the need for database setup.', 'Neptune eliminates the need for database configuration.', 'Neptune eliminates the need for database backups.', 'Neptune Analytics is an analytics database engine.', 'Neptune Analytics complements Neptune database.', 'Neptune Analytics can quickly analyze large amounts of graph data in memory.', 'Neptune Analytics is used to get insights from graph data.', 'Neptune Analytics is used to find trends in graph data.', 'Neptune Analytics is a solution for analyzing existing graph databases.', 'Neptune Analytics is a solution for analyzing graph datasets stored in a data lake.', 'Neptune Analytics uses popular graph analytic algorithms.', 'Neptune Analytics uses low-latency analytic queries.']


Extracting propositions [nodes: 10, num_workers: 4]: 100%|██████████| 10/10 [00:18<00:00,  1.86s/it]
Extracting topics [nodes: 10, num_workers: 4]:   0%|          | 0/10 [00:00<?, ?it/s]
2025-05-06 16:24:21:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::bd6a6b1b:8115:cfc5dc5d
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[ab1a6] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[ab1a6] 0ms Results: [**REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[7bd67] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[7bd67] 0ms Results: [**REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::abd5427c:978b:846f6c9c
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[72847] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[72847] 0ms Results: [**REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[d78c2] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[d78c2] 0ms Results: [**REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::abd5427c:978b:75689b1d
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[71b34] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[71b34] 0ms Results: [**REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[4a521] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[4a521] 0ms Results: [**REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::bd6a6b1b:8115:b9569c0b
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[db249] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[db249] 0ms Results: [**REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[d82f7] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:21:DEBUG:g.l.s.g.f.falkordb_graph_store:[d82f7] 0ms Results: [**REDACTED**]
2025-05-06 16:24:24:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Amazon Neptune Services and Features

  entities:
    Amazon Neptune|Service
    Neptune Database|Software
    Neptune Analytics|Software

  proposition: Amazon Neptune includes Neptune Database and Neptune Analytics.
    entity-entity relationships:
    Amazon Neptune|INCLUDES|Neptune Database
    Amazon Neptune|INCLUDES|Neptune Analytics

  proposition: Neptune Database is a serverless graph database.
    entity-attribute relationships:
    Neptune Database|TYPE|serverless graph database

  proposition: Neptune Database is designed for optimal scalability and availability.
    entity-attribute relationships:
    Neptune Database|DESIGNED_FOR|optimal scalability
    Neptune Database|DESIGNED_FOR|availability

  proposition: Neptune Database can scale to 100,000 queries per second.
    entity-attribute relationships:
    Neptune Database|SCALE_CAPACITY|100,000 queries per second

  proposition: Neptune Database provides Multi-AZ high availability.
    entity-attribute relationships:
    Neptune Database|PROVIDES|Multi-AZ high availability

  proposition: Neptune Database supports multi-Region deployments.
    entity-attribute relationships:
    Neptune Database|SUPPORTS|multi-Region deployments

  proposition: Neptune Database can be used for social networking applications.
    entity-attribute relationships:
    Neptune Database|USE_CASE|social networking applications

  proposition: Neptune Database can be used for fraud alerting applications.
    entity-attribute relationships:
    Neptune Database|USE_CASE|fraud alerting applications

  proposition: Neptune Database can be used for Customer 360 applications.
    entity-attribute relationships:
    Neptune Database|USE_CASE|Customer 360 applications

  proposition: Neptune Analytics is an analytics database engine.
    entity-attribute relationships:
    Neptune Analytics|TYPE|analytics database engine

  proposition: Neptune Analytics can quickly analyze large amounts of graph data in memory.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|quickly analyze large amounts of graph data in memory

  proposition: Neptune Analytics is designed to get insights and find trends.
    entity-attribute relationships:
    Neptune Analytics|DESIGNED_FOR|get insights
    Neptune Analytics|DESIGNED_FOR|find trends

  proposition: Amazon Neptune makes it easy to work with graph data in the AWS Cloud.
    entity-attribute relationships:
    Amazon Neptune|CAPABILITY|easy to work with graph data in the AWS Cloud
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Amazon Neptune Services and Features', entities=[Entity(entityId=None, value='Amazon Neptune', classification='Service'), Entity(entityId=None, value='Neptune Database', classification='Software'), Entity(entityId=None, value='Neptune Analytics', classification='Software')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune includes Neptune Database and Neptune Analytics.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='INCLUDES'), object=Entity(entityId=None, value='Neptune Database', classification='Software'), complement=None), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='INCLUDES'), object=Entity(entityId=None, value='Neptune Analytics', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Database is a serverless graph database.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Database', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='serverless graph database')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Database is designed for optimal scalability and availability.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Database', classification='Software'), predicate=Relation(value='DESIGNED FOR'), object=None, complement='optimal scalability'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Database', classification='Software'), predicate=Relation(value='DESIGNED FOR'), object=None, complement='availability')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Database can scale to 100,000 queries per second.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Database', classification='Software'), predicate=Relation(value='SCALE CAPACITY'), object=None, complement='100,000 queries per second')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Database provides Multi-AZ high availability.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Database', classification='Software'), predicate=Relation(value='PROVIDES'), object=None, complement='Multi-AZ high availability')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Database supports multi-Region deployments.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Database', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='multi-Region deployments')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Database can be used for social networking applications.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Database', classification='Software'), predicate=Relation(value='USE CASE'), object=None, complement='social networking applications')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Database can be used for fraud alerting applications.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Database', classification='Software'), predicate=Relation(value='USE CASE'), object=None, complement='fraud alerting applications')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Database can be used for Customer 360 applications.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Database', classification='Software'), predicate=Relation(value='USE CASE'), object=None, complement='Customer 360 applications')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is an analytics database engine.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='analytics database engine')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can quickly analyze large amounts of graph data in memory.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='quickly analyze large amounts of graph data in memory')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is designed to get insights and find trends.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='DESIGNED FOR'), object=None, complement='get insights'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='DESIGNED FOR'), object=None, complement='find trends')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune makes it easy to work with graph data in the AWS Cloud.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='easy to work with graph data in the AWS Cloud')])])]
------------------------------------
garbage: []

2025-05-06 16:24:24:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::bf585e13:3edc:1b43838b
2025-05-06 16:24:24:DEBUG:g.l.s.g.f.falkordb_graph_store:[88c29] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:24:DEBUG:g.l.s.g.f.falkordb_graph_store:[88c29] 0ms Results: [**REDACTED**]
2025-05-06 16:24:24:DEBUG:g.l.s.g.f.falkordb_graph_store:[5c302] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:24:DEBUG:g.l.s.g.f.falkordb_graph_store:[5c302] 0ms Results: [**REDACTED**]

Extracting topics [nodes: 5, num_workers: 4]:  20%|██        | 1/5 [00:10<00:43, 10.82s/it]
2025-05-06 16:24:26:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Neptune Analytics Features and Capabilities

  entities:
    Neptune Analytics|Service
    openCypher|Software

  proposition: Neptune Analytics is a managed environment for graph analytics.
    entity-attribute relationships:
    Neptune Analytics|TYPE|managed environment
    Neptune Analytics|PURPOSE|graph analytics

    entity-entity relationships:
    Neptune Analytics|PROVIDES|graph analytics

  proposition: Neptune Analytics can load data extremely fast into memory.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|load data extremely fast into memory

  proposition: Neptune Analytics can run graph algorithms natively.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|run graph algorithms natively

  proposition: Neptune Analytics enables in-database analytics on large graphs.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|in-database analytics on large graphs

  proposition: Neptune Analytics allows performing business intelligence queries.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|perform business intelligence queries

  proposition: Neptune Analytics supports custom analytical queries.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|support custom analytical queries

  proposition: Neptune Analytics provides pre-built graph algorithms.
    entity-attribute relationships:
    Neptune Analytics|FEATURE|pre-built graph algorithms

  proposition: Neptune Analytics uses the openCypher language.
    entity-entity relationships:
    Neptune Analytics|USES|openCypher

  proposition: Neptune Analytics can ingest text from cybersecurity reports.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|ingest text from cybersecurity reports

  proposition: Neptune Analytics can analyze relationships within security environments.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|analyze relationships within security environments

  proposition: Neptune Analytics can calculate vulnerability mitigations using graph algorithms.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|calculate vulnerability mitigations using graph algorithms

  proposition: Neptune Analytics can calculate vulnerability mitigations using openCypher queries.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|calculate vulnerability mitigations using openCypher queries

    entity-entity relationships:
    Neptune Analytics|USES|openCypher

  proposition: Neptune Analytics offers a graph as a service experience.
    entity-attribute relationships:
    Neptune Analytics|OFFERING|graph as a service experience

  proposition: Neptune Analytics manages graphs instead of infrastructure.
    entity-attribute relationships:
    Neptune Analytics|MANAGES|graphs
    Neptune Analytics|DOES_NOT_MANAGE|infrastructure

  proposition: Neptune Analytics allows users to focus on queries and workflows to solve problems.
    entity-attribute relationships:
    Neptune Analytics|BENEFIT|allows users to focus on queries and workflows
    Neptune Analytics|PURPOSE|solve problems

  proposition: Neptune Analytics automatically provisions compute resources for analytics workloads.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|automatically provision compute resources
    Neptune Analytics|PURPOSE|analytics workloads

  proposition: Neptune Analytics provisions compute resources based on the size of the graph.
    entity-attribute relationships:
    Neptune Analytics|PROVISION_CRITERIA|size of the graph
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Neptune Analytics Features and Capabilities', entities=[Entity(entityId=None, value='Neptune Analytics', classification='Service'), Entity(entityId=None, value='openCypher', classification='Software')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is a managed environment for graph analytics.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='TYPE'), object=None, complement='managed environment'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='PURPOSE'), object=None, complement='graph analytics'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='PROVIDES'), object=None, complement='graph analytics')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can load data extremely fast into memory.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='load data extremely fast into memory')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can run graph algorithms natively.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='run graph algorithms natively')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics enables in-database analytics on large graphs.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='in-database analytics on large graphs')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics allows performing business intelligence queries.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='perform business intelligence queries')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics supports custom analytical queries.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='support custom analytical queries')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics provides pre-built graph algorithms.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='FEATURE'), object=None, complement='pre-built graph algorithms')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics uses the openCypher language.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='USES'), object=Entity(entityId=None, value='openCypher', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can ingest text from cybersecurity reports.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='ingest text from cybersecurity reports')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can analyze relationships within security environments.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='analyze relationships within security environments')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can calculate vulnerability mitigations using graph algorithms.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='calculate vulnerability mitigations using graph algorithms')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can calculate vulnerability mitigations using openCypher queries.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='calculate vulnerability mitigations using openCypher queries'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='USES'), object=Entity(entityId=None, value='openCypher', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics offers a graph as a service experience.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='OFFERING'), object=None, complement='graph as a service experience')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics manages graphs instead of infrastructure.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='MANAGES'), object=None, complement='graphs'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='DOES NOT MANAGE'), object=None, complement='infrastructure')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics allows users to focus on queries and workflows to solve problems.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='BENEFIT'), object=None, complement='allows users to focus on queries and workflows'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='PURPOSE'), object=None, complement='solve problems')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics automatically provisions compute resources for analytics workloads.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='automatically provision compute resources'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='PURPOSE'), object=None, complement='analytics workloads')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics provisions compute resources based on the size of the graph.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='PROVISION CRITERIA'), object=None, complement='size of the graph')])])]
------------------------------------
garbage: []


Extracting topics [nodes: 5, num_workers: 4]:  40%|████      | 2/5 [00:12<00:16,  5.64s/it]
2025-05-06 16:24:26:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Neptune Analytics Features and Capabilities

  entities:
    Neptune Analytics|Service
    Amazon S3|Service
    Neptune Database|Service
    Amazon Web Services|Organization

  proposition: Neptune Analytics allows loading graph data from Amazon S3.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|loading graph data

    entity-entity relationships:
    Neptune Analytics|LOADS_DATA_FROM|Amazon S3

  proposition: Neptune Analytics allows loading graph data from a Neptune Database endpoint.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|loading graph data

    entity-entity relationships:
    Neptune Analytics|LOADS_DATA_FROM|Neptune Database

  proposition: Neptune Analytics enables running graph analytics queries.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|running graph analytics queries

  proposition: Neptune Analytics supports pre-built graph queries.
    entity-attribute relationships:
    Neptune Analytics|SUPPORTS|pre-built graph queries

  proposition: Neptune Analytics supports custom graph queries.
    entity-attribute relationships:
    Neptune Analytics|SUPPORTS|custom graph queries

  proposition: Neptune Analytics is a service offered by Amazon Web Services.
    entity-entity relationships:
    Neptune Analytics|OFFERED_BY|Amazon Web Services

  proposition: Neptune Database is a service offered by Amazon Web Services.
    entity-entity relationships:
    Neptune Database|OFFERED_BY|Amazon Web Services

  proposition: Neptune Analytics is distinct from Neptune Database.
    entity-entity relationships:
    Neptune Analytics|DISTINCT_FROM|Neptune Database

topic: Amazon Web Services Documentation

  entities:
    Amazon Web Services Documentation|Creative Work
    JavaScript|Software

  proposition: JavaScript is required to use the Amazon Web Services Documentation.
    entity-entity relationships:
    JavaScript|REQUIRED_FOR|Amazon Web Services Documentation

  proposition: JavaScript must be enabled in the browser to use Amazon Web Services Documentation.
    entity-attribute relationships:
    JavaScript|REQUIREMENT|enabled in browser

    entity-entity relationships:
    JavaScript|REQUIRED_FOR|Amazon Web Services Documentation

  proposition: Amazon Web Services Documentation provides a feedback mechanism.
    entity-attribute relationships:
    Amazon Web Services Documentation|FEATURE|feedback mechanism

  proposition: Users can indicate if a documentation page was helpful.
    entity-attribute relationships:
    Amazon Web Services Documentation|FEEDBACK_OPTION|indicate helpfulness

  proposition: Users can provide feedback on what aspects of the documentation were done well.
    entity-attribute relationships:
    Amazon Web Services Documentation|FEEDBACK_OPTION|aspects done well

  proposition: Users can provide feedback on how to improve the documentation.
    entity-attribute relationships:
    Amazon Web Services Documentation|FEEDBACK_OPTION|improvement suggestions
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Neptune Analytics Features and Capabilities', entities=[Entity(entityId=None, value='Neptune Analytics', classification='Service'), Entity(entityId=None, value='Amazon S3', classification='Service'), Entity(entityId=None, value='Neptune Database', classification='Service'), Entity(entityId=None, value='Amazon Web Services', classification='Organization')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics allows loading graph data from Amazon S3.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='loading graph data'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='LOADS DATA FROM'), object=Entity(entityId=None, value='Amazon S3', classification='Service'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics allows loading graph data from a Neptune Database endpoint.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='loading graph data'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='LOADS DATA FROM'), object=Entity(entityId=None, value='Neptune Database', classification='Service'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics enables running graph analytics queries.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='running graph analytics queries')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics supports pre-built graph queries.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='SUPPORTS'), object=None, complement='pre-built graph queries')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics supports custom graph queries.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='SUPPORTS'), object=None, complement='custom graph queries')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is a service offered by Amazon Web Services.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='OFFERED BY'), object=Entity(entityId=None, value='Amazon Web Services', classification='Organization'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Database is a service offered by Amazon Web Services.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Database', classification='Service'), predicate=Relation(value='OFFERED BY'), object=Entity(entityId=None, value='Amazon Web Services', classification='Organization'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is distinct from Neptune Database.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Service'), predicate=Relation(value='DISTINCT FROM'), object=Entity(entityId=None, value='Neptune Database', classification='Service'), complement=None)])]), Topic(topicId=None, chunkIds=[], value='Amazon Web Services Documentation', entities=[Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), Entity(entityId=None, value='JavaScript', classification='Software')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='JavaScript is required to use the Amazon Web Services Documentation.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='JavaScript', classification='Software'), predicate=Relation(value='REQUIRED FOR'), object=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='JavaScript must be enabled in the browser to use Amazon Web Services Documentation.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='JavaScript', classification='Software'), predicate=Relation(value='REQUIREMENT'), object=None, complement='enabled in browser'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='JavaScript', classification='Software'), predicate=Relation(value='REQUIRED FOR'), object=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Web Services Documentation provides a feedback mechanism.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='FEATURE'), object=None, complement='feedback mechanism')]), Statement(statementId=None, topicId=None, chunkId=None, value='Users can indicate if a documentation page was helpful.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='FEEDBACK OPTION'), object=None, complement='indicate helpfulness')]), Statement(statementId=None, topicId=None, chunkId=None, value='Users can provide feedback on what aspects of the documentation were done well.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='FEEDBACK OPTION'), object=None, complement='aspects done well')]), Statement(statementId=None, topicId=None, chunkId=None, value='Users can provide feedback on how to improve the documentation.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='FEEDBACK OPTION'), object=None, complement='improvement suggestions')])])]
------------------------------------
garbage: ['STATEMENT DETAIL: ', 'STATEMENT DETAIL: ', 'STATEMENT DETAIL: ']

2025-05-06 16:24:26:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Amazon Web Services Documentation

  entities:
    Amazon Web Services Documentation|Creative Work
    Javascript|Software

  proposition: Amazon Web Services Documentation Usage Requirements and Feedback
    entity-attribute relationships:
    Amazon Web Services Documentation|HAS_SECTION|Usage Requirements
    Amazon Web Services Documentation|HAS_SECTION|Feedback

  proposition: Amazon Web Services Documentation requires Javascript to be enabled.
    entity-attribute relationships:
    Amazon Web Services Documentation|REQUIRES|Javascript

  proposition: Users should refer to their browser's Help pages for instructions on enabling Javascript.
    entity-attribute relationships:
    Javascript|ENABLE_INSTRUCTIONS|browser's Help pages

  proposition: The Amazon Web Services Documentation includes a section on Document Conventions.
    entity-attribute relationships:
    Amazon Web Services Documentation|HAS_SECTION|Document Conventions

  proposition: The Amazon Web Services Documentation includes a section on Features.
    entity-attribute relationships:
    Amazon Web Services Documentation|HAS_SECTION|Features

  proposition: The Amazon Web Services Documentation includes a section on Latest updates.
    entity-attribute relationships:
    Amazon Web Services Documentation|HAS_SECTION|Latest updates

  proposition: The Amazon Web Services Documentation includes a feedback mechanism.
    entity-attribute relationships:
    Amazon Web Services Documentation|HAS_FEATURE|feedback mechanism

  proposition: The feedback mechanism asks users if the page was helpful.
    entity-attribute relationships:
    feedback mechanism|ASKS_QUESTION|page helpfulness

  proposition: Users can respond "Yes" to indicate the page was helpful.
    entity-attribute relationships:
    feedback mechanism|HAS_OPTION|Yes

  proposition: Users can respond "No" to indicate the page was not helpful.
    entity-attribute relationships:
    feedback mechanism|HAS_OPTION|No

  proposition: If users respond "Yes", they are thanked for providing positive feedback.
    entity-attribute relationships:
    feedback mechanism|RESPONSE_TO_YES|thank for positive feedback

  proposition: If users respond "Yes", they are invited to provide more details on what was done well.
    entity-attribute relationships:
    feedback mechanism|RESPONSE_TO_YES|invite for more details

  proposition: If users respond "No", they are thanked for providing feedback.
    entity-attribute relationships:
    feedback mechanism|RESPONSE_TO_NO|thank for feedback

  proposition: If users respond "No", an apology is offered for not meeting expectations.
    entity-attribute relationships:
    feedback mechanism|RESPONSE_TO_NO|offer apology

  proposition: If users respond "No", they are invited to provide suggestions for improving the documentation.
    entity-attribute relationships:
    feedback mechanism|RESPONSE_TO_NO|invite for improvement suggestions
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Amazon Web Services Documentation', entities=[Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), Entity(entityId=None, value='Javascript', classification='Software')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Web Services Documentation Usage Requirements and Feedback', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='HAS SECTION'), object=None, complement='Usage Requirements'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='HAS SECTION'), object=None, complement='Feedback')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Web Services Documentation requires Javascript to be enabled.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='REQUIRES'), object=Entity(entityId=None, value='Javascript', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value="Users should refer to their browser's Help pages for instructions on enabling Javascript.", details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Javascript', classification='Software'), predicate=Relation(value='ENABLE INSTRUCTIONS'), object=None, complement="browser's Help pages")]), Statement(statementId=None, topicId=None, chunkId=None, value='The Amazon Web Services Documentation includes a section on Document Conventions.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='HAS SECTION'), object=None, complement='Document Conventions')]), Statement(statementId=None, topicId=None, chunkId=None, value='The Amazon Web Services Documentation includes a section on Features.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='HAS SECTION'), object=None, complement='Features')]), Statement(statementId=None, topicId=None, chunkId=None, value='The Amazon Web Services Documentation includes a section on Latest updates.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='HAS SECTION'), object=None, complement='Latest updates')]), Statement(statementId=None, topicId=None, chunkId=None, value='The Amazon Web Services Documentation includes a feedback mechanism.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='HAS FEATURE'), object=None, complement='feedback mechanism')]), Statement(statementId=None, topicId=None, chunkId=None, value='The feedback mechanism asks users if the page was helpful.', details=['feedback mechanism ASKS QUESTION page helpfulness'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='Users can respond "Yes" to indicate the page was helpful.', details=['feedback mechanism HAS OPTION Yes'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='Users can respond "No" to indicate the page was not helpful.', details=['feedback mechanism HAS OPTION No'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='If users respond "Yes", they are thanked for providing positive feedback.', details=['feedback mechanism RESPONSE TO YES thank for positive feedback'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='If users respond "Yes", they are invited to provide more details on what was done well.', details=['feedback mechanism RESPONSE TO YES invite for more details'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='If users respond "No", they are thanked for providing feedback.', details=['feedback mechanism RESPONSE TO NO thank for feedback'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='If users respond "No", an apology is offered for not meeting expectations.', details=['feedback mechanism RESPONSE TO NO offer apology'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='If users respond "No", they are invited to provide suggestions for improving the documentation.', details=['feedback mechanism RESPONSE TO NO invite for improvement suggestions'], facts=[])])]
------------------------------------
garbage: ['STATEMENT DETAIL: feedback mechanism|ASKS_QUESTION|page helpfulness', 'STATEMENT DETAIL: feedback mechanism|HAS_OPTION|Yes', 'STATEMENT DETAIL: feedback mechanism|HAS_OPTION|No', 'STATEMENT DETAIL: feedback mechanism|RESPONSE_TO_YES|thank for positive feedback', 'STATEMENT DETAIL: feedback mechanism|RESPONSE_TO_YES|invite for more details', 'STATEMENT DETAIL: feedback mechanism|RESPONSE_TO_NO|thank for feedback', 'STATEMENT DETAIL: feedback mechanism|RESPONSE_TO_NO|offer apology', 'STATEMENT DETAIL: feedback mechanism|RESPONSE_TO_NO|invite for improvement suggestions']


Extracting topics [nodes: 5, num_workers: 4]:  80%|████████  | 4/5 [00:13<00:02,  2.16s/it]
2025-05-06 16:24:33:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Neptune Database Failover

  entities:
    Neptune|Software
    Amazon Web Services|Organization

  proposition: Neptune automatically fails over to one of up to 15 read replicas if the entire instance fails.
    entity-attribute relationships:
    Neptune|HAS_FEATURE|automatic failover
    Neptune|HAS_MAXIMUM_READ_REPLICAS|15

    entity-entity relationships:
    Neptune|FAILS_OVER_TO|read replicas

topic: Amazon Web Services Documentation

  entities:
    Amazon Web Services Documentation|Creative Work
    JavaScript|Software

  proposition: Amazon Web Services Documentation requires JavaScript to be enabled.
    entity-entity relationships:
    Amazon Web Services Documentation|REQUIRES|JavaScript

  proposition: JavaScript must be enabled in the browser to use Amazon Web Services Documentation.
    entity-entity relationships:
    Amazon Web Services Documentation|REQUIRES|JavaScript

  proposition: Users should refer to their browser's Help pages for instructions on enabling JavaScript.
    entity-entity relationships:
    browser|HAS_FEATURE|Help pages

  proposition: The page contains a warning icon.
    entity-attribute relationships:
    page|HAS_ELEMENT|warning icon

  proposition: The warning message states "Javascript is disabled or is unavailable in your browser."
    entity-attribute relationships:
    warning message|CONTENT|"Javascript is disabled or is unavailable in your browser."

  proposition: The page includes a link to Document Conventions.
    entity-attribute relationships:
    page|HAS_ELEMENT|link to Document Conventions

  proposition: The page includes a section for Latest Updates.
    entity-attribute relationships:
    page|HAS_SECTION|Latest Updates

  proposition: The page asks users if the page was helpful.
    entity-attribute relationships:
    page|HAS_FEATURE|user feedback request

  proposition: Users can provide feedback on what the page did right.
    entity-attribute relationships:
    page|HAS_FEATURE|positive feedback option

  proposition: Users can provide feedback on how to improve the documentation.
    entity-attribute relationships:
    page|HAS_FEATURE|improvement feedback option
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Neptune Database Failover', entities=[Entity(entityId=None, value='Neptune', classification='Software'), Entity(entityId=None, value='Amazon Web Services', classification='Organization')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Neptune automatically fails over to one of up to 15 read replicas if the entire instance fails.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='HAS FEATURE'), object=None, complement='automatic failover'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='HAS MAXIMUM READ REPLICAS'), object=None, complement='15'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='FAILS OVER TO'), object=None, complement='read replicas')])]), Topic(topicId=None, chunkIds=[], value='Amazon Web Services Documentation', entities=[Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), Entity(entityId=None, value='JavaScript', classification='Software')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Web Services Documentation requires JavaScript to be enabled.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='REQUIRES'), object=Entity(entityId=None, value='JavaScript', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='JavaScript must be enabled in the browser to use Amazon Web Services Documentation.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='REQUIRES'), object=Entity(entityId=None, value='JavaScript', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value="Users should refer to their browser's Help pages for instructions on enabling JavaScript.", details=['browser HAS FEATURE Help pages'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='The page contains a warning icon.', details=['page HAS ELEMENT warning icon'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='The warning message states "Javascript is disabled or is unavailable in your browser."', details=['warning message CONTENT "Javascript is disabled or is unavailable in your browser."'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='The page includes a link to Document Conventions.', details=['page HAS ELEMENT link to Document Conventions'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='The page includes a section for Latest Updates.', details=['page HAS SECTION Latest Updates'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='The page asks users if the page was helpful.', details=['page HAS FEATURE user feedback request'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='Users can provide feedback on what the page did right.', details=['page HAS FEATURE positive feedback option'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='Users can provide feedback on how to improve the documentation.', details=['page HAS FEATURE improvement feedback option'], facts=[])])]
------------------------------------
garbage: ['STATEMENT DETAIL: browser|HAS_FEATURE|Help pages', 'STATEMENT DETAIL: page|HAS_ELEMENT|warning icon', 'STATEMENT DETAIL: warning message|CONTENT|"Javascript is disabled or is unavailable in your browser."', 'STATEMENT DETAIL: page|HAS_ELEMENT|link to Document Conventions', 'STATEMENT DETAIL: page|HAS_SECTION|Latest Updates', 'STATEMENT DETAIL: page|HAS_FEATURE|user feedback request', 'STATEMENT DETAIL: page|HAS_FEATURE|positive feedback option', 'STATEMENT DETAIL: page|HAS_FEATURE|improvement feedback option']

2025-05-06 16:24:33:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::abd5427c:978b:e901bab9
2025-05-06 16:24:33:DEBUG:g.l.s.g.f.falkordb_graph_store:[ab40b] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:33:DEBUG:g.l.s.g.f.falkordb_graph_store:[ab40b] 0ms Results: [**REDACTED**]
2025-05-06 16:24:33:DEBUG:g.l.s.g.f.falkordb_graph_store:[ee21b] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:33:DEBUG:g.l.s.g.f.falkordb_graph_store:[ee21b] 0ms Results: [**REDACTED**]

Extracting topics [nodes: 10, num_workers: 4]:  10%|█         | 1/10 [00:11<01:40, 11.21s/it]
2025-05-06 16:24:35:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Neptune Analytics Features and Data Loading

  entities:
    Neptune Analytics|Software
    Neptune Database|Software
    Amazon S3|Service

  proposition: Neptune Analytics is a tool for intensive data analysis.
    entity-attribute relationships:
    Neptune Analytics|DESCRIBED_AS|tool for intensive data analysis

  proposition: Neptune Analytics can load data from Neptune Database graphs.
    entity-entity relationships:
    Neptune Analytics|LOADS_DATA_FROM|Neptune Database

  proposition: Neptune Analytics can load data from Neptune Database snapshots.
    entity-entity relationships:
    Neptune Analytics|LOADS_DATA_FROM|Neptune Database

  proposition: Neptune Analytics can load graph data stored in Amazon S3.
    entity-entity relationships:
    Neptune Analytics|LOADS_DATA_FROM|Amazon S3

  proposition: Users can create a new Neptune Analytics graph to get started.
    entity-attribute relationships:
    Neptune Analytics|FEATURE|create new graph

  proposition: Users can load data into Neptune Analytics graphs in multiple ways.
    entity-attribute relationships:
    Neptune Analytics|FEATURE|multiple data loading methods

  proposition: Neptune Analytics has specific features.
    entity-attribute relationships:
    Neptune Analytics|HAS|specific features

  proposition: Neptune Analytics and Neptune Database have different use cases.
    entity-entity relationships:
    Neptune Analytics|DIFFERS_FROM|Neptune Database
    Neptune Analytics|HAS|different use cases
    Neptune Database|HAS|different use cases

topic: Amazon Web Services Documentation

  entities:
    Amazon Web Services Documentation|Creative Work
    Javascript|Software

  proposition: Javascript is required to use the Amazon Web Services Documentation.
    entity-entity relationships:
    Amazon Web Services Documentation|REQUIRES|Javascript

  proposition: Users can refer to their browser's Help pages for instructions on enabling Javascript.
    entity-attribute relationships:
    Javascript|ENABLING_INSTRUCTIONS|browser's Help pages

  proposition: Amazon Web Services Documentation has document conventions.
    entity-attribute relationships:
    Amazon Web Services Documentation|HAS|document conventions

topic: Documentation Feedback System

  entities:
    Amazon Web Services Documentation|Creative Work

  proposition: The page contains a feedback mechanism for users to indicate if it was helpful.
    entity-attribute relationships:
    Amazon Web Services Documentation|HAS|feedback mechanism
    Amazon Web Services Documentation|FEEDBACK_TYPE|helpfulness indication
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Neptune Analytics Features and Data Loading', entities=[Entity(entityId=None, value='Neptune Analytics', classification='Software'), Entity(entityId=None, value='Neptune Database', classification='Software'), Entity(entityId=None, value='Amazon S3', classification='Service')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is a tool for intensive data analysis.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='DESCRIBED AS'), object=None, complement='tool for intensive data analysis')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can load data from Neptune Database graphs.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='LOADS DATA FROM'), object=Entity(entityId=None, value='Neptune Database', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can load data from Neptune Database snapshots.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='LOADS DATA FROM'), object=Entity(entityId=None, value='Neptune Database', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can load graph data stored in Amazon S3.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='LOADS DATA FROM'), object=Entity(entityId=None, value='Amazon S3', classification='Service'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Users can create a new Neptune Analytics graph to get started.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='FEATURE'), object=None, complement='create new graph')]), Statement(statementId=None, topicId=None, chunkId=None, value='Users can load data into Neptune Analytics graphs in multiple ways.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='FEATURE'), object=None, complement='multiple data loading methods')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics has specific features.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='HAS'), object=None, complement='specific features')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics and Neptune Database have different use cases.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='DIFFERS FROM'), object=Entity(entityId=None, value='Neptune Database', classification='Software'), complement=None), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='HAS'), object=None, complement='different use cases'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Database', classification='Software'), predicate=Relation(value='HAS'), object=None, complement='different use cases')])]), Topic(topicId=None, chunkIds=[], value='Amazon Web Services Documentation', entities=[Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), Entity(entityId=None, value='Javascript', classification='Software')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Javascript is required to use the Amazon Web Services Documentation.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='REQUIRES'), object=Entity(entityId=None, value='Javascript', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value="Users can refer to their browser's Help pages for instructions on enabling Javascript.", details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Javascript', classification='Software'), predicate=Relation(value='ENABLING INSTRUCTIONS'), object=None, complement="browser's Help pages")]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Web Services Documentation has document conventions.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='HAS'), object=None, complement='document conventions')])]), Topic(topicId=None, chunkIds=[], value='Documentation Feedback System', entities=[Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='The page contains a feedback mechanism for users to indicate if it was helpful.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='HAS'), object=None, complement='feedback mechanism'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services Documentation', classification='Creative Work'), predicate=Relation(value='FEEDBACK TYPE'), object=None, complement='helpfulness indication')])])]
------------------------------------
garbage: []

2025-05-06 16:24:35:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::abd5427c:978b:56aed072
2025-05-06 16:24:35:DEBUG:g.l.s.g.f.falkordb_graph_store:[0c4da] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:35:DEBUG:g.l.s.g.f.falkordb_graph_store:[0c4da] 0ms Results: [**REDACTED**]
2025-05-06 16:24:35:DEBUG:g.l.s.g.f.falkordb_graph_store:[5ffa2] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:35:DEBUG:g.l.s.g.f.falkordb_graph_store:[5ffa2] 0ms Results: [**REDACTED**]

Extracting topics [nodes: 10, num_workers: 4]:  20%|██        | 2/10 [00:13<00:46,  5.84s/it]
2025-05-06 16:24:38:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Neptune Analytics Features and Capabilities

  entities:
    Neptune Analytics|Software
    Neptune Database|Software

  proposition: Neptune Analytics is a solution for analyzing graph databases and graph datasets.
    entity-attribute relationships:
    Neptune Analytics|FUNCTION|analyzing graph databases
    Neptune Analytics|FUNCTION|analyzing graph datasets

    entity-entity relationships:
    Neptune Analytics|IS_A|solution

  proposition: Neptune Analytics uses popular graph analytic algorithms.
    entity-attribute relationships:
    Neptune Analytics|USES|popular graph analytic algorithms

  proposition: Neptune Analytics uses low-latency analytic queries.
    entity-attribute relationships:
    Neptune Analytics|USES|low-latency analytic queries

  proposition: Neptune Analytics can analyze graphs stored in data lakes.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|analyze graphs stored in data lakes

  proposition: Neptune Analytics can be used to build targeted content recommendations.
    entity-attribute relationships:
    Neptune Analytics|USE_CASE|build targeted content recommendations

  proposition: Neptune Analytics can assist with fraud investigations.
    entity-attribute relationships:
    Neptune Analytics|USE_CASE|assist with fraud investigations

  proposition: Neptune Analytics can detect network threats.
    entity-attribute relationships:
    Neptune Analytics|USE_CASE|detect network threats

  proposition: Neptune Analytics provides a simple API for loading graph data.
    entity-attribute relationships:
    Neptune Analytics|PROVIDES|simple API for loading graph data

  proposition: Neptune Analytics provides a simple API for querying graph data.
    entity-attribute relationships:
    Neptune Analytics|PROVIDES|simple API for querying graph data

  proposition: Neptune Analytics provides a simple API for analyzing graph data.
    entity-attribute relationships:
    Neptune Analytics|PROVIDES|simple API for analyzing graph data

  proposition: Neptune Analytics removes the overhead of building complex data-analytics pipelines.
    entity-attribute relationships:
    Neptune Analytics|BENEFIT|removes overhead of building complex data-analytics pipelines

  proposition: Neptune Analytics removes the overhead of managing complex data-analytics pipelines.
    entity-attribute relationships:
    Neptune Analytics|BENEFIT|removes overhead of managing complex data-analytics pipelines

  proposition: Neptune Analytics can analyze data in Neptune Database.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|analyze data in Neptune Database

    entity-entity relationships:
    Neptune Analytics|ANALYZES|Neptune Database

  proposition: Neptune Analytics can analyze graph data stored externally.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|analyze graph data stored externally

  proposition: Neptune Analytics can load large datasets quickly into memory.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|load large datasets quickly into memory

  proposition: Neptune Analytics can analyze graphs with tens of billions of relationships.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|analyze graphs with tens of billions of relationships

  proposition: Neptune Analytics can process thousands of analytic queries per second.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|process thousands of analytic queries per second

  proposition: Neptune Analytics uses popular graph analytics algorithms.
    entity-attribute relationships:
    Neptune Analytics|USES|popular graph analytics algorithms
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Neptune Analytics Features and Capabilities', entities=[Entity(entityId=None, value='Neptune Analytics', classification='Software'), Entity(entityId=None, value='Neptune Database', classification='Software')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is a solution for analyzing graph databases and graph datasets.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='FUNCTION'), object=None, complement='analyzing graph databases'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='FUNCTION'), object=None, complement='analyzing graph datasets'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='IS A'), object=None, complement='solution')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics uses popular graph analytic algorithms.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='USES'), object=None, complement='popular graph analytic algorithms')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics uses low-latency analytic queries.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='USES'), object=None, complement='low-latency analytic queries')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can analyze graphs stored in data lakes.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='analyze graphs stored in data lakes')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can be used to build targeted content recommendations.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='USE CASE'), object=None, complement='build targeted content recommendations')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can assist with fraud investigations.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='USE CASE'), object=None, complement='assist with fraud investigations')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can detect network threats.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='USE CASE'), object=None, complement='detect network threats')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics provides a simple API for loading graph data.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='PROVIDES'), object=None, complement='simple API for loading graph data')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics provides a simple API for querying graph data.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='PROVIDES'), object=None, complement='simple API for querying graph data')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics provides a simple API for analyzing graph data.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='PROVIDES'), object=None, complement='simple API for analyzing graph data')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics removes the overhead of building complex data-analytics pipelines.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='BENEFIT'), object=None, complement='removes overhead of building complex data-analytics pipelines')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics removes the overhead of managing complex data-analytics pipelines.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='BENEFIT'), object=None, complement='removes overhead of managing complex data-analytics pipelines')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can analyze data in Neptune Database.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='analyze data in Neptune Database'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='ANALYZES'), object=Entity(entityId=None, value='Neptune Database', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can analyze graph data stored externally.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='analyze graph data stored externally')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can load large datasets quickly into memory.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='load large datasets quickly into memory')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can analyze graphs with tens of billions of relationships.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='analyze graphs with tens of billions of relationships')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can process thousands of analytic queries per second.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='process thousands of analytic queries per second')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics uses popular graph analytics algorithms.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='USES'), object=None, complement='popular graph analytics algorithms')])])]
------------------------------------
garbage: []


Extracting topics [nodes: 5, num_workers: 4]: 100%|██████████| 5/5 [00:24<00:00,  4.96s/it]

2025-05-06 16:24:40:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Neptune Analytics Overview and Features

  entities:
    Neptune Analytics|Software
    Amazon Neptune Database|Software

  proposition: Neptune Analytics is a memory-optimized graph database engine for analytics.
    entity-attribute relationships:
    Neptune Analytics|TYPE|memory-optimized graph database engine
    Neptune Analytics|PURPOSE|analytics

    entity-entity relationships:
    None

  proposition: Neptune Analytics allows users to get insights and find trends by processing large amounts of graph data in seconds.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|get insights
    Neptune Analytics|CAPABILITY|find trends
    Neptune Analytics|PROCESSING_SPEED|seconds
    Neptune Analytics|DATA_TYPE|graph data
    Neptune Analytics|DATA_VOLUME|large amounts

    entity-entity relationships:
    None

  proposition: Neptune Analytics stores large graph datasets in memory to analyze graph data quickly and easily.
    entity-attribute relationships:
    Neptune Analytics|STORAGE_METHOD|in memory
    Neptune Analytics|DATA_TYPE|graph datasets
    Neptune Analytics|DATA_VOLUME|large
    Neptune Analytics|ANALYSIS_SPEED|quickly
    Neptune Analytics|ANALYSIS_EASE|easily

    entity-entity relationships:
    None

  proposition: Neptune Analytics supports a library of optimized graph analytic algorithms.
    entity-attribute relationships:
    Neptune Analytics|FEATURE|library of optimized graph analytic algorithms

    entity-entity relationships:
    None

  proposition: Neptune Analytics supports low-latency graph queries.
    entity-attribute relationships:
    Neptune Analytics|FEATURE|low-latency graph queries

    entity-entity relationships:
    None

  proposition: Neptune Analytics supports vector search capabilities within graph traversals.
    entity-attribute relationships:
    Neptune Analytics|FEATURE|vector search capabilities
    Neptune Analytics|FEATURE|graph traversals

    entity-entity relationships:
    None

  proposition: Neptune Analytics is ideal for investigatory workloads.
    entity-attribute relationships:
    Neptune Analytics|SUITABLE_FOR|investigatory workloads

    entity-entity relationships:
    None

  proposition: Neptune Analytics is ideal for exploratory workloads.
    entity-attribute relationships:
    Neptune Analytics|SUITABLE_FOR|exploratory workloads

    entity-entity relationships:
    None

  proposition: Neptune Analytics is ideal for data-science workloads.
    entity-attribute relationships:
    Neptune Analytics|SUITABLE_FOR|data-science workloads

    entity-entity relationships:
    None

  proposition: Neptune Analytics is ideal for workloads that require fast iteration for data processing.
    entity-attribute relationships:
    Neptune Analytics|SUITABLE_FOR|workloads requiring fast iteration for data processing

    entity-entity relationships:
    None

  proposition: Neptune Analytics is ideal for workloads that require fast iteration for analytical processing.
    entity-attribute relationships:
    Neptune Analytics|SUITABLE_FOR|workloads requiring fast iteration for analytical processing

    entity-entity relationships:
    None

  proposition: Neptune Analytics is ideal for workloads that require fast iteration for algorithmic processing.
    entity-attribute relationships:
    Neptune Analytics|SUITABLE_FOR|workloads requiring fast iteration for algorithmic processing

    entity-entity relationships:
    None

  proposition: Neptune Analytics is ideal for workloads that require vector search on graph data.
    entity-attribute relationships:
    Neptune Analytics|SUITABLE_FOR|workloads requiring vector search on graph data

    entity-entity relationships:
    None

  proposition: Neptune Analytics complements Amazon Neptune Database.
    entity-attribute relationships:
    None

    entity-entity relationships:
    Neptune Analytics|COMPLEMENTS|Amazon Neptune Database

  proposition: Amazon Neptune Database is a popular managed graph database.
    entity-attribute relationships:
    Amazon Neptune Database|TYPE|managed graph database
    Amazon Neptune Database|POPULARITY|popular

    entity-entity relationships:
    None
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Neptune Analytics Overview and Features', entities=[Entity(entityId=None, value='Neptune Analytics', classification='Software'), Entity(entityId=None, value='Amazon Neptune Database', classification='Software')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is a memory-optimized graph database engine for analytics.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='memory-optimized graph database engine'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='PURPOSE'), object=None, complement='analytics')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics allows users to get insights and find trends by processing large amounts of graph data in seconds.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='get insights'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='find trends'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='PROCESSING SPEED'), object=None, complement='seconds'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='DATA TYPE'), object=None, complement='graph data'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='DATA VOLUME'), object=None, complement='large amounts')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics stores large graph datasets in memory to analyze graph data quickly and easily.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='STORAGE METHOD'), object=None, complement='in memory'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='DATA TYPE'), object=None, complement='graph datasets'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='DATA VOLUME'), object=None, complement='large'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='ANALYSIS SPEED'), object=None, complement='quickly'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='ANALYSIS EASE'), object=None, complement='easily')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics supports a library of optimized graph analytic algorithms.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='FEATURE'), object=None, complement='library of optimized graph analytic algorithms')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics supports low-latency graph queries.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='FEATURE'), object=None, complement='low-latency graph queries')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics supports vector search capabilities within graph traversals.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='FEATURE'), object=None, complement='vector search capabilities'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='FEATURE'), object=None, complement='graph traversals')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is ideal for investigatory workloads.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='SUITABLE FOR'), object=None, complement='investigatory workloads')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is ideal for exploratory workloads.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='SUITABLE FOR'), object=None, complement='exploratory workloads')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is ideal for data-science workloads.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='SUITABLE FOR'), object=None, complement='data-science workloads')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is ideal for workloads that require fast iteration for data processing.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='SUITABLE FOR'), object=None, complement='workloads requiring fast iteration for data processing')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is ideal for workloads that require fast iteration for analytical processing.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='SUITABLE FOR'), object=None, complement='workloads requiring fast iteration for analytical processing')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is ideal for workloads that require fast iteration for algorithmic processing.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='SUITABLE FOR'), object=None, complement='workloads requiring fast iteration for algorithmic processing')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is ideal for workloads that require vector search on graph data.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='SUITABLE FOR'), object=None, complement='workloads requiring vector search on graph data')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics complements Amazon Neptune Database.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='COMPLEMENTS'), object=Entity(entityId=None, value='Amazon Neptune Database', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune Database is a popular managed graph database.', details=['None'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune Database', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='managed graph database'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune Database', classification='Software'), predicate=Relation(value='POPULARITY'), object=None, complement='popular')])])]
------------------------------------
garbage: ['STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None', 'STATEMENT DETAIL: None']

2025-05-06 16:24:40:DEBUG:g.l.i.e.scoped_value_provider:Adding scoped values: [label: StatementTopic, scope: aws::bd6a6b1b:8115, values: ['Neptune Analytics Overview and Features']]
2025-05-06 16:24:40:DEBUG:g.l.s.g.f.falkordb_graph_store:[af89d/b9783] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:40:DEBUG:g.l.s.g.f.falkordb_graph_store:[af89d/b9783] 0ms Results: [**REDACTED**]
2025-05-06 16:24:40:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::abd5427c:978b:cf49e6ec
2025-05-06 16:24:40:DEBUG:g.l.s.g.f.falkordb_graph_store:[d1c3d] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:40:DEBUG:g.l.s.g.f.falkordb_graph_store:[d1c3d] 0ms Results: [**REDACTED**]
2025-05-06 16:24:40:DEBUG:g.l.s.g.f.falkordb_graph_store:[4d460] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:40:DEBUG:g.l.s.g.f.falkordb_graph_store:[4d460] 0ms Results: [**REDACTED**]

Extracting topics [nodes: 10, num_workers: 4]:  30%|███       | 3/10 [00:18<00:38,  5.53s/it]
2025-05-06 16:24:49:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Amazon Neptune Features and Capabilities

  entities:
    Amazon Neptune|Service
    Apache TinkerPop Gremlin|Software
    Neo4j's openCypher|Software
    SPARQL|Software
    Amazon S3|Service

  proposition: Amazon Neptune is a graph database service.
    entity-attribute relationships:
    Amazon Neptune|TYPE|graph database service

    entity-entity relationships:

  proposition: Amazon Neptune is fast.
    entity-attribute relationships:
    Amazon Neptune|DESCRIBED_BY|fast

    entity-entity relationships:

  proposition: Amazon Neptune is reliable.
    entity-attribute relationships:
    Amazon Neptune|DESCRIBED_BY|reliable

    entity-entity relationships:

  proposition: Amazon Neptune is fully managed.
    entity-attribute relationships:
    Amazon Neptune|DESCRIBED_BY|fully managed

    entity-entity relationships:

  proposition: Amazon Neptune makes it easy to build applications that work with highly connected datasets.
    entity-attribute relationships:
    Amazon Neptune|CAPABILITY|build applications with highly connected datasets

    entity-entity relationships:

  proposition: Amazon Neptune makes it easy to run applications that work with highly connected datasets.
    entity-attribute relationships:
    Amazon Neptune|CAPABILITY|run applications with highly connected datasets

    entity-entity relationships:

  proposition: Amazon Neptune has a core engine.
    entity-attribute relationships:
    Amazon Neptune|HAS_COMPONENT|core engine

    entity-entity relationships:

  proposition: The core engine of Amazon Neptune is purpose-built.
    entity-attribute relationships:
    Amazon Neptune|CORE_ENGINE_ATTRIBUTE|purpose-built

    entity-entity relationships:

  proposition: The core engine of Amazon Neptune is a high-performance graph database engine.
    entity-attribute relationships:
    Amazon Neptune|CORE_ENGINE_TYPE|high-performance graph database engine

    entity-entity relationships:

  proposition: The core engine of Amazon Neptune is optimized for storing billions of relationships.
    entity-attribute relationships:
    Amazon Neptune|CORE_ENGINE_CAPABILITY|storing billions of relationships

    entity-entity relationships:

  proposition: The core engine of Amazon Neptune is optimized for querying the graph with milliseconds latency.
    entity-attribute relationships:
    Amazon Neptune|CORE_ENGINE_CAPABILITY|querying graph with milliseconds latency

    entity-entity relationships:

  proposition: Amazon Neptune supports Apache TinkerPop Gremlin.
    entity-attribute relationships:
    Apache TinkerPop Gremlin|TYPE|property-graph query language

    entity-entity relationships:
    Amazon Neptune|SUPPORTS|Apache TinkerPop Gremlin

  proposition: Apache TinkerPop Gremlin is a property-graph query language.
    entity-attribute relationships:
    Apache TinkerPop Gremlin|TYPE|property-graph query language

    entity-entity relationships:

  proposition: Amazon Neptune supports Neo4j's openCypher.
    entity-attribute relationships:
    Neo4j's openCypher|TYPE|property-graph query language

    entity-entity relationships:
    Amazon Neptune|SUPPORTS|Neo4j's openCypher

  proposition: Neo4j's openCypher is a property-graph query language.
    entity-attribute relationships:
    Neo4j's openCypher|TYPE|property-graph query language

    entity-entity relationships:

  proposition: Amazon Neptune supports SPARQL.
    entity-attribute relationships:
    SPARQL|TYPE|RDF query language

    entity-entity relationships:
    Amazon Neptune|SUPPORTS|SPARQL

  proposition: SPARQL is the W3C's RDF query language.
    entity-attribute relationships:
    SPARQL|TYPE|RDF query language
    SPARQL|CREATOR|W3C

    entity-entity relationships:

  proposition: Amazon Neptune enables building queries that efficiently navigate highly connected datasets.
    entity-attribute relationships:
    Amazon Neptune|CAPABILITY|building efficient queries for highly connected datasets

    entity-entity relationships:

  proposition: Amazon Neptune powers recommendation engines.
    entity-attribute relationships:

    entity-entity relationships:
    Amazon Neptune|POWERS|recommendation engines

  proposition: Amazon Neptune powers fraud detection.
    entity-attribute relationships:

    entity-entity relationships:
    Amazon Neptune|POWERS|fraud detection

  proposition: Amazon Neptune powers knowledge graphs.
    entity-attribute relationships:

    entity-entity relationships:
    Amazon Neptune|POWERS|knowledge graphs

  proposition: Amazon Neptune powers drug discovery.
    entity-attribute relationships:

    entity-entity relationships:
    Amazon Neptune|POWERS|drug discovery

  proposition: Amazon Neptune powers network security.
    entity-attribute relationships:

    entity-entity relationships:
    Amazon Neptune|POWERS|network security

  proposition: The Amazon Neptune database is highly available.
    entity-attribute relationships:
    Amazon Neptune|AVAILABILITY|highly available

    entity-entity relationships:

  proposition: Amazon Neptune has read replicas.
    entity-attribute relationships:
    Amazon Neptune|HAS_FEATURE|read replicas

    entity-entity relationships:

  proposition: Amazon Neptune has point-in-time recovery.
    entity-attribute relationships:
    Amazon Neptune|HAS_FEATURE|point-in-time recovery

    entity-entity relationships:

  proposition: Amazon Neptune has continuous backup to Amazon S3.
    entity-attribute relationships:
    Amazon Neptune|HAS_FEATURE|continuous backup

    entity-entity relationships:
    Amazon Neptune|BACKS_UP_TO|Amazon S3

  proposition: Amazon Neptune has replication across Availability Zones.
    entity-attribute relationships:
    Amazon Neptune|HAS_FEATURE|replication across Availability Zones

    entity-entity relationships:
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Amazon Neptune Features and Capabilities', entities=[Entity(entityId=None, value='Amazon Neptune', classification='Service'), Entity(entityId=None, value='Apache TinkerPop Gremlin', classification='Software'), Entity(entityId=None, value="Neo4j's openCypher", classification='Software'), Entity(entityId=None, value='SPARQL', classification='Software'), Entity(entityId=None, value='Amazon S3', classification='Service')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune is a graph database service.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='TYPE'), object=None, complement='graph database service')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune is fast.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='DESCRIBED BY'), object=None, complement='fast')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune is reliable.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='DESCRIBED BY'), object=None, complement='reliable')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune is fully managed.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='DESCRIBED BY'), object=None, complement='fully managed')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune makes it easy to build applications that work with highly connected datasets.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='build applications with highly connected datasets')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune makes it easy to run applications that work with highly connected datasets.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='run applications with highly connected datasets')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune has a core engine.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='HAS COMPONENT'), object=None, complement='core engine')]), Statement(statementId=None, topicId=None, chunkId=None, value='The core engine of Amazon Neptune is purpose-built.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='CORE ENGINE ATTRIBUTE'), object=None, complement='purpose-built')]), Statement(statementId=None, topicId=None, chunkId=None, value='The core engine of Amazon Neptune is a high-performance graph database engine.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='CORE ENGINE TYPE'), object=None, complement='high-performance graph database engine')]), Statement(statementId=None, topicId=None, chunkId=None, value='The core engine of Amazon Neptune is optimized for storing billions of relationships.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='CORE ENGINE CAPABILITY'), object=None, complement='storing billions of relationships')]), Statement(statementId=None, topicId=None, chunkId=None, value='The core engine of Amazon Neptune is optimized for querying the graph with milliseconds latency.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='CORE ENGINE CAPABILITY'), object=None, complement='querying graph with milliseconds latency')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune supports Apache TinkerPop Gremlin.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Apache TinkerPop Gremlin', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='property-graph query language'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='Apache TinkerPop Gremlin', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Apache TinkerPop Gremlin is a property-graph query language.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Apache TinkerPop Gremlin', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='property-graph query language')]), Statement(statementId=None, topicId=None, chunkId=None, value="Amazon Neptune supports Neo4j's openCypher.", details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value="Neo4j's openCypher", classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='property-graph query language'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value="Neo4j's openCypher", classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value="Neo4j's openCypher is a property-graph query language.", details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value="Neo4j's openCypher", classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='property-graph query language')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune supports SPARQL.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SPARQL', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='RDF query language'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='SPARQL', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value="SPARQL is the W3C's RDF query language.", details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SPARQL', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='RDF query language'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SPARQL', classification='Software'), predicate=Relation(value='CREATOR'), object=None, complement='W3C')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune enables building queries that efficiently navigate highly connected datasets.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='building efficient queries for highly connected datasets')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune powers recommendation engines.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='POWERS'), object=None, complement='recommendation engines')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune powers fraud detection.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='POWERS'), object=None, complement='fraud detection')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune powers knowledge graphs.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='POWERS'), object=None, complement='knowledge graphs')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune powers drug discovery.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='POWERS'), object=None, complement='drug discovery')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune powers network security.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='POWERS'), object=None, complement='network security')]), Statement(statementId=None, topicId=None, chunkId=None, value='The Amazon Neptune database is highly available.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='AVAILABILITY'), object=None, complement='highly available')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune has read replicas.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='HAS FEATURE'), object=None, complement='read replicas')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune has point-in-time recovery.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='HAS FEATURE'), object=None, complement='point-in-time recovery')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune has continuous backup to Amazon S3.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='HAS FEATURE'), object=None, complement='continuous backup'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='BACKS UP TO'), object=Entity(entityId=None, value='Amazon S3', classification='Service'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune has replication across Availability Zones.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='HAS FEATURE'), object=None, complement='replication across Availability Zones')])])]
------------------------------------
garbage: []

2025-05-06 16:24:49:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::bd6a6b1b:8115:e862442d
2025-05-06 16:24:49:DEBUG:g.l.s.g.f.falkordb_graph_store:[42ccc] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:49:DEBUG:g.l.s.g.f.falkordb_graph_store:[42ccc] 0ms Results: [**REDACTED**]
2025-05-06 16:24:49:DEBUG:g.l.s.g.f.falkordb_graph_store:[39265] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:49:DEBUG:g.l.s.g.f.falkordb_graph_store:[39265] 0ms Results: [**REDACTED**]

Extracting topics [nodes: 10, num_workers: 4]:  40%|████      | 4/10 [00:27<00:40,  6.81s/it]
2025-05-06 16:24:52:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Neptune Graph Database Features and Security

  entities:
    Neptune|Software
    Property Graph|Software
    Resource Description Framework|Software
    openCypher|Software
    Gremlin|Software
    SPARQL|Software
    Amazon Virtual Private Cloud|Service
    AWS Key Management Service|Service

  proposition: Neptune supports Property Graph (PG) model.
    entity-attribute relationships:
    Neptune|SUPPORTS|Property Graph model

    entity-entity relationships:
    Neptune|SUPPORTS|Property Graph

  proposition: Neptune supports Resource Description Framework (RDF) model.
    entity-attribute relationships:
    Neptune|SUPPORTS|Resource Description Framework model

    entity-entity relationships:
    Neptune|SUPPORTS|Resource Description Framework

  proposition: Neptune supports openCypher query language for Property Graph model.
    entity-attribute relationships:
    Neptune|SUPPORTS|openCypher query language
    openCypher|USED_FOR|Property Graph model

    entity-entity relationships:
    Neptune|SUPPORTS|openCypher
    openCypher|ASSOCIATED_WITH|Property Graph

  proposition: Neptune supports Gremlin query language for Property Graph model.
    entity-attribute relationships:
    Neptune|SUPPORTS|Gremlin query language
    Gremlin|USED_FOR|Property Graph model

    entity-entity relationships:
    Neptune|SUPPORTS|Gremlin
    Gremlin|ASSOCIATED_WITH|Property Graph

  proposition: Neptune supports SPARQL query language for Resource Description Framework model.
    entity-attribute relationships:
    Neptune|SUPPORTS|SPARQL query language
    SPARQL|USED_FOR|Resource Description Framework model

    entity-entity relationships:
    Neptune|SUPPORTS|SPARQL
    SPARQL|ASSOCIATED_WITH|Resource Description Framework

  proposition: Neptune provides high performance for graph models.
    entity-attribute relationships:
    Neptune|PROVIDES|high performance
    Neptune|PERFORMANCE_FOR|graph models

  proposition: Neptune provides high performance for query languages.
    entity-attribute relationships:
    Neptune|PROVIDES|high performance
    Neptune|PERFORMANCE_FOR|query languages

  proposition: Neptune provides multiple levels of security for databases.
    entity-attribute relationships:
    Neptune|PROVIDES|multiple levels of security
    Neptune|SECURITY_FOR|databases

  proposition: Neptune offers network isolation using Amazon Virtual Private Cloud (Amazon VPC).
    entity-attribute relationships:
    Neptune|OFFERS|network isolation

    entity-entity relationships:
    Neptune|USES|Amazon Virtual Private Cloud

  proposition: Neptune offers encryption at rest using keys.
    entity-attribute relationships:
    Neptune|OFFERS|encryption at rest
    Neptune|USES|keys for encryption

  proposition: Users create and control encryption keys through AWS Key Management Service (AWS KMS).
    entity-entity relationships:
    Users|USE|AWS Key Management Service
    AWS Key Management Service|MANAGES|encryption keys

  proposition: Encrypted Neptune instances have encrypted data in underlying storage.
    entity-attribute relationships:
    Neptune|HAS|encrypted instances
    Neptune|HAS|encrypted data in underlying storage

  proposition: Encrypted Neptune instances have encrypted automated backups.
    entity-attribute relationships:
    Neptune|HAS|encrypted automated backups

  proposition: Encrypted Neptune instances have encrypted snapshots.
    entity-attribute relationships:
    Neptune|HAS|encrypted snapshots

  proposition: Encrypted Neptune instances have encrypted replicas in the same cluster.
    entity-attribute relationships:
    Neptune|HAS|encrypted replicas
    Neptune|HAS|same cluster for replicas
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Neptune Graph Database Features and Security', entities=[Entity(entityId=None, value='Neptune', classification='Software'), Entity(entityId=None, value='Property Graph', classification='Software'), Entity(entityId=None, value='Resource Description Framework', classification='Software'), Entity(entityId=None, value='openCypher', classification='Software'), Entity(entityId=None, value='Gremlin', classification='Software'), Entity(entityId=None, value='SPARQL', classification='Software'), Entity(entityId=None, value='Amazon Virtual Private Cloud', classification='Service'), Entity(entityId=None, value='AWS Key Management Service', classification='Service')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Neptune supports Property Graph (PG) model.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='Property Graph model'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='Property Graph', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune supports Resource Description Framework (RDF) model.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='Resource Description Framework model'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='Resource Description Framework', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune supports openCypher query language for Property Graph model.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='openCypher query language'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='openCypher', classification='Software'), predicate=Relation(value='USED FOR'), object=None, complement='Property Graph model'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='openCypher', classification='Software'), complement=None), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='openCypher', classification='Software'), predicate=Relation(value='ASSOCIATED WITH'), object=Entity(entityId=None, value='Property Graph', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune supports Gremlin query language for Property Graph model.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='Gremlin query language'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Gremlin', classification='Software'), predicate=Relation(value='USED FOR'), object=None, complement='Property Graph model'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='Gremlin', classification='Software'), complement=None), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Gremlin', classification='Software'), predicate=Relation(value='ASSOCIATED WITH'), object=Entity(entityId=None, value='Property Graph', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune supports SPARQL query language for Resource Description Framework model.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='SPARQL query language'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SPARQL', classification='Software'), predicate=Relation(value='USED FOR'), object=None, complement='Resource Description Framework model'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='SPARQL', classification='Software'), complement=None), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SPARQL', classification='Software'), predicate=Relation(value='ASSOCIATED WITH'), object=Entity(entityId=None, value='Resource Description Framework', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune provides high performance for graph models.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='PROVIDES'), object=None, complement='high performance'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='PERFORMANCE FOR'), object=None, complement='graph models')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune provides high performance for query languages.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='PROVIDES'), object=None, complement='high performance'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='PERFORMANCE FOR'), object=None, complement='query languages')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune provides multiple levels of security for databases.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='PROVIDES'), object=None, complement='multiple levels of security'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SECURITY FOR'), object=None, complement='databases')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune offers network isolation using Amazon Virtual Private Cloud (Amazon VPC).', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='OFFERS'), object=None, complement='network isolation'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='USES'), object=Entity(entityId=None, value='Amazon Virtual Private Cloud', classification='Service'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune offers encryption at rest using keys.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='OFFERS'), object=None, complement='encryption at rest'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='USES'), object=None, complement='keys for encryption')]), Statement(statementId=None, topicId=None, chunkId=None, value='Users create and control encryption keys through AWS Key Management Service (AWS KMS).', details=['Users USE AWS Key Management Service'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='AWS Key Management Service', classification='Service'), predicate=Relation(value='MANAGES'), object=None, complement='encryption keys')]), Statement(statementId=None, topicId=None, chunkId=None, value='Encrypted Neptune instances have encrypted data in underlying storage.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='HAS'), object=None, complement='encrypted instances'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='HAS'), object=None, complement='encrypted data in underlying storage')]), Statement(statementId=None, topicId=None, chunkId=None, value='Encrypted Neptune instances have encrypted automated backups.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='HAS'), object=None, complement='encrypted automated backups')]), Statement(statementId=None, topicId=None, chunkId=None, value='Encrypted Neptune instances have encrypted snapshots.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='HAS'), object=None, complement='encrypted snapshots')]), Statement(statementId=None, topicId=None, chunkId=None, value='Encrypted Neptune instances have encrypted replicas in the same cluster.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='HAS'), object=None, complement='encrypted replicas'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='HAS'), object=None, complement='same cluster for replicas')])])]
------------------------------------
garbage: ['STATEMENT DETAIL: Users|USE|AWS Key Management Service']

2025-05-06 16:24:52:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::abd5427c:978b:7ae8328d
2025-05-06 16:24:52:DEBUG:g.l.s.g.f.falkordb_graph_store:[0b153] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:52:DEBUG:g.l.s.g.f.falkordb_graph_store:[0b153] 0ms Results: [**REDACTED**]
2025-05-06 16:24:52:DEBUG:g.l.s.g.f.falkordb_graph_store:[21a6f] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:52:DEBUG:g.l.s.g.f.falkordb_graph_store:[21a6f] 0ms Results: [**REDACTED**]

Extracting topics [nodes: 10, num_workers: 4]:  50%|█████     | 5/10 [00:30<00:27,  5.53s/it]
2025-05-06 16:24:52:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Amazon Neptune Features and Capabilities

  entities:
    Amazon Neptune|Product
    Amazon Web Services|Company
    GitHub|Company

  proposition: Amazon Neptune uses popular graph analytic algorithms.
    entity-attribute relationships:
    Amazon Neptune|USES|popular graph analytic algorithms

  proposition: Amazon Neptune supports low-latency analytic queries.
    entity-attribute relationships:
    Amazon Neptune|SUPPORTS|low-latency analytic queries

  proposition: Amazon Neptune has a Getting Started guide.
    entity-attribute relationships:
    Amazon Neptune|HAS|Getting Started guide

  proposition: Amazon Neptune has an Overview of Features guide.
    entity-attribute relationships:
    Amazon Neptune|HAS|Overview of Features guide

  proposition: Amazon Neptune offers Jupyter notebooks for learning and development.
    entity-attribute relationships:
    Amazon Neptune|OFFERS|Jupyter notebooks
    Jupyter notebooks|PURPOSE|learning and development

  proposition: Amazon Neptune Jupyter notebooks can be used without incurring costs.
    entity-attribute relationships:
    Amazon Neptune Jupyter notebooks|COST|free

  proposition: AWS provides a GitHub repository for Reference Architectures for Using Graph Databases.
    entity-entity relationships:
    Amazon Web Services|PROVIDES|GitHub repository
    GitHub repository|CONTAINS|Reference Architectures for Using Graph Databases

  proposition: The AWS Reference Architectures repository informs choices about graph data models.
    entity-attribute relationships:
    AWS Reference Architectures repository|INFORMS|graph data models

  proposition: The AWS Reference Architectures repository informs choices about query languages.
    entity-attribute relationships:
    AWS Reference Architectures repository|INFORMS|query languages

  proposition: The AWS Reference Architectures repository provides examples of reference deployment architectures.
    entity-attribute relationships:
    AWS Reference Architectures repository|PROVIDES|reference deployment architectures

topic: Neptune DB Cluster Components and Features

  entities:
    Amazon Neptune|Product
    Primary DB instance|Software

  proposition: Amazon Neptune has a Primary DB instance.
    entity-entity relationships:
    Amazon Neptune|HAS|Primary DB instance

  proposition: The Primary DB instance supports read operations.
    entity-attribute relationships:
    Primary DB instance|SUPPORTS|read operations

  proposition: The Primary DB instance supports write operations.
    entity-attribute relationships:
    Primary DB instance|SUPPORTS|write operations

  proposition: The Primary DB instance performs all data modifications to the cluster volume.
    entity-attribute relationships:
    Primary DB instance|PERFORMS|data modifications
    Primary DB instance|MODIFIES|cluster volume
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Amazon Neptune Features and Capabilities', entities=[Entity(entityId=None, value='Amazon Neptune', classification='Product'), Entity(entityId=None, value='Amazon Web Services', classification='Company'), Entity(entityId=None, value='GitHub', classification='Company')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune uses popular graph analytic algorithms.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Product'), predicate=Relation(value='USES'), object=None, complement='popular graph analytic algorithms')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune supports low-latency analytic queries.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Product'), predicate=Relation(value='SUPPORTS'), object=None, complement='low-latency analytic queries')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune has a Getting Started guide.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Product'), predicate=Relation(value='HAS'), object=None, complement='Getting Started guide')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune has an Overview of Features guide.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Product'), predicate=Relation(value='HAS'), object=None, complement='Overview of Features guide')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune offers Jupyter notebooks for learning and development.', details=['Jupyter notebooks PURPOSE learning and development'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Product'), predicate=Relation(value='OFFERS'), object=None, complement='Jupyter notebooks')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune Jupyter notebooks can be used without incurring costs.', details=['Amazon Neptune Jupyter notebooks COST free'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='AWS provides a GitHub repository for Reference Architectures for Using Graph Databases.', details=['GitHub repository CONTAINS Reference Architectures for Using Graph Databases'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Web Services', classification='Company'), predicate=Relation(value='PROVIDES'), object=None, complement='GitHub repository')]), Statement(statementId=None, topicId=None, chunkId=None, value='The AWS Reference Architectures repository informs choices about graph data models.', details=['AWS Reference Architectures repository INFORMS graph data models'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='The AWS Reference Architectures repository informs choices about query languages.', details=['AWS Reference Architectures repository INFORMS query languages'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='The AWS Reference Architectures repository provides examples of reference deployment architectures.', details=['AWS Reference Architectures repository PROVIDES reference deployment architectures'], facts=[])]), Topic(topicId=None, chunkIds=[], value='Neptune DB Cluster Components and Features', entities=[Entity(entityId=None, value='Amazon Neptune', classification='Product'), Entity(entityId=None, value='Primary DB instance', classification='Software')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune has a Primary DB instance.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Product'), predicate=Relation(value='HAS'), object=Entity(entityId=None, value='Primary DB instance', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='The Primary DB instance supports read operations.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Primary DB instance', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='read operations')]), Statement(statementId=None, topicId=None, chunkId=None, value='The Primary DB instance supports write operations.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Primary DB instance', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='write operations')]), Statement(statementId=None, topicId=None, chunkId=None, value='The Primary DB instance performs all data modifications to the cluster volume.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Primary DB instance', classification='Software'), predicate=Relation(value='PERFORMS'), object=None, complement='data modifications'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Primary DB instance', classification='Software'), predicate=Relation(value='MODIFIES'), object=None, complement='cluster volume')])])]
------------------------------------
garbage: ['STATEMENT DETAIL: Jupyter notebooks|PURPOSE|learning and development', 'STATEMENT DETAIL: Amazon Neptune Jupyter notebooks|COST|free', 'STATEMENT DETAIL: GitHub repository|CONTAINS|Reference Architectures for Using Graph Databases', 'STATEMENT DETAIL: AWS Reference Architectures repository|INFORMS|graph data models', 'STATEMENT DETAIL: AWS Reference Architectures repository|INFORMS|query languages', 'STATEMENT DETAIL: AWS Reference Architectures repository|PROVIDES|reference deployment architectures']

2025-05-06 16:24:52:DEBUG:g.l.i.e.topic_extractor:Extracting topics for node aws::abd5427c:978b:fba12a15
2025-05-06 16:24:52:DEBUG:g.l.s.g.f.falkordb_graph_store:[0cc9a] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:52:DEBUG:g.l.s.g.f.falkordb_graph_store:[0cc9a] 0ms Results: [**REDACTED**]
2025-05-06 16:24:52:DEBUG:g.l.s.g.f.falkordb_graph_store:[2ca5d] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:24:52:DEBUG:g.l.s.g.f.falkordb_graph_store:[2ca5d] 0ms Results: [**REDACTED**]

Extracting topics [nodes: 10, num_workers: 4]:  60%|██████    | 6/10 [00:30<00:15,  3.76s/it]
2025-05-06 16:24:59:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Amazon Neptune Features and Capabilities

  entities:
    Amazon Neptune|Service
    SQL|Software
    Gremlin|Software
    openCypher|Software
    SPARQL|Software

  proposition: Amazon Neptune is a fully managed database service.
    entity-attribute relationships:
    Amazon Neptune|TYPE|fully managed database service

  proposition: Amazon Neptune eliminates the need for hardware provisioning.
    entity-attribute relationships:
    Amazon Neptune|ELIMINATES_NEED_FOR|hardware provisioning

  proposition: Amazon Neptune eliminates the need for software patching.
    entity-attribute relationships:
    Amazon Neptune|ELIMINATES_NEED_FOR|software patching

  proposition: Amazon Neptune eliminates the need for database setup.
    entity-attribute relationships:
    Amazon Neptune|ELIMINATES_NEED_FOR|database setup

  proposition: Amazon Neptune eliminates the need for database configuration.
    entity-attribute relationships:
    Amazon Neptune|ELIMINATES_NEED_FOR|database configuration

  proposition: Amazon Neptune eliminates the need for database backups.
    entity-attribute relationships:
    Amazon Neptune|ELIMINATES_NEED_FOR|database backups

  proposition: Amazon Neptune can create sophisticated graph applications.
    entity-attribute relationships:
    Amazon Neptune|CAPABILITY|create sophisticated graph applications

  proposition: Amazon Neptune can create interactive graph applications.
    entity-attribute relationships:
    Amazon Neptune|CAPABILITY|create interactive graph applications

  proposition: Amazon Neptune can query billions of relationships in milliseconds.
    entity-attribute relationships:
    Amazon Neptune|CAPABILITY|query billions of relationships in milliseconds

  proposition: SQL queries for highly connected data are complex.
    entity-attribute relationships:
    SQL|CHARACTERISTIC|complex for highly connected data

  proposition: SQL queries for highly connected data are hard to tune for performance.
    entity-attribute relationships:
    SQL|CHARACTERISTIC|hard to tune for performance with highly connected data

  proposition: Amazon Neptune supports the Gremlin query language.
    entity-entity relationships:
    Amazon Neptune|SUPPORTS|Gremlin

  proposition: Amazon Neptune supports the openCypher query language.
    entity-entity relationships:
    Amazon Neptune|SUPPORTS|openCypher

  proposition: Amazon Neptune supports the SPARQL query language.
    entity-entity relationships:
    Amazon Neptune|SUPPORTS|SPARQL

  proposition: Gremlin, openCypher, and SPARQL are graph query languages.
    entity-attribute relationships:
    Gremlin|TYPE|graph query language
    openCypher|TYPE|graph query language
    SPARQL|TYPE|graph query language

  proposition: Graph query languages can execute powerful queries on connected data.
    entity-attribute relationships:
    Gremlin|CAPABILITY|execute powerful queries on connected data
    openCypher|CAPABILITY|execute powerful queries on connected data
    SPARQL|CAPABILITY|execute powerful queries on connected data

  proposition: Graph query languages are easy to write for connected data.
    entity-attribute relationships:
    Gremlin|CHARACTERISTIC|easy to write for connected data
    openCypher|CHARACTERISTIC|easy to write for connected data
    SPARQL|CHARACTERISTIC|easy to write for connected data

  proposition: Graph query languages perform well on connected data.
    entity-attribute relationships:
    Gremlin|CHARACTERISTIC|perform well on connected data
    openCypher|CHARACTERISTIC|perform well on connected data
    SPARQL|CHARACTERISTIC|perform well on connected data

  proposition: Using graph query languages reduces code complexity.
    entity-attribute relationships:
    Gremlin|BENEFIT|reduces code complexity
    openCypher|BENEFIT|reduces code complexity
    SPARQL|BENEFIT|reduces code complexity

  proposition: Reduced code complexity allows quick creation of applications that process relationships.
    entity-attribute relationships:
    Gremlin|BENEFIT|allows quick creation of applications that process relationships
    openCypher|BENEFIT|allows quick creation of applications that process relationships
    SPARQL|BENEFIT|allows quick creation of applications that process relationships

  proposition: Amazon Neptune is designed for greater than 99.99 percent availability.
    entity-attribute relationships:
    Amazon Neptune|AVAILABILITY|greater than 99.99 percent

  proposition: Amazon Neptune increases database performance.
    entity-attribute relationships:
    Amazon Neptune|BENEFIT|increases database performance

  proposition: Amazon Neptune increases database availability.
    entity-attribute relationships:
    Amazon Neptune|BENEFIT|increases database availability

  proposition: Amazon Neptune integrates the database engine with an SSD-backed virtualized storage layer.
    entity-attribute relationships:
    Amazon Neptune|FEATURE|integrates database engine with SSD-backed virtualized storage layer

  proposition: The SSD-backed virtualized storage layer is built for database workloads.
    entity-attribute relationships:
    Amazon Neptune|STORAGE_CHARACTERISTIC|built for database workloads

  proposition: Amazon Neptune storage is fault-tolerant.
    entity-attribute relationships:
    Amazon Neptune|STORAGE_CHARACTERISTIC|fault-tolerant

  proposition: Amazon Neptune storage is self-healing.
    entity-attribute relationships:
    Amazon Neptune|STORAGE_CHARACTERISTIC|self-healing

  proposition: Disk failures in Amazon Neptune are repaired in the background.
    entity-attribute relationships:
    Amazon Neptune|FEATURE|repairs disk failures in background

  proposition: Disk failure repairs do not cause loss of database availability.
    entity-attribute relationships:
    Amazon Neptune|FEATURE|maintains database availability during disk failure repairs

  proposition: Amazon Neptune automatically detects database crashes.
    entity-attribute relationships:
    Amazon Neptune|FEATURE|automatically detects database crashes

  proposition: Amazon Neptune automatically restarts after detecting a database crash.
    entity-attribute relationships:
    Amazon Neptune|FEATURE|automatically restarts after database crash

  proposition: Amazon Neptune does not require crash recovery.
    entity-attribute relationships:
    Amazon Neptune|FEATURE|does not require crash recovery

  proposition: Amazon Neptune does not require rebuilding the database cache after a crash.
    entity-attribute relationships:
    Amazon Neptune|FEATURE|does not require rebuilding database cache after crash
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Amazon Neptune Features and Capabilities', entities=[Entity(entityId=None, value='Amazon Neptune', classification='Service'), Entity(entityId=None, value='SQL', classification='Software'), Entity(entityId=None, value='Gremlin', classification='Software'), Entity(entityId=None, value='openCypher', classification='Software'), Entity(entityId=None, value='SPARQL', classification='Software')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune is a fully managed database service.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='TYPE'), object=None, complement='fully managed database service')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune eliminates the need for hardware provisioning.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='ELIMINATES NEED FOR'), object=None, complement='hardware provisioning')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune eliminates the need for software patching.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='ELIMINATES NEED FOR'), object=None, complement='software patching')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune eliminates the need for database setup.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='ELIMINATES NEED FOR'), object=None, complement='database setup')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune eliminates the need for database configuration.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='ELIMINATES NEED FOR'), object=None, complement='database configuration')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune eliminates the need for database backups.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='ELIMINATES NEED FOR'), object=None, complement='database backups')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune can create sophisticated graph applications.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='create sophisticated graph applications')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune can create interactive graph applications.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='create interactive graph applications')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune can query billions of relationships in milliseconds.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='CAPABILITY'), object=None, complement='query billions of relationships in milliseconds')]), Statement(statementId=None, topicId=None, chunkId=None, value='SQL queries for highly connected data are complex.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SQL', classification='Software'), predicate=Relation(value='CHARACTERISTIC'), object=None, complement='complex for highly connected data')]), Statement(statementId=None, topicId=None, chunkId=None, value='SQL queries for highly connected data are hard to tune for performance.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SQL', classification='Software'), predicate=Relation(value='CHARACTERISTIC'), object=None, complement='hard to tune for performance with highly connected data')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune supports the Gremlin query language.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='Gremlin', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune supports the openCypher query language.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='openCypher', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune supports the SPARQL query language.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='SPARQL', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Gremlin, openCypher, and SPARQL are graph query languages.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Gremlin', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='graph query language'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='openCypher', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='graph query language'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SPARQL', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='graph query language')]), Statement(statementId=None, topicId=None, chunkId=None, value='Graph query languages can execute powerful queries on connected data.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Gremlin', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='execute powerful queries on connected data'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='openCypher', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='execute powerful queries on connected data'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SPARQL', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='execute powerful queries on connected data')]), Statement(statementId=None, topicId=None, chunkId=None, value='Graph query languages are easy to write for connected data.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Gremlin', classification='Software'), predicate=Relation(value='CHARACTERISTIC'), object=None, complement='easy to write for connected data'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='openCypher', classification='Software'), predicate=Relation(value='CHARACTERISTIC'), object=None, complement='easy to write for connected data'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SPARQL', classification='Software'), predicate=Relation(value='CHARACTERISTIC'), object=None, complement='easy to write for connected data')]), Statement(statementId=None, topicId=None, chunkId=None, value='Graph query languages perform well on connected data.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Gremlin', classification='Software'), predicate=Relation(value='CHARACTERISTIC'), object=None, complement='perform well on connected data'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='openCypher', classification='Software'), predicate=Relation(value='CHARACTERISTIC'), object=None, complement='perform well on connected data'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SPARQL', classification='Software'), predicate=Relation(value='CHARACTERISTIC'), object=None, complement='perform well on connected data')]), Statement(statementId=None, topicId=None, chunkId=None, value='Using graph query languages reduces code complexity.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Gremlin', classification='Software'), predicate=Relation(value='BENEFIT'), object=None, complement='reduces code complexity'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='openCypher', classification='Software'), predicate=Relation(value='BENEFIT'), object=None, complement='reduces code complexity'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SPARQL', classification='Software'), predicate=Relation(value='BENEFIT'), object=None, complement='reduces code complexity')]), Statement(statementId=None, topicId=None, chunkId=None, value='Reduced code complexity allows quick creation of applications that process relationships.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Gremlin', classification='Software'), predicate=Relation(value='BENEFIT'), object=None, complement='allows quick creation of applications that process relationships'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='openCypher', classification='Software'), predicate=Relation(value='BENEFIT'), object=None, complement='allows quick creation of applications that process relationships'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SPARQL', classification='Software'), predicate=Relation(value='BENEFIT'), object=None, complement='allows quick creation of applications that process relationships')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune is designed for greater than 99.99 percent availability.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='AVAILABILITY'), object=None, complement='greater than 99.99 percent')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune increases database performance.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='BENEFIT'), object=None, complement='increases database performance')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune increases database availability.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='BENEFIT'), object=None, complement='increases database availability')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune integrates the database engine with an SSD-backed virtualized storage layer.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='FEATURE'), object=None, complement='integrates database engine with SSD-backed virtualized storage layer')]), Statement(statementId=None, topicId=None, chunkId=None, value='The SSD-backed virtualized storage layer is built for database workloads.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='STORAGE CHARACTERISTIC'), object=None, complement='built for database workloads')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune storage is fault-tolerant.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='STORAGE CHARACTERISTIC'), object=None, complement='fault-tolerant')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune storage is self-healing.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='STORAGE CHARACTERISTIC'), object=None, complement='self-healing')]), Statement(statementId=None, topicId=None, chunkId=None, value='Disk failures in Amazon Neptune are repaired in the background.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='FEATURE'), object=None, complement='repairs disk failures in background')]), Statement(statementId=None, topicId=None, chunkId=None, value='Disk failure repairs do not cause loss of database availability.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='FEATURE'), object=None, complement='maintains database availability during disk failure repairs')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune automatically detects database crashes.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='FEATURE'), object=None, complement='automatically detects database crashes')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune automatically restarts after detecting a database crash.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='FEATURE'), object=None, complement='automatically restarts after database crash')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune does not require crash recovery.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='FEATURE'), object=None, complement='does not require crash recovery')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune does not require rebuilding the database cache after a crash.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Service'), predicate=Relation(value='FEATURE'), object=None, complement='does not require rebuilding database cache after crash')])])]
------------------------------------
garbage: []


Extracting topics [nodes: 10, num_workers: 4]:  70%|███████   | 7/10 [00:37<00:14,  4.68s/it]
2025-05-06 16:24:59:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Documentation Feedback System

  entities:
    Documentation Page|Creative Work
    Feedback Options|Service

  proposition: Feedback Options for Documentation Page
    entity-attribute relationships:
    Documentation Page|HAS|Feedback Options

    entity-entity relationships:
    Feedback Options|PART_OF|Documentation Page

  proposition: The page offers a "Yes" option for positive feedback.
    entity-attribute relationships:
    Feedback Options|INCLUDES|Yes option
    Yes option|TYPE|positive feedback

    entity-entity relationships:
    Documentation Page|OFFERS|Yes option

  proposition: The page thanks users for providing positive feedback.
    entity-entity relationships:
    Documentation Page|THANKS_USERS_FOR|positive feedback

  proposition: The page requests details on what was done well for positive feedback.
    entity-entity relationships:
    Documentation Page|REQUESTS_DETAILS_FOR|positive feedback

  proposition: The page asks if the page was helpful.
    entity-entity relationships:
    Documentation Page|ASKS_ABOUT|helpfulness

  proposition: The page offers a "No" option for negative feedback.
    entity-attribute relationships:
    Feedback Options|INCLUDES|No option
    No option|TYPE|negative feedback

    entity-entity relationships:
    Documentation Page|OFFERS|No option

  proposition: The page thanks users for providing negative feedback.
    entity-entity relationships:
    Documentation Page|THANKS_USERS_FOR|negative feedback

  proposition: The page apologizes for not meeting user expectations.
    entity-entity relationships:
    Documentation Page|APOLOGIZES_FOR|not meeting user expectations

  proposition: The page requests suggestions for improving the documentation for negative feedback.
    entity-entity relationships:
    Documentation Page|REQUESTS_SUGGESTIONS_FOR|improving documentation
    Documentation Page|ASSOCIATES|negative feedback|WITH|improvement suggestions
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Documentation Feedback System', entities=[Entity(entityId=None, value='Documentation Page', classification='Creative Work'), Entity(entityId=None, value='Feedback Options', classification='Service')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Feedback Options for Documentation Page', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Documentation Page', classification='Creative Work'), predicate=Relation(value='HAS'), object=Entity(entityId=None, value='Feedback Options', classification='Service'), complement=None), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Feedback Options', classification='Service'), predicate=Relation(value='PART OF'), object=Entity(entityId=None, value='Documentation Page', classification='Creative Work'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='The page offers a "Yes" option for positive feedback.', details=['Yes option TYPE positive feedback'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Feedback Options', classification='Service'), predicate=Relation(value='INCLUDES'), object=None, complement='Yes option'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Documentation Page', classification='Creative Work'), predicate=Relation(value='OFFERS'), object=None, complement='Yes option')]), Statement(statementId=None, topicId=None, chunkId=None, value='The page thanks users for providing positive feedback.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Documentation Page', classification='Creative Work'), predicate=Relation(value='THANKS USERS FOR'), object=None, complement='positive feedback')]), Statement(statementId=None, topicId=None, chunkId=None, value='The page requests details on what was done well for positive feedback.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Documentation Page', classification='Creative Work'), predicate=Relation(value='REQUESTS DETAILS FOR'), object=None, complement='positive feedback')]), Statement(statementId=None, topicId=None, chunkId=None, value='The page asks if the page was helpful.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Documentation Page', classification='Creative Work'), predicate=Relation(value='ASKS ABOUT'), object=None, complement='helpfulness')]), Statement(statementId=None, topicId=None, chunkId=None, value='The page offers a "No" option for negative feedback.', details=['No option TYPE negative feedback'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Feedback Options', classification='Service'), predicate=Relation(value='INCLUDES'), object=None, complement='No option'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Documentation Page', classification='Creative Work'), predicate=Relation(value='OFFERS'), object=None, complement='No option')]), Statement(statementId=None, topicId=None, chunkId=None, value='The page thanks users for providing negative feedback.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Documentation Page', classification='Creative Work'), predicate=Relation(value='THANKS USERS FOR'), object=None, complement='negative feedback')]), Statement(statementId=None, topicId=None, chunkId=None, value='The page apologizes for not meeting user expectations.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Documentation Page', classification='Creative Work'), predicate=Relation(value='APOLOGIZES FOR'), object=None, complement='not meeting user expectations')]), Statement(statementId=None, topicId=None, chunkId=None, value='The page requests suggestions for improving the documentation for negative feedback.', details=['Documentation Page ASSOCIATES negative feedback WITH improvement suggestions'], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Documentation Page', classification='Creative Work'), predicate=Relation(value='REQUESTS SUGGESTIONS FOR'), object=None, complement='improving documentation')])])]
------------------------------------
garbage: ['STATEMENT DETAIL: Yes option|TYPE|positive feedback', 'STATEMENT DETAIL: No option|TYPE|negative feedback', 'STATEMENT DETAIL: Documentation Page|ASSOCIATES|negative feedback|WITH|improvement suggestions']


Extracting topics [nodes: 10, num_workers: 4]:  80%|████████  | 8/10 [00:37<00:06,  3.33s/it]
2025-05-06 16:25:05:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Neptune Graph Database Features and Security

  entities:
    Neptune|Software
    Neptune Analytics|Software

  proposition: Neptune provides data security features.
    entity-attribute relationships:
    Neptune|HAS_FEATURE|data security

    entity-entity relationships:
    Neptune|PROVIDES|data security features

  proposition: Neptune supports encryption at rest.
    entity-attribute relationships:
    Neptune|SUPPORTS|encryption at rest

  proposition: Neptune supports encryption in transit.
    entity-attribute relationships:
    Neptune|SUPPORTS|encryption in transit

  proposition: Neptune is a fully managed database.
    entity-attribute relationships:
    Neptune|TYPE|fully managed database

  proposition: Neptune eliminates the need for hardware provisioning.
    entity-entity relationships:
    Neptune|ELIMINATES_NEED_FOR|hardware provisioning

  proposition: Neptune eliminates the need for software patching.
    entity-entity relationships:
    Neptune|ELIMINATES_NEED_FOR|software patching

  proposition: Neptune eliminates the need for database setup.
    entity-entity relationships:
    Neptune|ELIMINATES_NEED_FOR|database setup

  proposition: Neptune eliminates the need for database configuration.
    entity-entity relationships:
    Neptune|ELIMINATES_NEED_FOR|database configuration

  proposition: Neptune eliminates the need for database backups.
    entity-entity relationships:
    Neptune|ELIMINATES_NEED_FOR|database backups

  proposition: Neptune Analytics is an analytics database engine.
    entity-attribute relationships:
    Neptune Analytics|TYPE|analytics database engine

  proposition: Neptune Analytics complements Neptune database.
    entity-entity relationships:
    Neptune Analytics|COMPLEMENTS|Neptune

  proposition: Neptune Analytics can quickly analyze large amounts of graph data in memory.
    entity-attribute relationships:
    Neptune Analytics|CAPABILITY|quickly analyze large amounts of graph data in memory

  proposition: Neptune Analytics is used to get insights from graph data.
    entity-attribute relationships:
    Neptune Analytics|PURPOSE|get insights from graph data

  proposition: Neptune Analytics is used to find trends in graph data.
    entity-attribute relationships:
    Neptune Analytics|PURPOSE|find trends in graph data

  proposition: Neptune Analytics is a solution for analyzing existing graph databases.
    entity-attribute relationships:
    Neptune Analytics|PURPOSE|analyzing existing graph databases

  proposition: Neptune Analytics is a solution for analyzing graph datasets stored in a data lake.
    entity-attribute relationships:
    Neptune Analytics|PURPOSE|analyzing graph datasets stored in a data lake

  proposition: Neptune Analytics uses popular graph analytic algorithms.
    entity-attribute relationships:
    Neptune Analytics|USES|popular graph analytic algorithms

  proposition: Neptune Analytics uses low-latency analytic queries.
    entity-attribute relationships:
    Neptune Analytics|USES|low-latency analytic queries
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Neptune Graph Database Features and Security', entities=[Entity(entityId=None, value='Neptune', classification='Software'), Entity(entityId=None, value='Neptune Analytics', classification='Software')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Neptune provides data security features.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='HAS FEATURE'), object=None, complement='data security'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='PROVIDES'), object=None, complement='data security features')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune supports encryption at rest.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='encryption at rest')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune supports encryption in transit.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='encryption in transit')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune is a fully managed database.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='fully managed database')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune eliminates the need for hardware provisioning.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='ELIMINATES NEED FOR'), object=None, complement='hardware provisioning')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune eliminates the need for software patching.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='ELIMINATES NEED FOR'), object=None, complement='software patching')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune eliminates the need for database setup.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='ELIMINATES NEED FOR'), object=None, complement='database setup')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune eliminates the need for database configuration.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='ELIMINATES NEED FOR'), object=None, complement='database configuration')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune eliminates the need for database backups.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune', classification='Software'), predicate=Relation(value='ELIMINATES NEED FOR'), object=None, complement='database backups')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is an analytics database engine.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='TYPE'), object=None, complement='analytics database engine')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics complements Neptune database.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='COMPLEMENTS'), object=Entity(entityId=None, value='Neptune', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics can quickly analyze large amounts of graph data in memory.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='CAPABILITY'), object=None, complement='quickly analyze large amounts of graph data in memory')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is used to get insights from graph data.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='PURPOSE'), object=None, complement='get insights from graph data')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is used to find trends in graph data.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='PURPOSE'), object=None, complement='find trends in graph data')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is a solution for analyzing existing graph databases.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='PURPOSE'), object=None, complement='analyzing existing graph databases')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics is a solution for analyzing graph datasets stored in a data lake.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='PURPOSE'), object=None, complement='analyzing graph datasets stored in a data lake')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics uses popular graph analytic algorithms.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='USES'), object=None, complement='popular graph analytic algorithms')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Analytics uses low-latency analytic queries.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune Analytics', classification='Software'), predicate=Relation(value='USES'), object=None, complement='low-latency analytic queries')])])]
------------------------------------
garbage: []


Extracting topics [nodes: 10, num_workers: 4]:  90%|█████████ | 9/10 [00:43<00:04,  4.20s/it]
2025-05-06 16:25:14:DEBUG:g.l.i.u.topic_utils:====================================
raw_text: topic: Neptune DB Cluster Components and Features

  entities:
    Neptune DB cluster|Software
    Primary DB instance|Software
    Neptune replica|Software
    Cluster volume|Software
    Amazon Neptune|Software
    Gremlin|Software
    openCypher|Software
    SPARQL|Software

  proposition: Neptune DB cluster has one primary DB instance for writing graph database contents.
    entity-attribute relationships:
    Neptune DB cluster|HAS_COMPONENT|primary DB instance
    Primary DB instance|FUNCTION|writing graph database contents

    entity-entity relationships:
    Neptune DB cluster|CONTAINS|Primary DB instance

  proposition: Primary DB instance is responsible for loading graph database contents.
    entity-attribute relationships:
    Primary DB instance|FUNCTION|loading graph database contents

  proposition: Primary DB instance is responsible for modifying graph database contents.
    entity-attribute relationships:
    Primary DB instance|FUNCTION|modifying graph database contents

  proposition: Neptune replica connects to the same storage volume as the primary DB instance.
    entity-entity relationships:
    Neptune replica|CONNECTS_TO|Cluster volume
    Primary DB instance|CONNECTS_TO|Cluster volume

  proposition: Neptune replica supports only read operations.
    entity-attribute relationships:
    Neptune replica|SUPPORTS|read operations

  proposition: Each Neptune DB cluster can have up to 15 Neptune Replicas.
    entity-attribute relationships:
    Neptune DB cluster|MAX_REPLICAS|15

    entity-entity relationships:
    Neptune DB cluster|CONTAINS|Neptune replica

  proposition: Neptune Replicas provide high availability.
    entity-attribute relationships:
    Neptune replica|PROVIDES|high availability

  proposition: Neptune Replicas are located in separate Availability Zones.
    entity-attribute relationships:
    Neptune replica|LOCATION|separate Availability Zones

  proposition: Neptune Replicas distribute load from reading clients.
    entity-attribute relationships:
    Neptune replica|FUNCTION|distribute load from reading clients

  proposition: Neptune data is stored in the cluster volume.
    entity-entity relationships:
    Cluster volume|STORES|Neptune data

  proposition: Cluster volume is designed for reliability.
    entity-attribute relationships:
    Cluster volume|DESIGNED_FOR|reliability

  proposition: Cluster volume is designed for high availability.
    entity-attribute relationships:
    Cluster volume|DESIGNED_FOR|high availability

  proposition: Cluster volume consists of copies of data across multiple Availability Zones.
    entity-attribute relationships:
    Cluster volume|COMPOSITION|copies of data across multiple Availability Zones

  proposition: Cluster volume is located in a single AWS Region.
    entity-attribute relationships:
    Cluster volume|LOCATION|single AWS Region

  proposition: Neptune data is automatically replicated across Availability Zones.
    entity-attribute relationships:
    Neptune data|REPLICATION|automatically across Availability Zones

  proposition: Neptune data is highly durable due to replication.
    entity-attribute relationships:
    Neptune data|DURABILITY|high
    Neptune data|DURABILITY_REASON|replication

  proposition: There is little possibility of data loss in Neptune due to replication.
    entity-attribute relationships:
    Neptune data|DATA_LOSS_POSSIBILITY|little
    Neptune data|DATA_LOSS_PREVENTION|replication

  proposition: Amazon Neptune supports open graph APIs.
    entity-attribute relationships:
    Amazon Neptune|SUPPORTS|open graph APIs

  proposition: Amazon Neptune supports property graphs.
    entity-attribute relationships:
    Amazon Neptune|SUPPORTS|property graphs

  proposition: Amazon Neptune supports RDF graphs.
    entity-attribute relationships:
    Amazon Neptune|SUPPORTS|RDF graphs

  proposition: Amazon Neptune supports Gremlin for property graphs.
    entity-entity relationships:
    Amazon Neptune|SUPPORTS|Gremlin
    Gremlin|USED_FOR|property graphs

  proposition: Amazon Neptune supports openCypher for property graphs.
    entity-entity relationships:
    Amazon Neptune|SUPPORTS|openCypher
    openCypher|USED_FOR|property graphs

  proposition: Amazon Neptune supports SPARQL for RDF graphs.
    entity-entity relationships:
    Amazon Neptune|SUPPORTS|SPARQL
    SPARQL|USED_FOR|RDF graphs

  proposition: Amazon Neptune provides high performance for property graph models.
    entity-attribute relationships:
    Amazon Neptune|PERFORMANCE|high for property graph models

  proposition: Amazon Neptune provides high performance for RDF graph models.
    entity-attribute relationships:
    Amazon Neptune|PERFORMANCE|high for RDF graph models

  proposition: Amazon Neptune provides high performance for property graph query languages.
    entity-attribute relationships:
    Amazon Neptune|PERFORMANCE|high for property graph query languages

  proposition: Amazon Neptune provides high performance for RDF graph query languages.
    entity-attribute relationships:
    Amazon Neptune|PERFORMANCE|high for RDF graph query languages
------------------------------------
topics: topics=[Topic(topicId=None, chunkIds=[], value='Neptune DB Cluster Components and Features', entities=[Entity(entityId=None, value='Neptune DB cluster', classification='Software'), Entity(entityId=None, value='Primary DB instance', classification='Software'), Entity(entityId=None, value='Neptune replica', classification='Software'), Entity(entityId=None, value='Cluster volume', classification='Software'), Entity(entityId=None, value='Amazon Neptune', classification='Software'), Entity(entityId=None, value='Gremlin', classification='Software'), Entity(entityId=None, value='openCypher', classification='Software'), Entity(entityId=None, value='SPARQL', classification='Software')], statements=[Statement(statementId=None, topicId=None, chunkId=None, value='Neptune DB cluster has one primary DB instance for writing graph database contents.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune DB cluster', classification='Software'), predicate=Relation(value='HAS COMPONENT'), object=None, complement='primary DB instance'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Primary DB instance', classification='Software'), predicate=Relation(value='FUNCTION'), object=None, complement='writing graph database contents'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune DB cluster', classification='Software'), predicate=Relation(value='CONTAINS'), object=Entity(entityId=None, value='Primary DB instance', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Primary DB instance is responsible for loading graph database contents.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Primary DB instance', classification='Software'), predicate=Relation(value='FUNCTION'), object=None, complement='loading graph database contents')]), Statement(statementId=None, topicId=None, chunkId=None, value='Primary DB instance is responsible for modifying graph database contents.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Primary DB instance', classification='Software'), predicate=Relation(value='FUNCTION'), object=None, complement='modifying graph database contents')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune replica connects to the same storage volume as the primary DB instance.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune replica', classification='Software'), predicate=Relation(value='CONNECTS TO'), object=Entity(entityId=None, value='Cluster volume', classification='Software'), complement=None), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Primary DB instance', classification='Software'), predicate=Relation(value='CONNECTS TO'), object=Entity(entityId=None, value='Cluster volume', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune replica supports only read operations.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune replica', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='read operations')]), Statement(statementId=None, topicId=None, chunkId=None, value='Each Neptune DB cluster can have up to 15 Neptune Replicas.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune DB cluster', classification='Software'), predicate=Relation(value='MAX REPLICAS'), object=None, complement='15'), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune DB cluster', classification='Software'), predicate=Relation(value='CONTAINS'), object=Entity(entityId=None, value='Neptune replica', classification='Software'), complement=None)]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Replicas provide high availability.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune replica', classification='Software'), predicate=Relation(value='PROVIDES'), object=None, complement='high availability')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Replicas are located in separate Availability Zones.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune replica', classification='Software'), predicate=Relation(value='LOCATION'), object=None, complement='separate Availability Zones')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune Replicas distribute load from reading clients.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Neptune replica', classification='Software'), predicate=Relation(value='FUNCTION'), object=None, complement='distribute load from reading clients')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune data is stored in the cluster volume.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Cluster volume', classification='Software'), predicate=Relation(value='STORES'), object=None, complement='Neptune data')]), Statement(statementId=None, topicId=None, chunkId=None, value='Cluster volume is designed for reliability.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Cluster volume', classification='Software'), predicate=Relation(value='DESIGNED FOR'), object=None, complement='reliability')]), Statement(statementId=None, topicId=None, chunkId=None, value='Cluster volume is designed for high availability.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Cluster volume', classification='Software'), predicate=Relation(value='DESIGNED FOR'), object=None, complement='high availability')]), Statement(statementId=None, topicId=None, chunkId=None, value='Cluster volume consists of copies of data across multiple Availability Zones.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Cluster volume', classification='Software'), predicate=Relation(value='COMPOSITION'), object=None, complement='copies of data across multiple Availability Zones')]), Statement(statementId=None, topicId=None, chunkId=None, value='Cluster volume is located in a single AWS Region.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Cluster volume', classification='Software'), predicate=Relation(value='LOCATION'), object=None, complement='single AWS Region')]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune data is automatically replicated across Availability Zones.', details=['Neptune data REPLICATION automatically across Availability Zones'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='Neptune data is highly durable due to replication.', details=['Neptune data DURABILITY high', 'Neptune data DURABILITY REASON replication'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='There is little possibility of data loss in Neptune due to replication.', details=['Neptune data DATA LOSS POSSIBILITY little', 'Neptune data DATA LOSS PREVENTION replication'], facts=[]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune supports open graph APIs.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='open graph APIs')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune supports property graphs.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='property graphs')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune supports RDF graphs.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=None, complement='RDF graphs')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune supports Gremlin for property graphs.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='Gremlin', classification='Software'), complement=None), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Gremlin', classification='Software'), predicate=Relation(value='USED FOR'), object=None, complement='property graphs')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune supports openCypher for property graphs.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='openCypher', classification='Software'), complement=None), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='openCypher', classification='Software'), predicate=Relation(value='USED FOR'), object=None, complement='property graphs')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune supports SPARQL for RDF graphs.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Software'), predicate=Relation(value='SUPPORTS'), object=Entity(entityId=None, value='SPARQL', classification='Software'), complement=None), Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='SPARQL', classification='Software'), predicate=Relation(value='USED FOR'), object=None, complement='RDF graphs')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune provides high performance for property graph models.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Software'), predicate=Relation(value='PERFORMANCE'), object=None, complement='high for property graph models')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune provides high performance for RDF graph models.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Software'), predicate=Relation(value='PERFORMANCE'), object=None, complement='high for RDF graph models')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune provides high performance for property graph query languages.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Software'), predicate=Relation(value='PERFORMANCE'), object=None, complement='high for property graph query languages')]), Statement(statementId=None, topicId=None, chunkId=None, value='Amazon Neptune provides high performance for RDF graph query languages.', details=[], facts=[Fact(factId=None, statementId=None, subject=Entity(entityId=None, value='Amazon Neptune', classification='Software'), predicate=Relation(value='PERFORMANCE'), object=None, complement='high for RDF graph query languages')])])]
------------------------------------
garbage: ['STATEMENT DETAIL: Neptune data|REPLICATION|automatically across Availability Zones', 'STATEMENT DETAIL: Neptune data|DURABILITY|high', 'STATEMENT DETAIL: Neptune data|DURABILITY_REASON|replication', 'STATEMENT DETAIL: Neptune data|DATA_LOSS_POSSIBILITY|little', 'STATEMENT DETAIL: Neptune data|DATA_LOSS_PREVENTION|replication']


Extracting topics [nodes: 10, num_workers: 4]: 100%|██████████| 10/10 [00:52<00:00,  5.27s/it]

2025-05-06 16:25:14:DEBUG:g.l.i.b.metadata_to_nodes:Accepted 7 chunks, emitting 343 nodes
2025-05-06 16:25:14:DEBUG:g.l.i.b.metadata_to_nodes:Accepted 3 chunks, emitting 100 nodes
2025-05-06 16:25:14:DEBUG:g.l.i.b.metadata_to_nodes:Accepted 2 chunks, emitting 78 nodes
2025-05-06 16:25:14:DEBUG:g.l.i.b.metadata_to_nodes:Accepted 3 chunks, emitting 101 nodes
2025-05-06 16:25:14:INFO:g.l.i.b.build_pipeline:Running build pipeline [batch_size: 4, num_workers: 2, job_sizes: [443, 179], batch_writes_enabled: True, batch_write_size: 25]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Batch config: [batch_writes_enabled: True, batch_write_size: 25]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Graph construction kwargs: {'batch_size': 4, 'include_domain_labels': False}

Building graph [batch_writes_enabled: True, batch_write_size: 25]:   0%|          | 0/179 [00:00<?, ?it/s]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Batch config: [batch_writes_enabled: True, batch_write_size: 25]
2025-05-06 16:25:14:DEBUG:g.l.i.b.source_graph_builder:Inserting source [source_id: aws::4510583f:e412]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::4510583f:e412:0d82dc73]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Graph construction kwargs: {'batch_size': 4, 'include_domain_labels': False}
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::4510583f:e412:9f69cb6f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: 84f248b8748b462611e37ac45b5be77a]

Building graph [batch_writes_enabled: True, batch_write_size: 25]:   0%|          | 0/443 [00:00<?, ?it/s]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: f6b6834c353900c2dbd585d9bc2906b8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.source_graph_builder:Inserting source [source_id: aws::abd5427c:978b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: ff6472a30ee713eef16fe3018d9da7fb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::abd5427c:978b:846f6c9c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 7ee9fab66870eb7811507f70b66a75bd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::abd5427c:978b:7ae8328d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 33496de4b8bc3891de6d1f9bf8917c3f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::abd5427c:978b:cf49e6ec]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 068d8540bc76bba09a545b742316bf0f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::abd5427c:978b:fba12a15]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: cea24db81420681a692f5d98957e4137]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::abd5427c:978b:56aed072]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: d22f954559c93bb43da2e49c473e0808]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::abd5427c:978b:e901bab9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::abd5427c:978b:75689b1d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: a2ea84e40a8801893dd41b990c4d2ec2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: 719df6376997776656b6b75950b15499]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: a4927ff1d7877fa1db503c2ff8f7922d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: 4a5e494e3cffcbf7345501222d88a1b8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: cbdd8de0169c32445c36ce627496be82]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: 78048abaa8cc25d3b8182599c6716457]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 0453ada13771d33bb8e7861afb0a1af5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: bd50da7ab692a41fba163b735dbfd362]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 2faa0564c5bd9197856623bc2d914402]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: fa18082f8b98b8883043f4901f7ff536]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 34f28f3247ab7d39d6ba4e2befa5f5a9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 46250e57d41bf3101f0db6a9946cc306]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 6e372ed23099faf7169cb8b627fc02e9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: be21596eb5a959084b2734ddf01446a8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 20ee62e26398dac7dc507836b9e0fd2a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: ddcceb8d5fbbd02902d36dc193529a6e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c9d9ca824b2863dfaa9b107a7f062395]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 66cd00a1b7e33446cab28218befec910]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: fc7628f3577c8e09b9f6d26674dceb4e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 956a9ab3fd6f9a8fa2325bb6219462a8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 715f500b00bef62dd9142d4838697b87]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 5cf23ca76612e8636525e1986a0e5c20]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: d5d791dd7c0d8b664ab0ccb2e99d421d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 437a5b66a528af1118d90549f59616b0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: cb9977a49f834097685ea4dd37b36956]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 835a9d887992ec166d8595eec2f81bef]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 4f908669393c0eb8be574b6555c89ba5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 8d249dcfbfedb7989cd7f9cf6539b7a1]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 64fabb60d4faae7a991bdb0de5397907]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e7b027980103b4395e158695549c677e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c1c94d298dee1482768bf5920094b2a6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 6858cf648f8c818a1eb2d650e81de68c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 260a98aee483c5d99a2b02b7b7ff9544]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 68c52646c3704ae041baf9d216dec6a6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: a29fa27330f343723127626c8967095e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 06ae8a9695891cd1c82538de028ce2ff]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: dee83d4972598c829b561830070996c5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: baa98267205f03eea0fceaced3878f96]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e99aca8849f3a85a2b322dc20dd32dbb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 54891b0cb3a2575d3c0cb1266a62e9a4]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 1fd3d282bf9dc87b17f19f061dec3d5b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e4a608d370767aebb09ee34df238c918]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 3cebb3218c90b0eb5da54c4d5646723e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: bd7be9abf1be6343d6976f44b56b54bc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: a39962d43065b3b7b625e22f1f749513]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: d1704a17566f478b05c1542239db1e62]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 7d02baa183187cf018c2165c623137da]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 90fe7bbd85046d19bc93ec8316701a3c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 8a8516dc83527ba73a03ceb9bac1939f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 5bc063ceb4e9e72a967faeaa76d49bfa]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 97f240e1305520f3dbb35e44aca68181]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 1502d08a9171b08ee2c379bd045c9054]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 9660353359fc6f490d73fa159252171e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 6e5aecbc5bc8048702267a725e691c54]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: af5050a8a0da6f928484f015234f4983]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 6e5aecbc5bc8048702267a725e691c54]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: fa5f3dac3df03a338f49857843f1578d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 6e5aecbc5bc8048702267a725e691c54]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e33828d225a1d446922d91b1d97e90ca]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ebcd202866abf694be949ccf074ae382]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: b2b92c50b1816db24b627dfdb97ac238]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: ebcd202866abf694be949ccf074ae382]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 25dabd6eb99732f2b60f746260136ba7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ebcd202866abf694be949ccf074ae382]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e1d2911d8d894618d645db4f3a86ba5d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 68031756c7f8732187a31e5b3bf82f56]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 2c6aa2f47587aaadb0cc36b9484a442a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 68031756c7f8732187a31e5b3bf82f56]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 1428ad20081eda1f699dc61c587a3ea2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 68031756c7f8732187a31e5b3bf82f56]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 60ff6a3412c70a219b65b10303e7a180]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: bbe59f461264eedd048b203d26748531]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 4b7ab8d1f93cad99c5e8b5cc4a8491b7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: bbe59f461264eedd048b203d26748531]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 6e64975a812113097293c8f49c3ccbfd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: bbe59f461264eedd048b203d26748531]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 69c790ac1f750ba61c6f138b6e664d1f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 40aca6e0d00b668f2009f3700b4aa22b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 69c790ac1f750ba61c6f138b6e664d1f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 927e72f70c6c35eace8e272d4d506864]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 69c790ac1f750ba61c6f138b6e664d1f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: be843a39236d48c999eb74e073221b7f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 0552bc29b4352fadcd5d56f512cd7ee9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 89b1d994b62744697eb89c4f58d323ec]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 0552bc29b4352fadcd5d56f512cd7ee9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 6dc1ea931071c1fe343424fc116de476]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 0552bc29b4352fadcd5d56f512cd7ee9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 22ac813fc5e0a4ef04e0668c38c2a57f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 29aa4e287639d35dd3125b8e98621d90]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 072e3bbe414f83ed79a4c8b8f267f8b8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 29aa4e287639d35dd3125b8e98621d90]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e73d42d7ddf8e1ac186aa04fae125e8c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 29aa4e287639d35dd3125b8e98621d90]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 2ab62a3ba1ec9c37c32451c2fe7506de]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d89c86acbe1fc0b320920d990e6fe130]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 38e81ab496f046aa72783495b2790598]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: d89c86acbe1fc0b320920d990e6fe130]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 4ac5fe9ecb1e1014b7f09d3e69d2b741]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d89c86acbe1fc0b320920d990e6fe130]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: a2e1cca837f432e382c591cc61eab84a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: e95d74402d6b01fcd79f6d120938cd7b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c053c3d90a8a6d4f1911bd58c5e470fe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: e95d74402d6b01fcd79f6d120938cd7b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 1416e0948b80fce713d8700d590ad756]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: e95d74402d6b01fcd79f6d120938cd7b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: d827ab39b6bee305e42e6159487c749b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d6c011b11a901990b9a9debcc150d41c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: d6c011b11a901990b9a9debcc150d41c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 15ce1a10124b38b675e461162d70e8fb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 3cfc9c179bffd42c3794fe73dbf1b683]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d6c011b11a901990b9a9debcc150d41c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 01e2f1c0c7eee57b83d66a208af3f3ea]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: d2721b76740f25a8d0c1bc7df0c360a6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 01e2f1c0c7eee57b83d66a208af3f3ea]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c265b844bb7ec2e1f71181da5650bf25]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 01e2f1c0c7eee57b83d66a208af3f3ea]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 057ec85e59ad97c5bd98f0e0315270dc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: da3bc0ef789a1bd5310fb2e3a32527ee]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 6bd1ac2387cbb6a2de3e6693eafe0b1b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: da3bc0ef789a1bd5310fb2e3a32527ee]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 28630f3732e4112b1e3f818479cfcf71]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: da3bc0ef789a1bd5310fb2e3a32527ee]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: b8829d8cc80fc5382268ba9505a020d6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: cecce7ba92597c38466e0f3e30cb3702]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 5550138e6ea6c2b5298c64cb2d4e85db]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: cecce7ba92597c38466e0f3e30cb3702]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: a28cd283bd109a5192bec224c53df369]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: cecce7ba92597c38466e0f3e30cb3702]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 093b96f0ddb66801ab340554f004626e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 6bc408a58ad0193afef38f82696f8608]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 89a0c2a21cbcb998c48014416f0459b2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 6bc408a58ad0193afef38f82696f8608]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 8952f1be1d715dc4b9ed66cea6042e21]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 6bc408a58ad0193afef38f82696f8608]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 009202ca800da5bee98d61713aec6655]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d6c011b11a901990b9a9debcc150d41c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 28836303cb42f524fd448f37834dd25e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: d6c011b11a901990b9a9debcc150d41c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: bc2b63e84cebb1c47f84481630e08cdd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d6c011b11a901990b9a9debcc150d41c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 5d55dec822da6d7bfbdaa7e170fc72e9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: d694f2df32f2f6aecee20fcebfa4568a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 11fa9f21d354af5f39193bea15a4e229]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 0b8d5d5e9316551e5b1a6a635cba5143]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 11fa9f21d354af5f39193bea15a4e229]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 5f4acc6dbd3279128d1076c42411bb84]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 25e62b026b3a87dcd1801a1f86b6aa9b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 11fa9f21d354af5f39193bea15a4e229]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: d9b1a8fafdb82086b201d8dc87924aaf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: b4b6012dcc77d171b7c55df46ef8b3fe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 6aa9bb0e80e38925fd7eb7f3c9623ad8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: b4b6012dcc77d171b7c55df46ef8b3fe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 04aa09087923d3e86cebdff9d65b9624]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: b4b6012dcc77d171b7c55df46ef8b3fe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: a29fb51ac4787a3f63afee7b36ffeb1a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7ee665409096999c34ebb672480638d8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 78ef76501dd094a39b2bf79654406406]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c7eb523b0c59ef9fa7c9a456b03184bb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7ee665409096999c34ebb672480638d8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 2da8d2a1e6fec22dabf2576284b354f0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7ee665409096999c34ebb672480638d8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 787cad8db3d2a7b5ad19ea71ab27d5d0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7ae451271d3b8783bb233e9312243a25]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 66f23d4340e18c3db2ae2f37033ed20d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7ae451271d3b8783bb233e9312243a25]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7ae451271d3b8783bb233e9312243a25]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 48bcf9ab8ab3a1954ba04bc05c1af523]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 06ca5672b7bc34850b7cba7f9efbd244]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e84cefda2f51c4b45cccbb17c4b1df64]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 06ca5672b7bc34850b7cba7f9efbd244]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 2ea7d2ff3ef0ade3518f3ec2950a4f45]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 06ca5672b7bc34850b7cba7f9efbd244]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: fe6df3cd851ca4055db9825989bc08ef]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: cfce9b81ccd7128a0acbd4581baf77e2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 99550b49f77a0d2422046ea5dc1f4b93]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: cfce9b81ccd7128a0acbd4581baf77e2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c318caeb8fc6606da3ef2c6468d15cc3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: cfce9b81ccd7128a0acbd4581baf77e2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 26d7f2fdb649a50045189e3a5367cb65]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: bb5c8d9e9f62f557306a919c32693214]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 80605988d03f1d7b4899c2ac09b9d7f3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: fb682cbe40e79598c268dc9839a88e9d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: bb5c8d9e9f62f557306a919c32693214]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 22ada15b138ddb37db7d7b97bc15ec18]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: bb5c8d9e9f62f557306a919c32693214]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 87ddd8d1efaf290f94cfb4e70e7d39db]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 8ac784ee9137d8c52223613c0cf53435]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 87ddd8d1efaf290f94cfb4e70e7d39db]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: f2d2e011dec654c1e980fba7a4bb7eb0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 87ddd8d1efaf290f94cfb4e70e7d39db]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7f1a05f85ec22603f98fcf1cfd0b11ad]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: f1400154f366e291452f3bcb43ff2937]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7f1a05f85ec22603f98fcf1cfd0b11ad]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c72734c9e54a87db2e8f4eb2a2969c09]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7f1a05f85ec22603f98fcf1cfd0b11ad]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 47db995e4f6a1651181b0b59eea0f5d6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 71e7ba6b65604f6b4923a2f7f1f35e6d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 3f84dcfe3827b4330e3a26cf73668841]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 71e7ba6b65604f6b4923a2f7f1f35e6d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 904c22d41fde97e9df040f83168b1194]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 71e7ba6b65604f6b4923a2f7f1f35e6d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 1e02b70d1fa4f98ba9f5a9b9b6889627]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7f1a05f85ec22603f98fcf1cfd0b11ad]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 6e3fbcfa74527a0d31937e6d9b42e274]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7f1a05f85ec22603f98fcf1cfd0b11ad]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 30cd79c331dc857f2a898f3c836b5379]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7f1a05f85ec22603f98fcf1cfd0b11ad]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: f60e282947c2c3aa085c8faa23486afc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: fef952295f26ae2048d5392c1cef73c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 8761d70d54f7f33f3b210d0e1c086dd4]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: fef952295f26ae2048d5392c1cef73c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 6a77684e0efcf7abfb93650fd7f87f77]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: fef952295f26ae2048d5392c1cef73c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: b6b5176199ad106678da82bd99285d7a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: bb4bd1b3333ff5c5c58ba3e2ed87fa4f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: be60c6ba5a9f838e506e42668154a622]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: bb4bd1b3333ff5c5c58ba3e2ed87fa4f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 8b6d0e2302be51a3b775fcf87cc7a671]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: bb4bd1b3333ff5c5c58ba3e2ed87fa4f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 9f960e96ea26a1bbbb1515bdb8134f57]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 6f11b5bc066a6b66bf86ee479117388d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 508aa07ad3f668400bc901fef8a16bf9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 6f11b5bc066a6b66bf86ee479117388d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 5fdf9f3fa6daa94c5fcaeb7b93ce9eb5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 6f11b5bc066a6b66bf86ee479117388d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 5a1da22dc7a1b9d8a9c786a5fd3662eb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 50d299d5bf647fd52ce1245c1f155165]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 8c6b3a42db5a3c001ddc686939697818]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 50d299d5bf647fd52ce1245c1f155165]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 77e6c693db9eaafa2927db9f5fd71d56]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 50d299d5bf647fd52ce1245c1f155165]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: fef20673bebed006250a4ad04129c458]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: c0e33a0366811a5b1ac68d96e29c6e58]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 8a279e1d1c72436dddf9dcf8ccdc622e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: c0e33a0366811a5b1ac68d96e29c6e58]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c362cc37f4879fbd8377b8a2f617e1b2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: c0e33a0366811a5b1ac68d96e29c6e58]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 58fe603da4fcff5182e127ff70c77276]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 19d959cb4fdea9cb4580ee7137e7b775]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 58fe603da4fcff5182e127ff70c77276]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: d3ba05fb5d710f346730466657037098]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 58fe603da4fcff5182e127ff70c77276]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 1ca4c3096005d4cbaa8545e7a1045b9d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: e79fbd794c9e91598b99d5f1f1091c01]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 50eb11cac140da56a3f21a2c44fdb63b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: e79fbd794c9e91598b99d5f1f1091c01]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: ecc7d345ed7b90a7c0b8b82b4fa5ef50]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: e79fbd794c9e91598b99d5f1f1091c01]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 657402e6f76299b6f9bfa0b467f0dccf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 851dbc9d9117a14a4a45570cdb2b2ab0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 851dbc9d9117a14a4a45570cdb2b2ab0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 08f8bc5b17c654958dc1c5759ef3fe98]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 90c517c5cd79290ca378e1ca3aa1c9fb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 851dbc9d9117a14a4a45570cdb2b2ab0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 53057aea8ec7ece3afde3cae009c6bdf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: c9347e585f1c38ff5eff617eb9864b64]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: b000b0609040869e1e838a0faa1fa892]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: c9347e585f1c38ff5eff617eb9864b64]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: eebed84402a5b083f5a5ebe77c97c887]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: c9347e585f1c38ff5eff617eb9864b64]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 454cf1eaf06e5c77a1504af59ec15853]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 851dbc9d9117a14a4a45570cdb2b2ab0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 37effd9eb5afbb203d8920b4860f8887]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 851dbc9d9117a14a4a45570cdb2b2ab0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 53022804b43a0ef5738d3dffe33dee81]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 851dbc9d9117a14a4a45570cdb2b2ab0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 8007202d2ce59a5d4684a5a86e9e139c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: cd54003b09028a556d3e03c36f1afc26]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: d6ab1fa7193709330cf0c8cae17fd7fc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c9b52267ca9219ecd7879ac69793d928]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: cd54003b09028a556d3e03c36f1afc26]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: ed21a744b36dbd123b4a22c85f3df682]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: cd54003b09028a556d3e03c36f1afc26]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: f4f334758a2e3c8cdcc98026efde04e6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 35dddbdf63ee7cf4a5a48a8deb807bae]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c579e42e4ce4023be9e1b6a98352edf2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 35dddbdf63ee7cf4a5a48a8deb807bae]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 107ca4778fd478d820a2928ad2926ccd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 35dddbdf63ee7cf4a5a48a8deb807bae]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 82c43696708fcaa36bf99bc605bfdeac]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 12f2ec7daf87f9168210eaef56d9f3d2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 039139cedc502fba404ebc7411119ce9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 12f2ec7daf87f9168210eaef56d9f3d2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 7fd285fe024f31fc38f02dc46c839dd9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 849167d50060423e7f7678807861c73d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 12f2ec7daf87f9168210eaef56d9f3d2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 452f6b2389353bc8233cb4b1a310bdf9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ecfcf4f8539d800bacc1d83dce05a46e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e994a31d19fa8ee3c3e139eb2e20e78d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: ecfcf4f8539d800bacc1d83dce05a46e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 5e2b842dc273976336aa0d58777cf963]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ecfcf4f8539d800bacc1d83dce05a46e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 65a064d5bef568ea97dac9c74dce5933]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::4510583f:e412:0d82dc73]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e8d86de633338b5059db8b5500f66f5d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::4510583f:e412:9f69cb6f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 3dfb7e29fa7f4dd8e99d5943b1d2ba37]
2025-05-06 16:25:14:DEBUG:g.l.i.b.source_graph_builder:Inserting source [source_id: aws::bf585e13:3edc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: db3d8d4aa1297f91931cef05d6a1eefc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::bf585e13:3edc:466728d4]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 4f5dde4fd1386718a46849ee7df0a015]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::bf585e13:3edc:1b43838b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 4f5dde4fd1386718a46849ee7df0a015]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 4f5dde4fd1386718a46849ee7df0a015]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::bf585e13:3edc:a2ec5adf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 75daf10aa9633bf39405c956b1105052]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: 69f10a890136fe03124d150b2a88cc71]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 75daf10aa9633bf39405c956b1105052]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: b4feb1210286d4acda5834b8d3ee1122]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 75daf10aa9633bf39405c956b1105052]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: 76412b9011f487704bd1ff8ad36c78a3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 1b193c9cc28418ced7b3c9e34a9c5ba7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 211907aa4cbd68622ca7a2bd595edb5e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 982e0a1e9714d9d2eab179519fd1cbe2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 1b193c9cc28418ced7b3c9e34a9c5ba7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 97d61087a90f28cef55a473f15be140e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 1b193c9cc28418ced7b3c9e34a9c5ba7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: bcceb0a7efd1f636065f60eb4ce62af9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 0dca8daa9570485c751fa4dfc86b0bfc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: ce8ef9da2e1cb7fed0858b0e9a35a7e2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 0dca8daa9570485c751fa4dfc86b0bfc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 1badb562d24c9148433db94da8b0b4af]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 0dca8daa9570485c751fa4dfc86b0bfc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: b49c6fbce20684dc98ca6ce6522427ec]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 21de83975100af811c5154b019df5bfb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: a8ed7c1a0defda70d58556182724e9de]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 21de83975100af811c5154b019df5bfb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: ced97e71c94e179dad00f58c80277b55]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 21de83975100af811c5154b019df5bfb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 09a79f19a4a2df58a44268ad9695c619]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 135d930d6e164856e08f7397c472989b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 09a79f19a4a2df58a44268ad9695c619]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: fb76760b17f786bc0763f360da420fdd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 3caadb5701a233ceaaece12fc6d4cfb1]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 09a79f19a4a2df58a44268ad9695c619]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: a34b92d061479814b59804d6913d884c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 4a505d9c108624d7a65f454c4bb1d21f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: a34b92d061479814b59804d6913d884c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: a064975accf04882009ca162e61a7535]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: a34b92d061479814b59804d6913d884c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e521043926da230bc3e8d4cfaa09ea57]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: e06ee0124ac5acde7fc354d8a2c7d966]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c2145d5d611c174003dc7a8408515c29]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: e06ee0124ac5acde7fc354d8a2c7d966]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 67d4fa8eecafe1098141313d8329f535]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: e06ee0124ac5acde7fc354d8a2c7d966]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 8d9a193a760f327c007a2fdf68bf89cf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 3d3735970934ece97ef60a52bc2d2f3b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 652bd3ddec2061ec835f7bc0c5eb772d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 3d3735970934ece97ef60a52bc2d2f3b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c1e4319090ad328987e12030a5e64133]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 3d3735970934ece97ef60a52bc2d2f3b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c1b210396045a0a644fae9dcd6958043]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: bc8e5cc195c3464f61c483dc7e872107]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 3bad53edf54196d33f85188740e3c3a7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: bc8e5cc195c3464f61c483dc7e872107]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: c64ada20b2cb66af87d6d11877412912]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 423554ffafd6e20061205e9a054dcfb5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: bc8e5cc195c3464f61c483dc7e872107]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 547ee78349b5b0c8b9970280d3043384]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: b4e63efa4545c75e46f62fc9d4510025]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 09822c807ae49660cc31c74139bb3fea]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: b4e63efa4545c75e46f62fc9d4510025]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 9c6c64ae85f47a3d06d78f04a99a7c2a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: b4e63efa4545c75e46f62fc9d4510025]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 48eeb02d29be59e4209d5cc22ab203ca]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 66e92df6f11bed80beb0f904c64f5152]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: b487820cc2f8943c6733ff5f199153e9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 66e92df6f11bed80beb0f904c64f5152]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 66e92df6f11bed80beb0f904c64f5152]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 5307e95f4ac551657d6be599b65fcbed]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 3d159ba5fd0ceec6b673dbd9dfcfbb34]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: dfc32c8ab23a719936535269d1683c46]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 1e7ee479dca6260bcb29709b4f5fb47e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 3d159ba5fd0ceec6b673dbd9dfcfbb34]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 0f3e80ee0907b589a610ada012763b4b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 3d159ba5fd0ceec6b673dbd9dfcfbb34]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 47d1ac6ffef2fef6a23aa247bc6b9c99]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 66e92df6f11bed80beb0f904c64f5152]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 65d4476f5e0689ce47e9fa96e129fe1b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 66e92df6f11bed80beb0f904c64f5152]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 66e92df6f11bed80beb0f904c64f5152]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 552a915795bd3f7b6d90e765005681ad]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 470c448998a31c25baf6ed4d8ce64546]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: d50e1348eeef9053207ca919c0de2e30]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 470c448998a31c25baf6ed4d8ce64546]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: b4f2b61f54c6fc1dbd347e16b8814e73]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 903468e0f990666a17ca54644801a471]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 470c448998a31c25baf6ed4d8ce64546]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 8c497b1206a74dacf0cadb7bc0b1ab06]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ac0c70c434d97a8405e89dd0910d6c82]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 24b643a0371fbee2816b0ded94d90375]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: ac0c70c434d97a8405e89dd0910d6c82]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 9c329f634d66b0d7c999713094b55bb0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ac0c70c434d97a8405e89dd0910d6c82]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: abf5d31647532970ab18ea700d61dc68]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 9aa6f3b54a9dfb21b874a9421ad8b409]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 470c448998a31c25baf6ed4d8ce64546]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 5bf308e90cdc376aa0d991f3ce4cba8d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 470c448998a31c25baf6ed4d8ce64546]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e307afa96fb861a2591b0f1579f36a1f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 470c448998a31c25baf6ed4d8ce64546]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: f9d12bf7a033e703584d1d4e914ce9f2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 9e58f4787326b7d3b81484c792b5e1bf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: f9d12bf7a033e703584d1d4e914ce9f2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 9e58f4787326b7d3b81484c792b5e1bf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: f9d12bf7a033e703584d1d4e914ce9f2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 9e58f4787326b7d3b81484c792b5e1bf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d8bd4c3fb7b5d88f6898932b0497733c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: cecc448d247b977d05f04bc1b8a59ca3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: d8bd4c3fb7b5d88f6898932b0497733c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: cecc448d247b977d05f04bc1b8a59ca3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d8bd4c3fb7b5d88f6898932b0497733c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: cecc448d247b977d05f04bc1b8a59ca3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 34fc26791df3ef08badf34a0cc8b0367]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 9e58f4787326b7d3b81484c792b5e1bf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 34fc26791df3ef08badf34a0cc8b0367]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 9e58f4787326b7d3b81484c792b5e1bf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 34fc26791df3ef08badf34a0cc8b0367]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 9e58f4787326b7d3b81484c792b5e1bf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 124c60509fc6c1f7133f1e507f0cb707]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 59109ee7cff598fbada2a9488498fcdc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 124c60509fc6c1f7133f1e507f0cb707]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 59109ee7cff598fbada2a9488498fcdc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 124c60509fc6c1f7133f1e507f0cb707]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 59109ee7cff598fbada2a9488498fcdc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: e9f74f6b20419d1a49635994583704bb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ae5ae7e7b4e2c1290bcc46d94576ef3e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: e9f74f6b20419d1a49635994583704bb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: ae5ae7e7b4e2c1290bcc46d94576ef3e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: e9f74f6b20419d1a49635994583704bb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ae5ae7e7b4e2c1290bcc46d94576ef3e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 948b04d678e4a3e84d400d09311181b8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 874414b7c06f3d221850ef5d844db889]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 948b04d678e4a3e84d400d09311181b8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 948b04d678e4a3e84d400d09311181b8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 874414b7c06f3d221850ef5d844db889]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: e0c4d4cca356d4226b7aa0e6170f39c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 874414b7c06f3d221850ef5d844db889]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: e0c4d4cca356d4226b7aa0e6170f39c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: b4cf798ed5cdd0c1a42fa497f143739e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: e0c4d4cca356d4226b7aa0e6170f39c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: b4cf798ed5cdd0c1a42fa497f143739e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: c08cee8a1aff31036239a02573fd02c6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: b4cf798ed5cdd0c1a42fa497f143739e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: c08cee8a1aff31036239a02573fd02c6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7dd3622a5f869d68e562f0f98dc2a5dd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: c08cee8a1aff31036239a02573fd02c6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7dd3622a5f869d68e562f0f98dc2a5dd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 3627c7c2c4e2ee1e739c3868b7947d8e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7dd3622a5f869d68e562f0f98dc2a5dd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 3627c7c2c4e2ee1e739c3868b7947d8e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7258fa22ea3f516bc54ba0e8d6f364cd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 3627c7c2c4e2ee1e739c3868b7947d8e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7258fa22ea3f516bc54ba0e8d6f364cd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7afceb326557a9fa43a3ce23536bc0e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7258fa22ea3f516bc54ba0e8d6f364cd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7afceb326557a9fa43a3ce23536bc0e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 8544b4ee04264d7e1c70b5f3891e2164]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7afceb326557a9fa43a3ce23536bc0e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 8544b4ee04264d7e1c70b5f3891e2164]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 2fbfb29a9c0de1e3ba827ec7de388e7d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 8544b4ee04264d7e1c70b5f3891e2164]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: c69549e4775bbd6b40f27f4620d8ca35]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 2fbfb29a9c0de1e3ba827ec7de388e7d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: c69549e4775bbd6b40f27f4620d8ca35]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 2fbfb29a9c0de1e3ba827ec7de388e7d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: c69549e4775bbd6b40f27f4620d8ca35]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 086d366b1db4420353d0012920101c71]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 086d366b1db4420353d0012920101c71]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: b520004324025bc61573a2041302bd73]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: b520004324025bc61573a2041302bd73]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 086d366b1db4420353d0012920101c71]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: b520004324025bc61573a2041302bd73]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: f7afe325ed027ec38db604706180dfee]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 0602489790992e2dc66ed98f262d30bf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: f7afe325ed027ec38db604706180dfee]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: f7afe325ed027ec38db604706180dfee]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 0602489790992e2dc66ed98f262d30bf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ab5cbfbaf6804923b99b3b78ce248d53]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 0602489790992e2dc66ed98f262d30bf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: ab5cbfbaf6804923b99b3b78ce248d53]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ab5cbfbaf6804923b99b3b78ce248d53]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 613ec139a3abf37c6f86f939e2e122de]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: febcd16d07581cab222f5a5083cf76fb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 613ec139a3abf37c6f86f939e2e122de]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: febcd16d07581cab222f5a5083cf76fb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 613ec139a3abf37c6f86f939e2e122de]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: febcd16d07581cab222f5a5083cf76fb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: adfb4dca4e1edeeb70b61051f6376a07]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: e8b4889650cabf6e9be799f1970c4f6c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: e8b4889650cabf6e9be799f1970c4f6c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: adfb4dca4e1edeeb70b61051f6376a07]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: e8b4889650cabf6e9be799f1970c4f6c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: adfb4dca4e1edeeb70b61051f6376a07]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 26c5f578190dd9300bc0e9919f2d40c1]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: b61c0df019b10d249a79813fb7eda4dd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 26c5f578190dd9300bc0e9919f2d40c1]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: b61c0df019b10d249a79813fb7eda4dd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 26c5f578190dd9300bc0e9919f2d40c1]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: b61c0df019b10d249a79813fb7eda4dd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7fc1a7db89a6c2c07e8552de512f2a93]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 3ea62f52c1373df2fd1efa290e8d57fa]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7fc1a7db89a6c2c07e8552de512f2a93]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 3ea62f52c1373df2fd1efa290e8d57fa]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7fc1a7db89a6c2c07e8552de512f2a93]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 3ea62f52c1373df2fd1efa290e8d57fa]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: fe8f46c139aa256b8f303d04abaa5569]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d6cbd3ecfe37ef54ea4befc4be500f73]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: fe8f46c139aa256b8f303d04abaa5569]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: fe8f46c139aa256b8f303d04abaa5569]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: d6cbd3ecfe37ef54ea4befc4be500f73]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ebec6e4b11d37b9c96e6367589213317]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d6cbd3ecfe37ef54ea4befc4be500f73]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: ebec6e4b11d37b9c96e6367589213317]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 0a31b71d5cd1c83e1dd4f43813101ee4]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ebec6e4b11d37b9c96e6367589213317]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 0a31b71d5cd1c83e1dd4f43813101ee4]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 0a31b71d5cd1c83e1dd4f43813101ee4]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: a6c5f8aa7af14a10eb58b4ae50f1b170]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: a6c5f8aa7af14a10eb58b4ae50f1b170]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 875997d6f6883ca4a52832f3db81ac29]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: a6c5f8aa7af14a10eb58b4ae50f1b170]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 875997d6f6883ca4a52832f3db81ac29]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 875997d6f6883ca4a52832f3db81ac29]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 0fd7594d0954acf77cf13000d94c5138]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 0fd7594d0954acf77cf13000d94c5138]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 066397c866b0d90d99a5c1d5e98d4004]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 0fd7594d0954acf77cf13000d94c5138]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 066397c866b0d90d99a5c1d5e98d4004]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 066397c866b0d90d99a5c1d5e98d4004]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d2bb64d5e745e3561beae4e1d3674265]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: d2bb64d5e745e3561beae4e1d3674265]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 1f1d07f2e3a542142739e7fcdd893706]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d2bb64d5e745e3561beae4e1d3674265]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 1f1d07f2e3a542142739e7fcdd893706]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 6a24ffd82c6daff1f2a9906944db0d9a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 1f1d07f2e3a542142739e7fcdd893706]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 6a24ffd82c6daff1f2a9906944db0d9a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 177b82c3746fa9ca59053e628e192767]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 6a24ffd82c6daff1f2a9906944db0d9a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 177b82c3746fa9ca59053e628e192767]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 6c39706d7e837f661ebf5410e0e07b66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 177b82c3746fa9ca59053e628e192767]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 6c39706d7e837f661ebf5410e0e07b66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 26869f2755dd1b3f59ede662eeeee80a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 6c39706d7e837f661ebf5410e0e07b66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 26869f2755dd1b3f59ede662eeeee80a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ced6f22e723160e31e229c2d69a63a62]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 26869f2755dd1b3f59ede662eeeee80a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: ced6f22e723160e31e229c2d69a63a62]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: fb02091dfa11dbad580170ce1f50da1f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ced6f22e723160e31e229c2d69a63a62]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: fb02091dfa11dbad580170ce1f50da1f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: cb3b689038d7de12cc55d5bfdcd013ef]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: fb02091dfa11dbad580170ce1f50da1f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: cb3b689038d7de12cc55d5bfdcd013ef]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: be7d319e5755d47af8549798f5152ce6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: cb3b689038d7de12cc55d5bfdcd013ef]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: be7d319e5755d47af8549798f5152ce6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 691b756489b90f30f7b3489a50ee897e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: be7d319e5755d47af8549798f5152ce6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 691b756489b90f30f7b3489a50ee897e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 086d366b1db4420353d0012920101c71]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 691b756489b90f30f7b3489a50ee897e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 086d366b1db4420353d0012920101c71]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7479526e557ef42adfbc94e380887bbe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 086d366b1db4420353d0012920101c71]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7479526e557ef42adfbc94e380887bbe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 6a99897be284fa3b54861cdeb2ab916d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7479526e557ef42adfbc94e380887bbe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 6a99897be284fa3b54861cdeb2ab916d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 5758071b2055d52aac0ff34c11f09fac]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 6a99897be284fa3b54861cdeb2ab916d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 5758071b2055d52aac0ff34c11f09fac]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: f7afe325ed027ec38db604706180dfee]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 5758071b2055d52aac0ff34c11f09fac]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: f7afe325ed027ec38db604706180dfee]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 44edd8572d7a697696d13939396e6f3a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: f7afe325ed027ec38db604706180dfee]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 44edd8572d7a697696d13939396e6f3a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 4e6459e203f8105aa0a3844467519747]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 44edd8572d7a697696d13939396e6f3a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 4e6459e203f8105aa0a3844467519747]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: e0229b1aa164a74475cf7f1e6688e943]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 4e6459e203f8105aa0a3844467519747]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 5cef1513b24e9b4c46f42c30c7989acb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: e0229b1aa164a74475cf7f1e6688e943]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 5cef1513b24e9b4c46f42c30c7989acb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: e0229b1aa164a74475cf7f1e6688e943]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 5cef1513b24e9b4c46f42c30c7989acb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 5a45985d7101440f5ac02f092332c2df]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: eaeadbb2dc5240c71e9de51d4687e39e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 5a45985d7101440f5ac02f092332c2df]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: eaeadbb2dc5240c71e9de51d4687e39e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 5a45985d7101440f5ac02f092332c2df]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: eaeadbb2dc5240c71e9de51d4687e39e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 4a8e3cb182690ca68927c03fdd1ff1a6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: bca948105f7c396a56435ea5b0ada05e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 4a8e3cb182690ca68927c03fdd1ff1a6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: bca948105f7c396a56435ea5b0ada05e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 4a8e3cb182690ca68927c03fdd1ff1a6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: bca948105f7c396a56435ea5b0ada05e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 2fa789f47cb9b5ecb60ef83619513089]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ebec6e4b11d37b9c96e6367589213317]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 2fa789f47cb9b5ecb60ef83619513089]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: ebec6e4b11d37b9c96e6367589213317]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 2fa789f47cb9b5ecb60ef83619513089]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ebec6e4b11d37b9c96e6367589213317]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 6a8f830b88e351b11199e7cbb8b0b89c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: a6c5f8aa7af14a10eb58b4ae50f1b170]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 6a8f830b88e351b11199e7cbb8b0b89c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: a6c5f8aa7af14a10eb58b4ae50f1b170]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 6a8f830b88e351b11199e7cbb8b0b89c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: a6c5f8aa7af14a10eb58b4ae50f1b170]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 8c0f11dd68caf87beaa868e97813c3c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 4bee8e223d8439a91dfaf96ff1bfb456]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 8c0f11dd68caf87beaa868e97813c3c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 4bee8e223d8439a91dfaf96ff1bfb456]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 8c0f11dd68caf87beaa868e97813c3c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 4bee8e223d8439a91dfaf96ff1bfb456]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 050f68e39e8288953663c42e437e0eb1]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 895db44bad7cab489e424a32f78a7d43]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 050f68e39e8288953663c42e437e0eb1]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 050f68e39e8288953663c42e437e0eb1]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 895db44bad7cab489e424a32f78a7d43]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 31b3f5835be94a50e51c78841ced8187]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 895db44bad7cab489e424a32f78a7d43]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 31b3f5835be94a50e51c78841ced8187]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 29b72967def97f9c7aff8587f8c4bbcf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 31b3f5835be94a50e51c78841ced8187]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 29b72967def97f9c7aff8587f8c4bbcf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 526a5df6cbf29f37554320a961c270e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 29b72967def97f9c7aff8587f8c4bbcf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 526a5df6cbf29f37554320a961c270e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: b8cf29a186028abdf003069ae33d916d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 526a5df6cbf29f37554320a961c270e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: b8cf29a186028abdf003069ae33d916d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: bb71d160195cf52fdda22915047ebb57]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: b8cf29a186028abdf003069ae33d916d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: bb71d160195cf52fdda22915047ebb57]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 33780a77198614076817cefbc5761852]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: bb71d160195cf52fdda22915047ebb57]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 33780a77198614076817cefbc5761852]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 5a53efaf71d63fc5992aa1dd02c0c200]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 33780a77198614076817cefbc5761852]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 5a53efaf71d63fc5992aa1dd02c0c200]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: a7c39a372c3a8eb2ade6f6d494dd7248]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 5a53efaf71d63fc5992aa1dd02c0c200]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: a7c39a372c3a8eb2ade6f6d494dd7248]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 29a2e67c5578a014efa5fd8eaba40a3a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: a7c39a372c3a8eb2ade6f6d494dd7248]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 29a2e67c5578a014efa5fd8eaba40a3a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 1a71d4bdec8d976c9fd90bac5bd378e2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 29a2e67c5578a014efa5fd8eaba40a3a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 1a71d4bdec8d976c9fd90bac5bd378e2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: dba3fffbd45651601f303eeae5fbce3d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 1a71d4bdec8d976c9fd90bac5bd378e2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: dba3fffbd45651601f303eeae5fbce3d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: f25d667979a5e7b35df2498bb77d731a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: dba3fffbd45651601f303eeae5fbce3d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: f25d667979a5e7b35df2498bb77d731a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: aa68ff46cd474b089a598aaf94c784be]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: f25d667979a5e7b35df2498bb77d731a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: aa68ff46cd474b089a598aaf94c784be]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: aa68ff46cd474b089a598aaf94c784be]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ab2c138ad8b2191b2d7f434f4d38746b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::bf585e13:3edc:466728d4]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: ab2c138ad8b2191b2d7f434f4d38746b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ab2c138ad8b2191b2d7f434f4d38746b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::bf585e13:3edc:1b43838b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 132fabb929b3b5cb69dc5cf7e4b7d737]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::bf585e13:3edc:a2ec5adf]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 132fabb929b3b5cb69dc5cf7e4b7d737]

Building graph [batch_writes_enabled: True, batch_write_size: 25]: 100%|██████████| 179/179 [00:00<00:00, 2191.05it/s]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 132fabb929b3b5cb69dc5cf7e4b7d737]



2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 3ae195017ffd78a6727c38f9b4cb711c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 3ae195017ffd78a6727c38f9b4cb711c]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[f095d/b169d] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 3ae195017ffd78a6727c38f9b4cb711c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 9c879a379ff844830df46a6805b97c53]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 9c879a379ff844830df46a6805b97c53]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 9c879a379ff844830df46a6805b97c53]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: f4fc934d1224a919f0d26b9fcde6e3d9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: f4fc934d1224a919f0d26b9fcde6e3d9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: f4fc934d1224a919f0d26b9fcde6e3d9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 9c36f4a1bd8f3466174ff7f55f38a4ab]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[f095d/b169d] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 9c36f4a1bd8f3466174ff7f55f38a4ab]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[133dd/966af] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 9c36f4a1bd8f3466174ff7f55f38a4ab]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 78a4d5a58535e772248b63a2ca5507e6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 78a4d5a58535e772248b63a2ca5507e6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 78a4d5a58535e772248b63a2ca5507e6]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[133dd/966af] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 1100b76077423bb095b14fffa17b2720]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[582db/a454d] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 1100b76077423bb095b14fffa17b2720]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 1100b76077423bb095b14fffa17b2720]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 22f50ba2e3eeac9c62c7af6c5f1a73fd]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[582db/a454d] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 22f50ba2e3eeac9c62c7af6c5f1a73fd]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[86279/8a8ac] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 22f50ba2e3eeac9c62c7af6c5f1a73fd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: feef97c212d967b8bbf2c1bc7579fe77]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: feef97c212d967b8bbf2c1bc7579fe77]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[86279/8a8ac] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: feef97c212d967b8bbf2c1bc7579fe77]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[4cb5d/1789d] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: aaea719c74b5c80bda44c63bc9a43925]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: aaea719c74b5c80bda44c63bc9a43925]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: aaea719c74b5c80bda44c63bc9a43925]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 87f7c09d676b0e099213a829b8c9948a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 87f7c09d676b0e099213a829b8c9948a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 87f7c09d676b0e099213a829b8c9948a]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[4cb5d/1789d] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 81f3f754bafb94cc1bbea42d6cb48561]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 81f3f754bafb94cc1bbea42d6cb48561]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 81f3f754bafb94cc1bbea42d6cb48561]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[44b08/341a1] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7d1aba03baa2c9a51f869e04ef439eed]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7d1aba03baa2c9a51f869e04ef439eed]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7d1aba03baa2c9a51f869e04ef439eed]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 420ec2d7ecf9fa1581714f1e39b76ebd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 420ec2d7ecf9fa1581714f1e39b76ebd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 420ec2d7ecf9fa1581714f1e39b76ebd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 644e770672a80bf4a158d3bce6639e9e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 644e770672a80bf4a158d3bce6639e9e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 644e770672a80bf4a158d3bce6639e9e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d0afae066deb525ef8ec7d2978971942]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: d0afae066deb525ef8ec7d2978971942]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d0afae066deb525ef8ec7d2978971942]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 58a6338ffe7b9ec84fc4d87f417808da]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 58a6338ffe7b9ec84fc4d87f417808da]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 58a6338ffe7b9ec84fc4d87f417808da]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 75445f52c8507e34d8cd7ca5fa51ac23]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 75445f52c8507e34d8cd7ca5fa51ac23]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 75445f52c8507e34d8cd7ca5fa51ac23]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 4f7e51624eb1d311f2aea47fd7740a65]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[44b08/341a1] 3ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 4f7e51624eb1d311f2aea47fd7740a65]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 4f7e51624eb1d311f2aea47fd7740a65]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[74c04/dac99] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 13310d57a17fcd91826ee512aea7240b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 13310d57a17fcd91826ee512aea7240b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 13310d57a17fcd91826ee512aea7240b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 1c28a36fff7e5846dd8cbddf3e4b449e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 1c28a36fff7e5846dd8cbddf3e4b449e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 1c28a36fff7e5846dd8cbddf3e4b449e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 156d92af86119b29eb4d21c9357d6c37]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 156d92af86119b29eb4d21c9357d6c37]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 156d92af86119b29eb4d21c9357d6c37]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d28b2268eae7dbb1b795a3c3cb8cb1bb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: d28b2268eae7dbb1b795a3c3cb8cb1bb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d28b2268eae7dbb1b795a3c3cb8cb1bb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 9a7f2feccd7d3ce69a0cc8ae93199c41]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 9a7f2feccd7d3ce69a0cc8ae93199c41]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 9a7f2feccd7d3ce69a0cc8ae93199c41]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 1ea33069012922e40fe70812c0720604]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 1ea33069012922e40fe70812c0720604]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 1ea33069012922e40fe70812c0720604]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ad800b825f6dd828628c535c5740b022]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: ad800b825f6dd828628c535c5740b022]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ad800b825f6dd828628c535c5740b022]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[74c04/dac99] 3ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 3c2b81e90ff1db61396a1d68b112fdb5]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[bd8f8/aa33d] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 3c2b81e90ff1db61396a1d68b112fdb5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 3c2b81e90ff1db61396a1d68b112fdb5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: cecc448d247b977d05f04bc1b8a59ca3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: cecc448d247b977d05f04bc1b8a59ca3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: cecc448d247b977d05f04bc1b8a59ca3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: b0d94367cb390eb2d1e194354d09f57b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: b0d94367cb390eb2d1e194354d09f57b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: b0d94367cb390eb2d1e194354d09f57b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: c9fc2807422c9248a4466d8de386e69d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: c9fc2807422c9248a4466d8de386e69d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: c9fc2807422c9248a4466d8de386e69d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 1bde865b476812630d26b9fea10ecd5c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 1bde865b476812630d26b9fea10ecd5c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 1bde865b476812630d26b9fea10ecd5c]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[bd8f8/aa33d] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: a81b3bcd0a442792d6a2538ff1db74f6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: a81b3bcd0a442792d6a2538ff1db74f6]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[f4831/1bec1] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: a81b3bcd0a442792d6a2538ff1db74f6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 04eb9320e6fce79b6309c5bc7a960135]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[f4831/1bec1] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 04eb9320e6fce79b6309c5bc7a960135]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[22269/fbee8] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 04eb9320e6fce79b6309c5bc7a960135]

Building graph [batch_writes_enabled: True, batch_write_size: 25]:  57%|█████▋    | 253/443 [00:00<00:00, 2527.92it/s]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: e89127d7ac644038520ff6b5a6a6ea02]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: e89127d7ac644038520ff6b5a6a6ea02]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: e89127d7ac644038520ff6b5a6a6ea02]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 1c2c1cb62258ff08682ecd47cfcb1064]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 1c2c1cb62258ff08682ecd47cfcb1064]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 1c2c1cb62258ff08682ecd47cfcb1064]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ab168371cd1562bf3a4eade795d64314]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: ab168371cd1562bf3a4eade795d64314]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ab168371cd1562bf3a4eade795d64314]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 65b8c6963653d44c7191e8b51e4fff7a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 65b8c6963653d44c7191e8b51e4fff7a]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[22269/fbee8] 3ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 65b8c6963653d44c7191e8b51e4fff7a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 83d9ca38961ad3a555d5f804df43e575]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[ca5c1/f2f8a] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 83d9ca38961ad3a555d5f804df43e575]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 83d9ca38961ad3a555d5f804df43e575]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 370019085c118e740610d468cad62ab5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 370019085c118e740610d468cad62ab5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 370019085c118e740610d468cad62ab5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7c12b1adc7b919cf384515d128d3c516]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 7c12b1adc7b919cf384515d128d3c516]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7c12b1adc7b919cf384515d128d3c516]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 5b0b1679fe4003d2b56e338a57f8b2d5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 5b0b1679fe4003d2b56e338a57f8b2d5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 5b0b1679fe4003d2b56e338a57f8b2d5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 4f4accb96049c373102eda0ce54e9eba]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[ca5c1/f2f8a] 3ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 4f4accb96049c373102eda0ce54e9eba]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[f86db/29d33] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 4f4accb96049c373102eda0ce54e9eba]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 4e9cb4ef52727247dabf557eb265ec9e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 4e9cb4ef52727247dabf557eb265ec9e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 4e9cb4ef52727247dabf557eb265ec9e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ee3913528d0f843d18608c147cff4e54]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: ee3913528d0f843d18608c147cff4e54]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ee3913528d0f843d18608c147cff4e54]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: f5554e2b21ef8c76be1b240db68637b7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: f5554e2b21ef8c76be1b240db68637b7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: f5554e2b21ef8c76be1b240db68637b7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 492ea1c96dd731df991c0d5e235c5894]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 492ea1c96dd731df991c0d5e235c5894]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 492ea1c96dd731df991c0d5e235c5894]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 4c73254ff05632a71a1a2f11df9b3cc3]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[f86db/29d33] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 4c73254ff05632a71a1a2f11df9b3cc3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 4c73254ff05632a71a1a2f11df9b3cc3]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[0cf64/43202] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ddf04fe1c23395e545f0381cfc32c86e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: ddf04fe1c23395e545f0381cfc32c86e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ddf04fe1c23395e545f0381cfc32c86e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: b5e61b8f76fe4d08801e362f918f5595]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: b5e61b8f76fe4d08801e362f918f5595]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: b5e61b8f76fe4d08801e362f918f5595]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 71604d15b8f41469b6510bdafd2f3a66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 71604d15b8f41469b6510bdafd2f3a66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 71604d15b8f41469b6510bdafd2f3a66]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[0cf64/43202] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: e4a6f1d62e6d6c7b335cdd55961e9cb9]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[ae6ad/0de7e] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: e4a6f1d62e6d6c7b335cdd55961e9cb9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: e4a6f1d62e6d6c7b335cdd55961e9cb9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 71604d15b8f41469b6510bdafd2f3a66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 71604d15b8f41469b6510bdafd2f3a66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 71604d15b8f41469b6510bdafd2f3a66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 87f4deabbee7811a59f611efbb9c306b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 87f4deabbee7811a59f611efbb9c306b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 87f4deabbee7811a59f611efbb9c306b]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[ae6ad/0de7e] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: edfca8a3ca54308bbfd47309fcc010c9]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[5141f/a0956] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: edfca8a3ca54308bbfd47309fcc010c9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: edfca8a3ca54308bbfd47309fcc010c9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 8b6c1c484d2a37763b3ddf4d2043fb10]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 8b6c1c484d2a37763b3ddf4d2043fb10]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 8b6c1c484d2a37763b3ddf4d2043fb10]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: b6cf398d9df5ea112aaa8cf16bb6c80d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: b6cf398d9df5ea112aaa8cf16bb6c80d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: b6cf398d9df5ea112aaa8cf16bb6c80d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: bc243a4f2f14992efc5dec72bf872019]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[5141f/a0956] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: bc243a4f2f14992efc5dec72bf872019]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[1cc83/7901b] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: bc243a4f2f14992efc5dec72bf872019]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d32e8ec8d125107529da7392841d515b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: d32e8ec8d125107529da7392841d515b]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[1cc83/7901b] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d32e8ec8d125107529da7392841d515b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 1b1fd32c5ecc7cdf95cfa9c8423c2e82]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[5d05c/b868f] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 1b1fd32c5ecc7cdf95cfa9c8423c2e82]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 1b1fd32c5ecc7cdf95cfa9c8423c2e82]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 5859a3b6edcb05de259f36601a325f6f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 5859a3b6edcb05de259f36601a325f6f]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[5d05c/b868f] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 5859a3b6edcb05de259f36601a325f6f]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[d5247/c7652] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d557389dc4839151ee5194cb7f2b26a2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: d557389dc4839151ee5194cb7f2b26a2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d557389dc4839151ee5194cb7f2b26a2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: b50ff0d4c3d40c2129a3de5c2ee8e752]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[d5247/c7652] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: b50ff0d4c3d40c2129a3de5c2ee8e752]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[e9536/dd04b] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: b50ff0d4c3d40c2129a3de5c2ee8e752]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: a516c8c24388f77893e0164d44180223]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: a516c8c24388f77893e0164d44180223]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: a516c8c24388f77893e0164d44180223]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 053dd70f3aa7bb4baf7ac40e130e783a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 053dd70f3aa7bb4baf7ac40e130e783a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 053dd70f3aa7bb4baf7ac40e130e783a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 3025570d88796d1160f62b1ab12fd78f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 3025570d88796d1160f62b1ab12fd78f]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[e9536/dd04b] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 3025570d88796d1160f62b1ab12fd78f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 70c3704ac02f19559388ca017cd7000a]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[6e345/33701] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 70c3704ac02f19559388ca017cd7000a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 70c3704ac02f19559388ca017cd7000a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 552770c91c557a508775014b31ba8c6b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 552770c91c557a508775014b31ba8c6b]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[6e345/33701] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 552770c91c557a508775014b31ba8c6b]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[63631/7cdb4] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 3954bccd334621360d7d71a6f8f72025]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 3954bccd334621360d7d71a6f8f72025]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[63631/7cdb4] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 3954bccd334621360d7d71a6f8f72025]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 2d856bae11eadd3bfd1cfc721013414b]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[b5af0/417d0] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 2d856bae11eadd3bfd1cfc721013414b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 2d856bae11eadd3bfd1cfc721013414b]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[b5af0/417d0] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 05dc7d6605f2771fd3ae11e38df25ebe]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[57e2c/90702] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 05dc7d6605f2771fd3ae11e38df25ebe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 05dc7d6605f2771fd3ae11e38df25ebe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 8d277c5576b4a9a065d0dcfc89d9c7c0]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[57e2c/90702] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 8d277c5576b4a9a065d0dcfc89d9c7c0]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[e2d55/07ea6] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 8d277c5576b4a9a065d0dcfc89d9c7c0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: c36518a4d1d6e33169d84f94eae55545]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: c36518a4d1d6e33169d84f94eae55545]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: c36518a4d1d6e33169d84f94eae55545]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[e2d55/07ea6] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: db8efb114c44e3d24bb31616312f8fc6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: db8efb114c44e3d24bb31616312f8fc6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: db8efb114c44e3d24bb31616312f8fc6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.vector_indexing:Batch config: [batch_writes_enabled: True, batch_write_size: 25]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: dc6e219a2810d60ad40b7d86dea2dc66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.vector_indexing:Vector indexing kwargs: {'batch_size': 4, 'include_domain_labels': False}
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: dc6e219a2810d60ad40b7d86dea2dc66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: dc6e219a2810d60ad40b7d86dea2dc66]

Building vector index [batch_writes_enabled: True, batch_write_size: 25]:   0%|          | 0/179 [00:00<?, ?it/s]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 6aab4df0b87eb533b83737d9a8ee669b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 6aab4df0b87eb533b83737d9a8ee669b]
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['84f248b8748b462611e37ac45b5be77a']
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 6aab4df0b87eb533b83737d9a8ee669b]
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['f6b6834c353900c2dbd585d9bc2906b8']
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: f5260e4513c8d20bccb97c2703151c25]
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['69f10a890136fe03124d150b2a88cc71']
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: f5260e4513c8d20bccb97c2703151c25]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: f5260e4513c8d20bccb97c2703151c25]
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['b4feb1210286d4acda5834b8d3ee1122']
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 140bee0873e6eb78492c1ee3846548de]
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['76412b9011f487704bd1ff8ad36c78a3']
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 140bee0873e6eb78492c1ee3846548de]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 140bee0873e6eb78492c1ee3846548de]

Building vector index [batch_writes_enabled: True, batch_write_size: 25]: 100%|██████████| 179/179 [00:00<00:00, 121230.49it/s]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 9a7f2feccd7d3ce69a0cc8ae93199c41]



2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 9a7f2feccd7d3ce69a0cc8ae93199c41]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 9a7f2feccd7d3ce69a0cc8ae93199c41]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ad800b825f6dd828628c535c5740b022]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: ad800b825f6dd828628c535c5740b022]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ad800b825f6dd828628c535c5740b022]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: cecc448d247b977d05f04bc1b8a59ca3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: cecc448d247b977d05f04bc1b8a59ca3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: cecc448d247b977d05f04bc1b8a59ca3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 337788d483fca3aad7176b7874831e5a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 337788d483fca3aad7176b7874831e5a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 337788d483fca3aad7176b7874831e5a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 313a5212e040eb68ad17c11c38f629a9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 313a5212e040eb68ad17c11c38f629a9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 313a5212e040eb68ad17c11c38f629a9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 1ddccefc77bd1ad793622455f60ff684]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 1ddccefc77bd1ad793622455f60ff684]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 1ddccefc77bd1ad793622455f60ff684]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 90c5a463bf38c70c8d2d8fb85f8cf00c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 90c5a463bf38c70c8d2d8fb85f8cf00c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 90c5a463bf38c70c8d2d8fb85f8cf00c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 44bf23319942b63f7f636c8476d75e4a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 44bf23319942b63f7f636c8476d75e4a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 44bf23319942b63f7f636c8476d75e4a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7d93d5dfeb076cc1f3daecf866cf4e61]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7d93d5dfeb076cc1f3daecf866cf4e61]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7d93d5dfeb076cc1f3daecf866cf4e61]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7596ea72a5e15fcd05f46a2ebe449769]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7596ea72a5e15fcd05f46a2ebe449769]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7596ea72a5e15fcd05f46a2ebe449769]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: f2e15e679be82c21e6c097619b3b6547]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: f2e15e679be82c21e6c097619b3b6547]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: f2e15e679be82c21e6c097619b3b6547]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 3d761c908e110d66c6474bcd4c2df594]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 3d761c908e110d66c6474bcd4c2df594]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 3d761c908e110d66c6474bcd4c2df594]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 516fb86a007b7955ea5f60df943553ea]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 516fb86a007b7955ea5f60df943553ea]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 516fb86a007b7955ea5f60df943553ea]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 9039e3d5d7e997648e6d564f964d085a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 9039e3d5d7e997648e6d564f964d085a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 9039e3d5d7e997648e6d564f964d085a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: b8b34000c7a7f7c0fd4a0b55fbca2913]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: b8b34000c7a7f7c0fd4a0b55fbca2913]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: b8b34000c7a7f7c0fd4a0b55fbca2913]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 4d063ea967262bfffc0e1aad3614e2cd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 4d063ea967262bfffc0e1aad3614e2cd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 4d063ea967262bfffc0e1aad3614e2cd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 613ec962e889085e655cdebd532bfe37]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 613ec962e889085e655cdebd532bfe37]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 613ec962e889085e655cdebd532bfe37]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 1815a8932463e5f7be202df40216b40e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 1815a8932463e5f7be202df40216b40e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 1815a8932463e5f7be202df40216b40e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d425f745c991e454d074f633d62e62a7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: d425f745c991e454d074f633d62e62a7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d425f745c991e454d074f633d62e62a7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 748744e5505824a9aa595321fb781285]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 748744e5505824a9aa595321fb781285]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 748744e5505824a9aa595321fb781285]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 8b88db0be1951eabf1939bcfb792aeac]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 8b88db0be1951eabf1939bcfb792aeac]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 8b88db0be1951eabf1939bcfb792aeac]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 18905c5cc6523375f1c44db7e3f04203]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 18905c5cc6523375f1c44db7e3f04203]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 18905c5cc6523375f1c44db7e3f04203]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 963aeacea32fa4d6f2d6e11394e67aac]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 963aeacea32fa4d6f2d6e11394e67aac]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 963aeacea32fa4d6f2d6e11394e67aac]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 9cd04d1b26bf2cf7be5b9c206ce73a5f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 9cd04d1b26bf2cf7be5b9c206ce73a5f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 9cd04d1b26bf2cf7be5b9c206ce73a5f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 9ea9f93eb5eb1762c269d8d46ee12f7d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 9ea9f93eb5eb1762c269d8d46ee12f7d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 9ea9f93eb5eb1762c269d8d46ee12f7d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 613ac512761792871d09c075edec8d70]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 613ac512761792871d09c075edec8d70]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 613ac512761792871d09c075edec8d70]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 6eaf85ea2cdc3ba6574127356fd65a45]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 6eaf85ea2cdc3ba6574127356fd65a45]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 6eaf85ea2cdc3ba6574127356fd65a45]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 0988a45218ecb7a7f85da8fdadd9c2ba]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 0988a45218ecb7a7f85da8fdadd9c2ba]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 0988a45218ecb7a7f85da8fdadd9c2ba]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: abaa85b4dd6b70de073179c7a5847f32]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: abaa85b4dd6b70de073179c7a5847f32]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: abaa85b4dd6b70de073179c7a5847f32]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ac45692fe8ad9e009c60891726c972d1]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: ac45692fe8ad9e009c60891726c972d1]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ac45692fe8ad9e009c60891726c972d1]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 6e528c38eeb377f71fa212bd5f27c4ab]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 6e528c38eeb377f71fa212bd5f27c4ab]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 6e528c38eeb377f71fa212bd5f27c4ab]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: c997017a90f8686610ccdc740533010d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: c997017a90f8686610ccdc740533010d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: c997017a90f8686610ccdc740533010d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 4dd03ff4696b245411e14964024e10e3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 4dd03ff4696b245411e14964024e10e3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 4dd03ff4696b245411e14964024e10e3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 4acb6ac52f8d5f2cc36cc4bb47a08313]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 4acb6ac52f8d5f2cc36cc4bb47a08313]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 4acb6ac52f8d5f2cc36cc4bb47a08313]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 5c845cc472a664fc7f146eaf44979f65]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 5c845cc472a664fc7f146eaf44979f65]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 5c845cc472a664fc7f146eaf44979f65]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 91ae0b20bf7750857d9f10035b41f644]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 91ae0b20bf7750857d9f10035b41f644]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 91ae0b20bf7750857d9f10035b41f644]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: a8914fb0082ede4ed15248a435286598]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: a8914fb0082ede4ed15248a435286598]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: a8914fb0082ede4ed15248a435286598]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 526a5df6cbf29f37554320a961c270e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 526a5df6cbf29f37554320a961c270e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 526a5df6cbf29f37554320a961c270e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 526a5df6cbf29f37554320a961c270e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 526a5df6cbf29f37554320a961c270e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 526a5df6cbf29f37554320a961c270e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::abd5427c:978b:846f6c9c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::abd5427c:978b:7ae8328d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::abd5427c:978b:cf49e6ec]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::abd5427c:978b:fba12a15]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::abd5427c:978b:56aed072]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::abd5427c:978b:e901bab9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::abd5427c:978b:75689b1d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.source_graph_builder:Inserting source [source_id: aws::bd6a6b1b:8115]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::bd6a6b1b:8115:cfc5dc5d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::bd6a6b1b:8115:b9569c0b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.chunk_graph_builder:Inserting chunk [chunk_id: aws::bd6a6b1b:8115:e862442d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: 9ea4870f899a4509e1c0e151b3b90c41]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: 8d07c809aae22c15d890f379ad2cd76e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: ebd5ee7d09fbe4f24967c5139089c89e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.topic_graph_builder:Inserting topic [topic_id: dce828212b2ea628188073847427e044]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 661c338b7fddc23c2844bdd78d9290b9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: ca59eb6654dd3f76fd5301fbd178c631]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 5dc467ed3e6295066c2478b8fa5610aa]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: bd8716728ca7f3a2caf87b81ddbdfd5b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 873fabdc0d52d3a127734f9be696d021]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: acac65c872a80a3514d2648f3bf94483]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: fc4a7343288dda8028848bc883df9e01]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 40a188a272ceb0dd723c2cd6f3d8bdbe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 362050cf3dd31bc190815670dceb2191]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 86ee0c957deb55d5173a7310d2efc308]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: cc235f4d1aa7f7672d42dceb6036dc01]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: cf4b3f1bb1a5559ff9556b2dc6ef2a19]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: bc993822dc405c48cd359d414be57df0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 7c4ee5a256290c11de164daca0c24fce]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 734d8b86505d5ca799929f413527dbd5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 631609539dc38fd42e91e1b2422e8f61]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 4f7514e2d052bb7e4efebb3eb3132a76]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: da7e3bceb7d44bdbd62b41a4d41b7271]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 2568f65991105c46dcc7319f27adb30d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: d24f11f00a7b0dbcc24a76b0599a2267]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: ab8028019086ba6717691ab969be1c7b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 09aa87ef1eae61a45567a9418c3ee4d5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 3530c05fee48c8026e60adf353abe8a8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e2cdd35417a683a6a989e3d05f530e01]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: cf42c88054cbde0b482749809a2918c6]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 333258d85806b49ecd068796032e0e4d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 56a1f23ae191bb3e7859b19d3618dbd1]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: cc7bf9a10cc2dcf772141865bcb6fdf2]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: ddf8e7c25ab268c60ca07ca0dc009f52]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 4d87de100c2e6cb74856cb54e0107cb5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 2d673219255d73108d31021273aaff5d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 84f896bc6b646481125ad1688fd01eec]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 3c23a1414d4169bc01203662ab73d5db]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: e9b0d9867da24f8bf5d3703ad426270c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: 7e3a38914b91a639afaae0cd74373d8a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.statement_graph_builder:Inserting statement [statement_id: a0d3aefdb35a6eed28ab6d693efb5167]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 05e9de519c81c264be54efac8c572d17]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 05e9de519c81c264be54efac8c572d17]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 05e9de519c81c264be54efac8c572d17]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 8c8aec5b0a6b222667e0a0eac69e55de]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 8c8aec5b0a6b222667e0a0eac69e55de]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 8c8aec5b0a6b222667e0a0eac69e55de]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 506a338742382736f7b0a475f57fea5c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 506a338742382736f7b0a475f57fea5c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 506a338742382736f7b0a475f57fea5c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 0f745748ecd541f01131c37b94a83d6c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 0f745748ecd541f01131c37b94a83d6c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 0f745748ecd541f01131c37b94a83d6c]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 12953360045c0c176151a3a53028717e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 12953360045c0c176151a3a53028717e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 12953360045c0c176151a3a53028717e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: b5c06fadba489f8b7ac916311f9ba1f3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: b5c06fadba489f8b7ac916311f9ba1f3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: b5c06fadba489f8b7ac916311f9ba1f3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 71e51408ff863082a1a48c1982c19a35]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 71e51408ff863082a1a48c1982c19a35]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 71e51408ff863082a1a48c1982c19a35]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 8abc57b8c258391e1c3f6dfafbb696cc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 8abc57b8c258391e1c3f6dfafbb696cc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 8abc57b8c258391e1c3f6dfafbb696cc]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: f074c5eaa471c8df8cc240260acd0c26]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: f074c5eaa471c8df8cc240260acd0c26]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: f074c5eaa471c8df8cc240260acd0c26]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 133249304f20b488bae571448a0599c0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 133249304f20b488bae571448a0599c0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 133249304f20b488bae571448a0599c0]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: ef45b4851c61e5ffe8a02d55f95a722f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: ef45b4851c61e5ffe8a02d55f95a722f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: ef45b4851c61e5ffe8a02d55f95a722f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: f90406bcfa36db9ed2f18cffd4e57378]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: f90406bcfa36db9ed2f18cffd4e57378]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: f90406bcfa36db9ed2f18cffd4e57378]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7c29f1ab5ba94c5f5d0bb06033f81c66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7c29f1ab5ba94c5f5d0bb06033f81c66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7c29f1ab5ba94c5f5d0bb06033f81c66]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 29a3e8c4ca2b1455544570b65c1c80ab]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 29a3e8c4ca2b1455544570b65c1c80ab]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 29a3e8c4ca2b1455544570b65c1c80ab]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 381cfd14a58472864e92416d013699d8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 381cfd14a58472864e92416d013699d8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 381cfd14a58472864e92416d013699d8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 025eeb308001b32a8c00ae75a00f7d70]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 025eeb308001b32a8c00ae75a00f7d70]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 025eeb308001b32a8c00ae75a00f7d70]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 86b1aca19ecc5879ac34a4a178c7e1c7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 86b1aca19ecc5879ac34a4a178c7e1c7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 86b1aca19ecc5879ac34a4a178c7e1c7]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 5fc12d999a5972c49731d6d14961804e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 5fc12d999a5972c49731d6d14961804e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 5fc12d999a5972c49731d6d14961804e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 69c33db79f0cafa0288e3614c91f6d3d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 69c33db79f0cafa0288e3614c91f6d3d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 69c33db79f0cafa0288e3614c91f6d3d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 5bbfa9cafc9959048bf8da2c62a98747]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 5bbfa9cafc9959048bf8da2c62a98747]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 5bbfa9cafc9959048bf8da2c62a98747]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 02276a2356a702f62b05492601bccc42]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 02276a2356a702f62b05492601bccc42]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 02276a2356a702f62b05492601bccc42]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d8a91be56cadeada71d7fb25f2fac984]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: d8a91be56cadeada71d7fb25f2fac984]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d8a91be56cadeada71d7fb25f2fac984]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 2c46a5e8651b29046e7e74afc6f9033a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 2c46a5e8651b29046e7e74afc6f9033a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 2c46a5e8651b29046e7e74afc6f9033a]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: f660b3c91ee0bd8632cbcfb8a0e39808]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: f660b3c91ee0bd8632cbcfb8a0e39808]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: f660b3c91ee0bd8632cbcfb8a0e39808]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 49b986004c11abe4900ae1736342b6ef]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 49b986004c11abe4900ae1736342b6ef]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 49b986004c11abe4900ae1736342b6ef]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 1944394002a46f0c8ac8366133fdf263]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 1944394002a46f0c8ac8366133fdf263]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 1944394002a46f0c8ac8366133fdf263]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 84d855fe68d2c5b6dc413971bb76c4a9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 84d855fe68d2c5b6dc413971bb76c4a9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 84d855fe68d2c5b6dc413971bb76c4a9]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: fef952295f26ae2048d5392c1cef73c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: fef952295f26ae2048d5392c1cef73c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: fef952295f26ae2048d5392c1cef73c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: fef952295f26ae2048d5392c1cef73c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: fef952295f26ae2048d5392c1cef73c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: fef952295f26ae2048d5392c1cef73c8]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 71e7ba6b65604f6b4923a2f7f1f35e6d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 71e7ba6b65604f6b4923a2f7f1f35e6d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 71e7ba6b65604f6b4923a2f7f1f35e6d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 64381a346134154d992697ac4b4dcdbe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 64381a346134154d992697ac4b4dcdbe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 64381a346134154d992697ac4b4dcdbe]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: dd27befae9b9782fecbeb9774e5da23e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: dd27befae9b9782fecbeb9774e5da23e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: dd27befae9b9782fecbeb9774e5da23e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: c89dd1cabe55b75dd79684dbeb5c3faa]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: c89dd1cabe55b75dd79684dbeb5c3faa]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: c89dd1cabe55b75dd79684dbeb5c3faa]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: aab5362242746b1345e1156407bcc299]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: aab5362242746b1345e1156407bcc299]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: aab5362242746b1345e1156407bcc299]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: abcfa51bb6c2e7abcf578c0728074378]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: abcfa51bb6c2e7abcf578c0728074378]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: abcfa51bb6c2e7abcf578c0728074378]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: e6dc7230db6be01a394aecc2275d2ebb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: e6dc7230db6be01a394aecc2275d2ebb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: e6dc7230db6be01a394aecc2275d2ebb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 526a5df6cbf29f37554320a961c270e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 526a5df6cbf29f37554320a961c270e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 526a5df6cbf29f37554320a961c270e5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 8d7b5c6f1bb63b2dc25a902df024492d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 8d7b5c6f1bb63b2dc25a902df024492d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 8d7b5c6f1bb63b2dc25a902df024492d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 037c58dff92e7246185c03177b3afed3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 037c58dff92e7246185c03177b3afed3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 037c58dff92e7246185c03177b3afed3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 28ef90591e981fbf543674a5a0d49f10]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 28ef90591e981fbf543674a5a0d49f10]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 28ef90591e981fbf543674a5a0d49f10]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 241dab2b9f1ca1b0572bdba92b443bd3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 241dab2b9f1ca1b0572bdba92b443bd3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 241dab2b9f1ca1b0572bdba92b443bd3]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 67b51d74d6f68e65f8f2b7e2589b9d1e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 67b51d74d6f68e65f8f2b7e2589b9d1e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 67b51d74d6f68e65f8f2b7e2589b9d1e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 6d32787919470e328473b5d38e0c9775]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:Inserting entity relations for fact [fact_id: 6d32787919470e328473b5d38e0c9775]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 6d32787919470e328473b5d38e0c9775]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d0f1009add88739e8f420f00cb12fc56]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: d0f1009add88739e8f420f00cb12fc56]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d0f1009add88739e8f420f00cb12fc56]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 63ba3a777c36aeaf6852d663493a4d34]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 63ba3a777c36aeaf6852d663493a4d34]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 63ba3a777c36aeaf6852d663493a4d34]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7d9bb826707a0e14932e97cadb49ef33]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7d9bb826707a0e14932e97cadb49ef33]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7d9bb826707a0e14932e97cadb49ef33]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 7e07aa72a80730f3bc5851533890e16f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 7e07aa72a80730f3bc5851533890e16f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 7e07aa72a80730f3bc5851533890e16f]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: d309bce09e6fc65f6a2ba7572ce58ca5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: d309bce09e6fc65f6a2ba7572ce58ca5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: d309bce09e6fc65f6a2ba7572ce58ca5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 57a6b29b57df4b31efbba744280ddedb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 57a6b29b57df4b31efbba744280ddedb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 57a6b29b57df4b31efbba744280ddedb]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 3b251308864d1487bc7876771423f9cd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 3b251308864d1487bc7876771423f9cd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 3b251308864d1487bc7876771423f9cd]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 6b179f23abfd47e6a9a0961b7d9f3ca5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 6b179f23abfd47e6a9a0961b7d9f3ca5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 6b179f23abfd47e6a9a0961b7d9f3ca5]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: e2937990aa6f220c6358c58617ab8f2e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: e2937990aa6f220c6358c58617ab8f2e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: e2937990aa6f220c6358c58617ab8f2e]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_graph_builder:Inserting entities for fact [fact_id: 5db40537bdc76bd26c4bbbafe12d4612]
2025-05-06 16:25:14:DEBUG:g.l.i.b.entity_relation_graph_builder:SPC fact, so not creating relation [fact_id: 5db40537bdc76bd26c4bbbafe12d4612]
2025-05-06 16:25:14:DEBUG:g.l.i.b.fact_graph_builder:Inserting fact [fact_id: 5db40537bdc76bd26c4bbbafe12d4612]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::bd6a6b1b:8115:cfc5dc5d]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::bd6a6b1b:8115:b9569c0b]
2025-05-06 16:25:14:DEBUG:g.l.i.b.graph_construction:Ignoring node [node_id: aws::bd6a6b1b:8115:e862442d]

Building graph [batch_writes_enabled: True, batch_write_size: 25]: 100%|██████████| 443/443 [00:00<00:00, 2325.61it/s]

2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[6230e/ec8ec] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[6230e/ec8ec] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[dd366/88750] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[dd366/88750] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[4d851/2eed3] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[4d851/2eed3] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[7b8fa/9081f] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[7b8fa/9081f] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[fc0ad/9dcf9] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[fc0ad/9dcf9] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[630d0/8c4f3] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[630d0/8c4f3] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[04db8/06462] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[04db8/06462] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[5587c/a13f4] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[5587c/a13f4] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[dea42/c496b] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[dea42/c496b] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[34c20/7d9e7] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[34c20/7d9e7] 3ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[a14ea/a9abd] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[a14ea/a9abd] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[a8798/bbedb] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[a8798/bbedb] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[35a8a/d355c] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[35a8a/d355c] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[704f9/446fc] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[704f9/446fc] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[9fbcf/a8b25] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[9fbcf/a8b25] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[72b6c/9b6cd] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[72b6c/9b6cd] 3ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[27e05/bff23] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[27e05/bff23] 3ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[15c22/3accd] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[15c22/3accd] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[0246e/ccbcd] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[0246e/ccbcd] 3ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[5eeb1/c0dd0] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[5eeb1/c0dd0] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[56777/70b35] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[56777/70b35] 3ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[286e2/f610b] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[286e2/f610b] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[bb198/ea124] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[bb198/ea124] 2ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[feee1/5f608] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[feee1/5f608] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[a796f/ce66f] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[a796f/ce66f] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[4558b/0dbdb] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[4558b/0dbdb] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[43f3c/a0d62] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[43f3c/a0d62] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[75fe8/8da35] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[75fe8/8da35] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[dab01/ec61c] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[dab01/ec61c] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[4e3cd/ce7a0] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[4e3cd/ce7a0] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[71f74/605eb] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[71f74/605eb] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[a184d/795ae] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[a184d/795ae] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[864fc/73176] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[864fc/73176] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[934e4/f5ab7] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[934e4/f5ab7] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[52d8f/ad66c] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[52d8f/ad66c] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[9ee43/15d99] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[9ee43/15d99] 3ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[bfbbf/f7f5e] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[bfbbf/f7f5e] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[afc72/65e38] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[afc72/65e38] 1ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[8e4d3/3079c] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[8e4d3/3079c] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[7cbd7/f693f] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[7cbd7/f693f] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[3837d/29414] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[3837d/29414] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[d8606/5b4a0] Query: [query: **REDACTED**, parameters: **REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.s.g.f.falkordb_graph_store:[d8606/5b4a0] 0ms Results: [**REDACTED**]
2025-05-06 16:25:14:DEBUG:g.l.i.b.vector_indexing:Batch config: [batch_writes_enabled: True, batch_write_size: 25]
2025-05-06 16:25:14:DEBUG:g.l.i.b.vector_indexing:Vector indexing kwargs: {'batch_size': 4, 'include_domain_labels': False}

Building vector index [batch_writes_enabled: True, batch_write_size: 25]:   0%|          | 0/443 [00:00<?, ?it/s]
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['719df6376997776656b6b75950b15499']
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['4a5e494e3cffcbf7345501222d88a1b8']
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['78048abaa8cc25d3b8182599c6716457']
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['bd50da7ab692a41fba163b735dbfd362']
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['fa18082f8b98b8883043f4901f7ff536']
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['9ea4870f899a4509e1c0e151b3b90c41']
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['8d07c809aae22c15d890f379ad2cd76e']
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['ebd5ee7d09fbe4f24967c5139089c89e']
2025-05-06 16:25:14:DEBUG:g.l.s.v.dummy_vector_index:[topic] add embeddings for nodes: ['dce828212b2ea628188073847427e044']

Building vector index [batch_writes_enabled: True, batch_write_size: 25]: 100%|██████████| 443/443 [00:00<00:00, 194481.54it/s]

[31m---------------------------------------------------------------------------[39m
[31m_RemoteTraceback[39m                          Traceback (most recent call last)
[31m_RemoteTraceback[39m:
"""
Traceback (most recent call last):
  File "/home/evanerwee/anaconda3/envs/graphrag-toolkit5/lib/python3.12/concurrent/futures/process.py", line 264, in _process_worker
    r = call_item.fn(*call_item.args, **call_item.kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evanerwee/anaconda3/envs/graphrag-toolkit5/lib/python3.12/concurrent/futures/process.py", line 213, in _process_chunk
    return [fn(*args) for args in chunk]
            ^^^^^^^^^
  File "/home/evanerwee/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/llama_index/core/ingestion/pipeline.py", line 100, in run_transformations
    nodes = transform(nodes, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evanerwee/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/llama_index/core/instrumentation/dispatcher.py", line 322, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/evanerwee/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/graphrag_toolkit/lexical_graph/indexing/node_handler.py", line 15, in __call__
    return [n for n in self.accept(nodes, **kwargs)]
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evanerwee/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/graphrag_toolkit/lexical_graph/indexing/build/vector_indexing.py", line 56, in accept
    batch_nodes = batch_client.apply_batch_operations()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evanerwee/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/graphrag_toolkit/lexical_graph/indexing/build/vector_batch_client.py", line 56, in apply_batch_operations
    index.write_embeddings_to_index()
  File "/home/evanerwee/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/graphrag_toolkit/lexical_graph/indexing/build/vector_batch_client.py", line 26, in write_embeddings_to_index
    self.index.add_embeddings(nodes)
  File "/home/evanerwee/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/graphrag_toolkit/lexical_graph/storage/vector/pg_vector_indexes.py", line 264, in add_embeddings
    dbconn = self._get_connection()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evanerwee/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/graphrag_toolkit/lexical_graph/storage/vector/pg_vector_indexes.py", line 206, in _get_connection
    register_vector(dbconn)
  File "/home/evanerwee/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/pgvector/psycopg2/register.py", line 19, in register_vector
    raise psycopg2.ProgrammingError('vector type not found in the database')
psycopg2.ProgrammingError: vector type not found in the database
"""

The above exception was the direct cause of the following exception:

[31mProgrammingError[39m                          Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 45[39m
[32m     33[39m doc_urls = [
[32m     34[39m     [33m'[39m[33mhttps://docs.aws.amazon.com/neptune/latest/userguide/intro.html[39m[33m'[39m,
[32m     35[39m     [33m'[39m[33mhttps://docs.aws.amazon.com/neptune-analytics/latest/userguide/what-is-neptune-analytics.html[39m[33m'[39m,
[32m     36[39m     [33m'[39m[33mhttps://docs.aws.amazon.com/neptune-analytics/latest/userguide/neptune-analytics-features.html[39m[33m'[39m,
[32m     37[39m     [33m'[39m[33mhttps://docs.aws.amazon.com/neptune-analytics/latest/userguide/neptune-analytics-vs-neptune-database.html[39m[33m'[39m
[32m     38[39m ]
[32m     40[39m docs = SimpleWebPageReader(
[32m     41[39m     html_to_text=[38;5;28;01mTrue[39;00m,
[32m     42[39m     metadata_fn=[38;5;28;01mlambda[39;00m url:{[33m'[39m[33murl[39m[33m'[39m: url}
[32m     43[39m ).load_data(doc_urls)
[32m---> [39m[32m45[39m graph_index.extract_and_build(docs, show_progress=[38;5;28;01mTrue[39;00m)
[32m     47[39m [38;5;28mprint[39m([33m'[39m[33mComplete[39m[33m'[39m)

[36mFile [39m[32m~/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/graphrag_toolkit/lexical_graph/lexical_graph_index.py:358[39m, in [36mLexicalGraphIndex.extract_and_build[39m[34m(self, nodes, handler, checkpoint, show_progress, **kwargs)[39m
[32m    344[39m build_pipeline = BuildPipeline.create(
[32m    345[39m     components=[
[32m    346[39m         GraphConstruction.for_graph_store([38;5;28mself[39m.graph_store),
[32m   (...)[39m[32m    354[39m     **kwargs
[32m    355[39m )
[32m    357[39m sink_fn = sink [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m handler [38;5;28;01melse[39;00m Pipe(handler.accept)
[32m--> [39m[32m358[39m nodes | extraction_pipeline | build_pipeline | sink_fn

[36mFile [39m[32m~/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/pipe.py:42[39m, in [36mPipe.__ror__[39m[34m(self, other)[39m
[32m     41[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m__ror__[39m([38;5;28mself[39m, other):
[32m---> [39m[32m42[39m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m.function(other)

[36mFile [39m[32m~/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/pipe.py:36[39m, in [36mPipe.__init__.<locals>.<lambda>[39m[34m(iterable, *args2, **kwargs2)[39m
[32m     35[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m__init__[39m([38;5;28mself[39m, function, *args, **kwargs):
[32m---> [39m[32m36[39m     [38;5;28mself[39m.function = [38;5;28;01mlambda[39;00m iterable, *args2, **kwargs2: function(
[32m     37[39m         iterable, *args, *args2, **kwargs, **kwargs2
[32m     38[39m     )
[32m     39[39m     functools.update_wrapper([38;5;28mself[39m, function)

[36mFile [39m[32m~/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/graphrag_toolkit/lexical_graph/indexing/utils/pipeline_utils.py:16[39m, in [36m_sink.<locals>._sink_from[39m[34m(generator)[39m
[32m     15[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_sink_from[39m(generator):
[32m---> [39m[32m16[39m     [38;5;28;01mfor[39;00m item [38;5;129;01min[39;00m generator:
[32m     17[39m         [38;5;28;01mpass[39;00m

[36mFile [39m[32m~/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/graphrag_toolkit/lexical_graph/indexing/build/build_pipeline.py:154[39m, in [36mBuildPipeline.build[39m[34m(self, inputs)[39m
[32m    150[39m node_batches:List[List[BaseNode]] = [38;5;28mself[39m._to_node_batches(source_doc_batches)
[32m    152[39m logger.info([33mf[39m[33m'[39m[33mRunning build pipeline [batch_size: [39m[38;5;132;01m{[39;00m[38;5;28mself[39m.batch_size[38;5;132;01m}[39;00m[33m, num_workers: [39m[38;5;132;01m{[39;00m[38;5;28mself[39m.num_workers[38;5;132;01m}[39;00m[33m, job_sizes: [39m[38;5;132;01m{[39;00m[[38;5;28mlen[39m(b)[38;5;250m [39m[38;5;28;01mfor[39;00m[38;5;250m [39mb[38;5;250m [39m[38;5;129;01min[39;00m[38;5;250m [39mnode_batches][38;5;132;01m}[39;00m[33m, batch_writes_enabled: [39m[38;5;132;01m{[39;00m[38;5;28mself[39m.batch_writes_enabled[38;5;132;01m}[39;00m[33m, batch_write_size: [39m[38;5;132;01m{[39;00m[38;5;28mself[39m.batch_write_size[38;5;132;01m}[39;00m[33m][39m[33m'[39m)
[32m--> [39m[32m154[39m output_nodes = run_pipeline(
[32m    155[39m     [38;5;28mself[39m.inner_pipeline,
[32m    156[39m     node_batches,
[32m    157[39m     num_workers=[38;5;28mself[39m.num_workers,
[32m    158[39m     batch_writes_enabled=[38;5;28mself[39m.batch_writes_enabled,
[32m    159[39m     batch_size=[38;5;28mself[39m.batch_size,
[32m    160[39m     batch_write_size=[38;5;28mself[39m.batch_write_size,
[32m    161[39m     include_domain_labels=[38;5;28mself[39m.include_domain_labels,
[32m    162[39m     **[38;5;28mself[39m.pipeline_kwargs
[32m    163[39m )
[32m    165[39m [38;5;28;01mfor[39;00m node [38;5;129;01min[39;00m output_nodes:
[32m    166[39m     [38;5;28;01myield[39;00m node

[36mFile [39m[32m~/anaconda3/envs/graphrag-toolkit5/lib/python3.12/site-packages/graphrag_toolkit/lexical_graph/indexing/utils/pipeline_utils.py:41[39m, in [36mrun_pipeline[39m[34m(pipeline, node_batches, cache_collection, in_place, num_workers, **kwargs)[39m
[32m     39[39m [38;5;28;01mwith[39;00m ProcessPoolExecutor(max_workers=num_workers) [38;5;28;01mas[39;00m p:
[32m     40[39m     processed_node_batches = p.map(transform, node_batches)
[32m---> [39m[32m41[39m     processed_nodes = [38;5;28msum[39m(processed_node_batches, start=cast(List[BaseNode], []))
[32m     43[39m [38;5;28;01mreturn[39;00m processed_nodes

[36mFile [39m[32m~/anaconda3/envs/graphrag-toolkit5/lib/python3.12/concurrent/futures/process.py:636[39m, in [36m_chain_from_iterable_of_lists[39m[34m(iterable)[39m
[32m    630[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_chain_from_iterable_of_lists[39m(iterable):
[32m    631[39m [38;5;250m    [39m[33;03m"""[39;00m
[32m    632[39m [33;03m    Specialized implementation of itertools.chain.from_iterable.[39;00m
[32m    633[39m [33;03m    Each item in *iterable* should be a list.  This function is[39;00m
[32m    634[39m [33;03m    careful not to keep references to yielded objects.[39;00m
[32m    635[39m [33;03m    """[39;00m
[32m--> [39m[32m636[39m     [38;5;28;01mfor[39;00m element [38;5;129;01min[39;00m iterable:
[32m    637[39m         element.reverse()
[32m    638[39m         [38;5;28;01mwhile[39;00m element:

[36mFile [39m[32m~/anaconda3/envs/graphrag-toolkit5/lib/python3.12/concurrent/futures/_base.py:619[39m, in [36mExecutor.map.<locals>.result_iterator[39m[34m()[39m
[32m    616[39m [38;5;28;01mwhile[39;00m fs:
[32m    617[39m     [38;5;66;03m# Careful not to keep a reference to the popped future[39;00m
[32m    618[39m     [38;5;28;01mif[39;00m timeout [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m--> [39m[32m619[39m         [38;5;28;01myield[39;00m _result_or_cancel(fs.pop())
[32m    620[39m     [38;5;28;01melse[39;00m:
[32m    621[39m         [38;5;28;01myield[39;00m _result_or_cancel(fs.pop(), end_time - time.monotonic())

[36mFile [39m[32m~/anaconda3/envs/graphrag-toolkit5/lib/python3.12/concurrent/futures/_base.py:317[39m, in [36m_result_or_cancel[39m[34m(***failed resolving arguments***)[39m
[32m    315[39m [38;5;28;01mtry[39;00m:
[32m    316[39m     [38;5;28;01mtry[39;00m:
[32m--> [39m[32m317[39m         [38;5;28;01mreturn[39;00m fut.result(timeout)
[32m    318[39m     [38;5;28;01mfinally[39;00m:
[32m    319[39m         fut.cancel()

[36mFile [39m[32m~/anaconda3/envs/graphrag-toolkit5/lib/python3.12/concurrent/futures/_base.py:456[39m, in [36mFuture.result[39m[34m(self, timeout)[39m
[32m    454[39m     [38;5;28;01mraise[39;00m CancelledError()
[32m    455[39m [38;5;28;01melif[39;00m [38;5;28mself[39m._state == FINISHED:
[32m--> [39m[32m456[39m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m.__get_result()
[32m    457[39m [38;5;28;01melse[39;00m:
[32m    458[39m     [38;5;28;01mraise[39;00m [38;5;167;01mTimeoutError[39;00m()

[36mFile [39m[32m~/anaconda3/envs/graphrag-toolkit5/lib/python3.12/concurrent/futures/_base.py:401[39m, in [36mFuture.__get_result[39m[34m(self)[39m
[32m    399[39m [38;5;28;01mif[39;00m [38;5;28mself[39m._exception:
[32m    400[39m     [38;5;28;01mtry[39;00m:
[32m--> [39m[32m401[39m         [38;5;28;01mraise[39;00m [38;5;28mself[39m._exception
[32m    402[39m     [38;5;28;01mfinally[39;00m:
[32m    403[39m         [38;5;66;03m# Break a reference cycle with the exception in self._exception[39;00m
[32m    404[39m         [38;5;28mself[39m = [38;5;28;01mNone[39;00m

[31mProgrammingError[39m: vector type not found in the database